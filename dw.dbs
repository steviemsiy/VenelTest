<?xml version="1.0" encoding="UTF-8" ?>
<project name="MySql" id="Project-17e7" database="MySql" >
	<schema name="dw" >
		<table name="_calls" row_count="338414" spec="" >
			<column name="call_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="client_id" type="VARCHAR" length="3" jt="12" />
			<column name="call_datetime" type="DATETIME" jt="93" />
			<column name="call_source" type="VARCHAR" length="100" jt="12" />
			<column name="call_duration" type="INT" jt="4" />
			<column name="call_answered" type="BOOLEAN" length="1" jt="16" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="caller_number" type="VARCHAR" length="20" jt="12" />
			<column name="caller_name" type="VARCHAR" length="100" jt="12" />
			<column name="caller_city" type="VARCHAR" length="100" jt="12" />
			<column name="caller_state" type="VARCHAR" length="100" jt="12" />
			<column name="caller_zip" type="VARCHAR" length="45" jt="12" />
			<column name="caller_country" type="VARCHAR" length="45" jt="12" />
			<column name="destination_number" type="VARCHAR" length="45" jt="12" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" />
			<column name="call_url" type="VARCHAR" length="100" jt="12" />
			<column name="oi_caller_status" type="VARCHAR" length="100" jt="12" />
			<column name="oi_caller_provider" type="VARCHAR" length="100" jt="12" />
			<column name="oi_caller_dob" type="VARCHAR" length="45" jt="12" />
			<column name="oi_caller_name" type="VARCHAR" length="100" jt="12" />
			<column name="oi_comment" type="VARCHAR" length="1000" jt="12" />
			<column name="oi_reviewer" type="VARCHAR" length="100" jt="12" />
			<column name="oi_reviewer_duration" type="INT" jt="4" />
			<column name="oi_reviewer_date" type="DATETIME" jt="93" />
			<column name="call_system" type="VARCHAR" length="45" jt="12" />
			<column name="call_tags" type="VARCHAR" length="500" jt="12" />
			<column name="call_category" type="VARCHAR" length="45" jt="12" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="_wrkmjg_byweek" row_count="4775" spec="" >
			<column name="prjct_clientid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="prjct_week" type="DATE" jt="91" mandatory="y" />
			<column name="prjct_count" type="BIGINT" jt="-5" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk__wrkmjg_byweek" unique="PRIMARY_KEY" >
				<column name="prjct_clientid" />
				<column name="prjct_week" />
			</index>
			<index name="idx_prjct_week" unique="NORMAL" >
				<column name="prjct_week" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="adroll" row_count="6468" spec="" >
			<column name="adr_acct_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="adr_acct_name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="adr_sub_channel" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="adr_cmpgn_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="adr_cmpgn_name" type="VARCHAR" length="255" jt="12" />
			<column name="adr_cmpgn_start_date" type="DATE" jt="91" />
			<column name="adr_cmpgn_end_date" type="DATE" jt="91" />
			<column name="adr_date" type="DATE" jt="91" mandatory="y" />
			<column name="adr_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="adr_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="adr_spend" type="DECIMAL" length="10" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<index name="pk_adroll" unique="PRIMARY_KEY" >
				<column name="adr_acct_id" />
				<column name="adr_cmpgn_id" />
				<column name="adr_date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="appointment_email" row_count="199244" spec="" >
			<column name="id" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="etag" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="receivedDateTime" type="DATETIME" jt="93" mandatory="y" />
			<column name="subject" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="from_name" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="from_address" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<index name="pk_appointment_email" unique="PRIMARY_KEY" >
				<column name="id" />
				<column name="etag" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="bing_ad" row_count="3742899" spec="" >
			<column name="bng_month" type="DATE" jt="91" mandatory="y" />
			<column name="bng_date" type="DATE" jt="91" mandatory="y" />
			<column name="bng_accountid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_accountname" type="VARCHAR" length="255" jt="12" />
			<column name="bng_campaignid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_campaignname" type="VARCHAR" length="255" jt="12" />
			<column name="bng_adgroupid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_adgroupname" type="VARCHAR" length="255" jt="12" />
			<column name="bng_keywordid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_keyword" type="VARCHAR" length="255" jt="12" />
			<column name="bng_adid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_devicetype" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="bng_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="bng_spend" type="DECIMAL" length="10" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="bng_destinationurl" type="VARCHAR" length="255" jt="12" />
			<column name="bng_finalurl" type="VARCHAR" length="255" jt="12" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<index name="pk_bing_ad" unique="PRIMARY_KEY" >
				<column name="bng_month" />
				<column name="bng_date" />
				<column name="bng_accountid" />
				<column name="bng_campaignid" />
				<column name="bng_adgroupid" />
				<column name="bng_keywordid" />
				<column name="bng_adid" />
				<column name="bng_devicetype" />
			</index>
			<index name="idx_bng_month" unique="NORMAL" >
				<column name="bng_month" />
			</index>
			<index name="idx_bing_ad_client_id_reportinggroup" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="bing_ad_org" row_count="1032775" spec="" >
			<column name="bng_month" type="DATE" jt="91" mandatory="y" />
			<column name="bng_accountid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_accountname" type="VARCHAR" length="255" jt="12" />
			<column name="bng_campaignid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_campaignname" type="VARCHAR" length="255" jt="12" />
			<column name="bng_adgroupid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_adgroupname" type="VARCHAR" length="255" jt="12" />
			<column name="bng_keywordid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_keyword" type="VARCHAR" length="255" jt="12" />
			<column name="bng_adid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_devicetype" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="bng_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="bng_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="bng_spend" type="DECIMAL" length="10" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="bing_destinationurl" type="VARCHAR" length="255" jt="12" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="calendar" row_count="4728" spec="" >
			<column name="cal_date" type="DATE" jt="91" mandatory="y" />
			<column name="cal_year" type="INT" jt="4" />
			<column name="cal_month" type="INT" jt="4" />
			<column name="cal_day" type="VARCHAR" length="45" jt="12" />
			<column name="cal_startofmonth" type="DATE" jt="91" />
			<column name="cal_quarter" type="INT" jt="4" />
			<column name="cal_monthabbr" type="VARCHAR" length="45" jt="12" />
			<column name="cal_monthname" type="VARCHAR" length="45" jt="12" />
			<column name="cal_dayname" type="VARCHAR" length="45" jt="12" />
			<index name="pk_calendar" unique="PRIMARY_KEY" >
				<column name="cal_date" />
			</index>
			<index name="idx_calendar_cal_startofmonth" unique="NORMAL" >
				<column name="cal_startofmonth" />
			</index>
			<index name="idx_calendar_cal_year" unique="NORMAL" >
				<column name="cal_year" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="call" row_count="1895077" spec="" >
			<column name="call_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="call_datetime" type="DATETIME" jt="93" />
			<column name="call_source" type="VARCHAR" length="100" jt="12" />
			<column name="call_duration" type="INT" jt="4" />
			<column name="call_answered" type="INT" jt="4" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="caller_number" type="VARCHAR" length="20" jt="12" />
			<column name="caller_name" type="VARCHAR" length="100" jt="12" />
			<column name="caller_city" type="VARCHAR" length="100" jt="12" />
			<column name="caller_state" type="VARCHAR" length="100" jt="12" />
			<column name="caller_zip" type="VARCHAR" length="45" jt="12" />
			<column name="caller_country" type="VARCHAR" length="45" jt="12" />
			<column name="destination_number" type="VARCHAR" length="45" jt="12" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" />
			<column name="call_url" type="VARCHAR" length="255" jt="12" />
			<column name="oi_caller_status" type="VARCHAR" length="100" jt="12" />
			<column name="oi_caller_provider" type="VARCHAR" length="100" jt="12" />
			<column name="oi_caller_dob" type="VARCHAR" length="45" jt="12" />
			<column name="oi_caller_name" type="VARCHAR" length="100" jt="12" />
			<column name="oi_comment" type="VARCHAR" length="1000" jt="12" />
			<column name="oi_reviewer" type="VARCHAR" length="100" jt="12" />
			<column name="oi_reviewer_duration" type="INT" jt="4" />
			<column name="oi_reviewer_date" type="DATETIME" jt="93" />
			<column name="call_system" type="VARCHAR" length="45" jt="12" />
			<column name="call_tags" type="VARCHAR" length="500" jt="12" />
			<column name="call_category" type="VARCHAR" length="45" jt="12" />
			<column name="call_reporting_month" type="DATE" jt="91" >
				<identity><![CDATA[GENERATED  ALWAYS AS (date_format(cast(`call_datetime` as date), _utf8mb3'%Y-%m-01'))]]></identity>
			</column>
			<column name="call_count" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['1']]></defo>
			</column>
			<index name="pk_call" unique="PRIMARY_KEY" >
				<column name="call_id" />
			</index>
			<index name="idx_call_call_datetime" unique="NORMAL" >
				<column name="call_datetime" />
			</index>
			<index name="idx_call_tracking_number" unique="NORMAL" >
				<column name="tracking_number" />
			</index>
			<index name="idx_call_call_answered_call_duration" unique="NORMAL" >
				<column name="call_answered" />
				<column name="call_duration" />
			</index>
			<index name="idx_call_call_duration" unique="NORMAL" >
				<column name="call_duration" />
			</index>
			<index name="idx_call_call_reporting_month" unique="NORMAL" >
				<column name="call_reporting_month" />
			</index>
			<index name="idx_call_clientid_reportingmonth" unique="NORMAL" >
				<column name="client_id" />
				<column name="call_reporting_month" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="call_bkup" row_count="650716" spec="" >
			<column name="call_id" type="VARCHAR" length="50" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="client_id" type="VARCHAR" length="5" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="call_datetime" type="DATETIME" jt="93" />
			<column name="call_source" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="call_duration" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="call_answered" type="INT" jt="4" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="caller_number" type="VARCHAR" length="20" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="caller_name" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="caller_city" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="caller_state" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="caller_zip" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="caller_country" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="destination_number" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="call_url" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_caller_status" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_caller_provider" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_caller_dob" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_caller_name" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_comment" type="VARCHAR" length="1000" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_reviewer" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="oi_reviewer_duration" type="INT" jt="4" />
			<column name="oi_reviewer_date" type="DATETIME" jt="93" />
			<column name="call_system" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="call_tags" type="VARCHAR" length="500" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="call_category" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="call_reporting_month" type="DATE" jt="91" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="call_mor" row_count="25442" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="reporting_group" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="reporting_month" type="DATE" jt="91" mandatory="y" />
			<column name="call_category" type="VARCHAR" length="45" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="call_count" type="DECIMAL" length="63" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="call_value" type="DECIMAL" length="65" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_call_mor" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reporting_group" />
				<column name="reporting_month" />
				<column name="call_category" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="call_webhook" row_count="0" spec="" >
			<column name="call_webhook_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="call_signature" type="VARCHAR" length="100" jt="12" />
			<column name="call_data" type="JSON" jt="2000" />
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<index name="pk_call_webhook" unique="PRIMARY_KEY" >
				<column name="call_webhook_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail" row_count="326765" spec="" >
			<comment><![CDATA[data pulled from call rail]]></comment>
			<column name="cr_callid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="cr_company" type="VARCHAR" length="100" jt="12" />
			<column name="cr_companyid" type="VARCHAR" length="45" jt="12" />
			<column name="cr_starttime" type="VARCHAR" length="45" jt="12" />
			<column name="cr_sourcename" type="VARCHAR" length="100" jt="12" />
			<column name="cr_source" type="VARCHAR" length="100" jt="12" />
			<column name="cr_tags" type="JSON" jt="2000" />
			<column name="cr_note" type="VARCHAR" length="2000" jt="12" />
			<column name="cr_duration" type="VARCHAR" length="45" jt="12" />
			<column name="cr_answered" type="VARCHAR" length="45" jt="12" />
			<column name="cr_number" type="VARCHAR" length="45" jt="12" />
			<column name="cr_name" type="VARCHAR" length="100" jt="12" />
			<column name="cr_city" type="VARCHAR" length="45" jt="12" />
			<column name="cr_state" type="VARCHAR" length="100" jt="12" />
			<column name="cr_zip" type="VARCHAR" length="45" jt="12" />
			<column name="cr_country" type="VARCHAR" length="45" jt="12" />
			<column name="cr_firsttime" type="VARCHAR" length="45" jt="12" />
			<column name="cr_destinationnumber" type="VARCHAR" length="45" jt="12" />
			<column name="cr_trackingnumber" type="VARCHAR" length="45" jt="12" />
			<column name="cr_recordingurl" type="VARCHAR" length="500" jt="12" />
			<column name="cr_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="cr_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_callrail" unique="PRIMARY_KEY" >
				<column name="cr_callid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail_companies" row_count="76" spec="" >
			<column name="crc_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="crc_name" type="VARCHAR" length="500" jt="12" />
			<column name="crc_status" type="VARCHAR" length="45" jt="12" />
			<column name="crc_time_zone" type="VARCHAR" length="45" jt="12" />
			<column name="crc_clientid" type="VARCHAR" length="5" jt="12" />
			<column name="crc_created_at" type="DATETIME" jt="93" />
			<column name="crc_disabled_at" type="DATETIME" jt="93" />
			<index name="pk_callrail_companies" unique="PRIMARY_KEY" >
				<column name="crc_id" />
			</index>
			<index name="idx_callrail_companies_crc_status" unique="NORMAL" >
				<column name="crc_status" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail_companies_old" row_count="142" spec="" >
			<column name="crc_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="crc_name" type="VARCHAR" length="500" jt="12" />
			<column name="crc_status" type="VARCHAR" length="45" jt="12" />
			<column name="crc_time_zone" type="VARCHAR" length="45" jt="12" />
			<column name="crc_clientid" type="VARCHAR" length="5" jt="12" />
			<column name="crc_created_at" type="DATETIME" jt="93" />
			<column name="crc_disabled_at" type="DATETIME" jt="93" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail_formsubmission" row_count="65881" spec="" >
			<column name="id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="company_id" type="VARCHAR" length="45" jt="12" />
			<column name="form_data" type="JSON" jt="2000" />
			<column name="form_url" type="VARCHAR" length="400" jt="12" />
			<column name="referrer" type="VARCHAR" length="255" jt="12" />
			<column name="first_form" type="VARCHAR" length="45" jt="12" />
			<column name="submitted_at" type="DATETIME" jt="93" />
			<column name="email" type="VARCHAR" length="100" jt="12" />
			<column name="phone" type="VARCHAR" length="100" jt="12" />
			<column name="first_name" type="VARCHAR" length="100" jt="12" />
			<column name="last_name" type="VARCHAR" length="100" jt="12" />
			<column name="location" type="VARCHAR" length="100" jt="12" />
			<index name="pk_callrail_formsubmission" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail_tags" row_count="0" spec="" >
			<column name="callid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="name" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="created_at" type="DATETIME" jt="93" mandatory="y" />
			<column name="crt_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_callrail_tags" unique="PRIMARY_KEY" >
				<column name="callid" />
				<column name="name" />
			</index>
			<index name="unq_callrail_tags_callid" unique="UNIQUE_KEY" >
				<column name="callid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail_trackers" row_count="1441" spec="" >
			<column name="crt_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="crt_name" type="VARCHAR" length="500" jt="12" />
			<column name="crt_type" type="VARCHAR" length="100" jt="12" />
			<column name="crt_status" type="VARCHAR" length="45" jt="12" />
			<column name="crt_destination_number" type="VARCHAR" length="45" jt="12" />
			<column name="crt_tracking_numbers" type="VARCHAR" length="100" jt="12" />
			<column name="crt_whisper_message" type="VARCHAR" length="100" jt="12" />
			<column name="crt_sms_supported" type="VARCHAR" length="45" jt="12" />
			<column name="crt_sms_enabled" type="VARCHAR" length="45" jt="12" />
			<column name="crt_company_id" type="VARCHAR" length="45" jt="12" />
			<column name="crt_company_name" type="VARCHAR" length="100" jt="12" />
			<column name="crt_clientid" type="VARCHAR" length="5" jt="12" />
			<column name="crt_created_at" type="DATETIME" jt="93" />
			<column name="crt_disabled_at" type="DATETIME" jt="93" />
			<column name="crt_source_landing" type="VARCHAR" length="500" jt="12" />
			<index name="pk_callrail_trackers" unique="PRIMARY_KEY" >
				<column name="crt_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callrail_trackers_old" row_count="1967" spec="" >
			<column name="crt_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="crt_name" type="VARCHAR" length="500" jt="12" />
			<column name="crt_type" type="VARCHAR" length="100" jt="12" />
			<column name="crt_status" type="VARCHAR" length="45" jt="12" />
			<column name="crt_destination_number" type="VARCHAR" length="45" jt="12" />
			<column name="crt_tracking_numbers" type="VARCHAR" length="100" jt="12" />
			<column name="crt_whisper_message" type="VARCHAR" length="100" jt="12" />
			<column name="crt_sms_supported" type="VARCHAR" length="45" jt="12" />
			<column name="crt_sms_enabled" type="VARCHAR" length="45" jt="12" />
			<column name="crt_company_id" type="VARCHAR" length="45" jt="12" />
			<column name="crt_company_name" type="VARCHAR" length="100" jt="12" />
			<column name="crt_clientid" type="VARCHAR" length="5" jt="12" />
			<column name="crt_created_at" type="DATETIME" jt="93" />
			<column name="crt_disabled_at" type="DATETIME" jt="93" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="callsource" row_count="86800" spec="" >
			<column name="call_client_id" type="INT" jt="4" />
			<column name="call_category" type="MEDIUMTEXT" jt="-1" />
			<column name="call_datetime" type="MEDIUMTEXT" jt="-1" />
			<column name="call_id" type="INT" jt="4" />
			<column name="call_company" type="MEDIUMTEXT" jt="-1" />
			<column name="call_sourcename" type="MEDIUMTEXT" jt="-1" />
			<column name="call_trackingnumber" type="BIGINT" jt="-5" />
			<column name="call_caller_number" type="MEDIUMTEXT" jt="-1" />
			<column name="call_destination_number" type="MEDIUMTEXT" jt="-1" />
			<column name="call_caller_city" type="MEDIUMTEXT" jt="-1" />
			<column name="call_caller_state" type="MEDIUMTEXT" jt="-1" />
			<column name="call_caller_zip" type="MEDIUMTEXT" jt="-1" />
			<column name="call_caller_country" type="MEDIUMTEXT" jt="-1" />
			<column name="call_caller_name" type="MEDIUMTEXT" jt="-1" />
			<column name="call_system" type="MEDIUMTEXT" jt="-1" />
			<column name="call_duration" type="INT" jt="4" />
			<column name="call_reportinggroup" type="MEDIUMTEXT" jt="-1" />
			<column name="call_subcategory" type="MEDIUMTEXT" jt="-1" />
			<column name="call_subcategorycommemt" type="MEDIUMTEXT" jt="-1" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="campaign_summary" row_count="66231" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="reporting_group" type="VARCHAR" length="508" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="Venel Paid" type="VARCHAR" length="3" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="GeoPlacement" type="VARCHAR" length="3" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="reporting_month" type="VARCHAR" length="10" jt="12" />
			<column name="Campaign Name" type="VARCHAR" length="255" jt="12" />
			<column name="campaign_start" type="DATETIME" jt="93" />
			<column name="campaign_end" type="DATETIME" jt="93" />
			<column name="Device" type="VARCHAR" length="50" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="Channel" type="VARCHAR" length="11" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="Impressions" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Clicks" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Cost" type="DECIMAL" length="36" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="Reach" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Engagement" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Likes" type="DECIMAL" length="32" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Comments" type="DECIMAL" length="32" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="idx_clientid_reportingmonth" unique="NORMAL" >
				<column name="client_id" />
				<column name="reporting_month" />
			</index>
			<index name="idx_campaign_summary_client_id_reporting_group" unique="NORMAL" >
				<column name="client_id" />
				<column name="reporting_group" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="campaign_summary_bydate" row_count="586953" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="reporting_group" type="VARCHAR" length="508" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="Venel Paid" type="VARCHAR" length="3" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="GeoPlacement" type="VARCHAR" length="3" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="date" type="DATE" jt="91" />
			<column name="Campaign Name" type="VARCHAR" length="255" jt="12" />
			<column name="campaign_start" type="DATE" jt="91" />
			<column name="campaign_end" type="DATE" jt="91" />
			<column name="Device" type="VARCHAR" length="50" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="Channel" type="VARCHAR" length="50" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="Impressions" type="DECIMAL" length="12" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Clicks" type="DECIMAL" length="12" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Cost" type="DECIMAL" length="16" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="Reach" type="DECIMAL" length="12" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Engagement" type="DECIMAL" length="12" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Likes" type="DECIMAL" length="12" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Comments" type="DECIMAL" length="12" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="channel" row_count="7" spec="" >
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="channel_sortorder" type="INT" jt="4" />
			<column name="channel_status" type="VARCHAR" length="10" jt="12" >
				<defo><![CDATA['Active']]></defo>
			</column>
			<column name="channel_category" type="VARCHAR" length="45" jt="12" />
			<column name="channel_line_item_description" type="VARCHAR" length="45" jt="12" />
			<index name="pk_channel" unique="PRIMARY_KEY" >
				<column name="channel" />
			</index>
			<index name="idx_channel_channel_category" unique="NORMAL" >
				<column name="channel_category" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="channel_category" row_count="5" spec="" >
			<column name="channel_category" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="channel_category_color" type="VARCHAR" length="45" jt="12" />
			<index name="pk_channel_category" unique="PRIMARY_KEY" >
				<column name="channel_category" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="chatbot_busiest_periods" row_count="42057" spec="" >
			<column name="story_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="chtbt_day" type="INT" jt="4" mandatory="y" />
			<column name="chtbtbp_hour" type="INT" jt="4" mandatory="y" />
			<column name="chtbtbp_value" type="INT" jt="4" />
			<column name="chtbtbp_usage" type="INT" jt="4" />
			<index name="pk_chatbot_busiest_periods" unique="PRIMARY_KEY" >
				<column name="story_id" />
				<column name="reportingmonth" />
				<column name="chtbt_day" />
				<column name="chtbtbp_hour" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="chatbot_conversations" row_count="5300" spec="" >
			<column name="story_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="date" type="DATE" jt="91" mandatory="y" />
			<column name="conversations" type="DECIMAL" length="12" decimal="2" jt="3" />
			<index name="pk_chatbot_conversations" unique="PRIMARY_KEY" >
				<column name="story_id" />
				<column name="date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="chatbot_interactions" row_count="20196" spec="" >
			<column name="story_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="interaction_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="chtbtint_type" type="VARCHAR" length="45" jt="12" />
			<column name="chtbtint_name" type="VARCHAR" length="255" jt="12" />
			<column name="chtbtint_usage" type="INT" jt="4" />
			<column name="chtbtint_value" type="INT" jt="4" />
			<column name="chtbtint_version" type="VARCHAR" length="45" jt="12" />
			<index name="pk_chatbot_interactions" unique="PRIMARY_KEY" >
				<column name="story_id" />
				<column name="interaction_id" />
				<column name="reportingmonth" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="chatbot_stories" row_count="19" spec="" >
			<column name="id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="name" type="VARCHAR" length="50" jt="12" />
			<column name="description" type="VARCHAR" length="255" jt="12" />
			<column name="version" type="INT" jt="4" />
			<column name="published" type="VARCHAR" length="5" jt="12" />
			<column name="integrations" type="JSON" jt="2000" />
			<column name="metrics" type="JSON" jt="2000" />
			<index name="pk_chatbot_stories" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client" row_count="78" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="client_name" type="VARCHAR" length="150" jt="12" />
			<column name="client_city" type="VARCHAR" length="100" jt="12" />
			<column name="client_state" type="VARCHAR" length="20" jt="12" />
			<column name="client_status" type="VARCHAR" length="15" jt="12" />
			<column name="client_generate_mor" type="VARCHAR" length="5" jt="12" />
			<column name="ACCOUNT PLANNER" type="VARCHAR" length="500" jt="12" />
			<column name="COMMUNICATION DIRECTOR" type="VARCHAR" length="500" jt="12" />
			<column name="PRACTICE CONTACT" type="VARCHAR" length="500" jt="12" />
			<column name="CONTACT EMAIL" type="VARCHAR" length="500" jt="12" />
			<column name="client_oi_coordinator" type="VARCHAR" length="150" jt="12" />
			<column name="EMR" type="VARCHAR" length="500" jt="12" />
			<column name="PATIENT PORTAL Y OR N" type="VARCHAR" length="500" jt="12" />
			<column name="PP - SCHEDULE APPT" type="VARCHAR" length="500" jt="12" />
			<column name="Appointment SendTo" type="VARCHAR" length="500" jt="12" />
			<column name="Referral SendTo" type="VARCHAR" length="500" jt="12" />
			<column name="Reviews API" type="VARCHAR" length="500" jt="12" />
			<column name="Email Verification - Appt Request" type="VARCHAR" length="500" jt="12" />
			<column name="Email Verification - Referral" type="VARCHAR" length="500" jt="12" />
			<column name="Email Subject - Appt Request" type="VARCHAR" length="500" jt="12" />
			<column name="Email Subject - Referral Request" type="VARCHAR" length="500" jt="12" />
			<column name="client_folder" type="VARCHAR" length="100" jt="12" />
			<column name="client_site_url" type="VARCHAR" length="500" jt="12" />
			<column name="client_site_token" type="VARCHAR" length="45" jt="12" />
			<column name="client_site_api_path" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['api-v1']]></defo>
			</column>
			<column name="client_site_appointment_path" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['/veneldata-patient']]></defo>
			</column>
			<column name="client_site_referral_path" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['/veneldata-referral']]></defo>
			</column>
			<column name="client_account_planner" type="VARCHAR" length="100" jt="12" />
			<column name="client_communication_director" type="VARCHAR" length="100" jt="12" />
			<column name="client_integration_type" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['None']]></defo>
			</column>
			<column name="client_adwords_account" type="VARCHAR" length="45" jt="12" />
			<column name="client_bingads_account" type="VARCHAR" length="45" jt="12" />
			<column name="client_reporting_periods" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['12']]></defo>
			</column>
			<column name="client_phone" type="VARCHAR" length="45" jt="12" />
			<column name="client_spend_pct" type="DECIMAL" length="2" decimal="2" jt="3" >
				<defo><![CDATA['0.85']]></defo>
			</column>
			<column name="client_reply_approval_email" type="VARCHAR" length="255" jt="12" />
			<column name="client_ga_viewid" type="VARCHAR" length="45" jt="12" />
			<column name="client_pf_target_id" type="VARCHAR" length="255" jt="12" />
			<column name="client_pf_contacturl" type="VARCHAR" length="255" jt="12" />
			<column name="client_reviews_pe" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['No']]></defo>
			</column>
			<column name="client_startdate" type="DATE" jt="91" />
			<column name="client_infofact_url" type="VARCHAR" length="255" jt="12" />
			<column name="client_infofact_token" type="VARCHAR" length="45" jt="12" />
			<column name="client_chatzipurl" type="VARCHAR" length="255" jt="12" />
			<column name="client_appointment_url" type="VARCHAR" length="255" jt="12" >
				<defo><![CDATA['/patient-appointment']]></defo>
			</column>
			<column name="client_review_url" type="VARCHAR" length="255" jt="12" >
				<defo><![CDATA['/share-your-experience']]></defo>
			</column>
			<index name="pk_client" unique="PRIMARY_KEY" >
				<column name="client_id" />
			</index>
			<index name="idx_client_client_status" unique="NORMAL" >
				<column name="client_status" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_email" row_count="74" spec="" >
			<column name="em_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="em_account" type="VARCHAR" length="45" jt="12" />
			<column name="em_url" type="VARCHAR" length="255" jt="12" />
			<column name="em_userid" type="VARCHAR" length="100" jt="12" />
			<column name="em_password" type="VARCHAR" length="45" jt="12" />
			<column name="em_toolclientid" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="em_toolapikey" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="em_tool" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<index name="pk_client_email" unique="PRIMARY_KEY" >
				<column name="em_clientid" />
				<column name="em_toolclientid" />
				<column name="em_toolapikey" />
				<column name="em_tool" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_ext_reviews" row_count="850" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="google_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="google_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="healthgrades_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="healthgrades_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="yelp_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="yelp_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="vitals_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="vitals_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="webmd_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="webmd_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ratemd_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="ratemd_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_client_ext_reviews" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="npi" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_ext_reviews_bkup" row_count="754" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="google_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="google_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="healthgrades_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="healthgrades_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="yelp_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="yelp_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="vitals_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="vitals_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="webmd_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="webmd_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ratemd_rating" type="DECIMAL" length="4" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="ratemd_reviews" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_gmb" row_count="1377" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" >
				<defo><![CDATA['999']]></defo>
			</column>
			<column name="gmb_npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="gmb_location_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="gmb_placeid" type="VARCHAR" length="128" jt="12" />
			<column name="gmb_location_name" type="VARCHAR" length="256" jt="12" />
			<column name="gmb_active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="gmb_locality" type="VARCHAR" length="100" jt="12" />
			<column name="gmb_administrativearea" type="VARCHAR" length="100" jt="12" />
			<column name="gmb_addressline" type="VARCHAR" length="255" jt="12" />
			<column name="gmb_postalcode" type="VARCHAR" length="45" jt="12" />
			<column name="gmb_mapsurl" type="VARCHAR" length="255" jt="12" />
			<column name="gmb_storecode" type="VARCHAR" length="255" jt="12" />
			<column name="gmb_accountid" type="VARCHAR" length="128" jt="12" />
			<index name="pk_client_gmb" unique="PRIMARY_KEY" >
				<column name="gmb_npi" />
				<column name="gmb_location_id" />
			</index>
			<index name="idx_client_gmb_client_id" unique="NORMAL" >
				<column name="client_id" />
			</index>
			<index name="idx_client_gmb_gmb_location_id" unique="NORMAL" >
				<column name="gmb_location_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_gmb_bkup" row_count="72" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="gmb_npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="gmb_location_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="gmb_placeid" type="VARCHAR" length="128" jt="12" />
			<column name="gmb_location_name" type="VARCHAR" length="256" jt="12" />
			<column name="gmb_active" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['1']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_gmb_location_phone" row_count="73" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="location_name" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="location_phone" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<index name="pk_client_gmb_location_phone" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="location_name" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_gmb_responses" row_count="19" spec="" >
			<column name="response_name" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="response_text" type="LONGTEXT" jt="-1" />
			<column name="response_type" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['review']]></defo>
			</column>
			<index name="pk_client_gmb_responses" unique="PRIMARY_KEY" >
				<column name="response_name" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_invoice_config" row_count="7669" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="description" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="qb_item_id" type="INT" jt="4" mandatory="y" />
			<column name="amount" type="DECIMAL" length="18" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="4000" jt="12" />
			<column name="receipt_file" type="VARCHAR" length="255" jt="12" />
			<column name="end_date" type="DATE" jt="91" />
			<column name="active" type="INT" jt="4" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_client_invoice_config" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportingmonth" />
				<column name="description" />
				<column name="qb_item_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_invoice_config_bkup" row_count="15725" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="description" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="qb_item_id" type="INT" jt="4" mandatory="y" />
			<column name="amount" type="DECIMAL" length="18" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="4000" jt="12" />
			<column name="receipt_file" type="VARCHAR" length="255" jt="12" />
			<column name="active" type="INT" jt="4" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_npiregistry_postal" row_count="2364" spec="" >
			<column name="npi" type="VARCHAR" length="20" jt="12" mandatory="y" />
			<column name="loc_address" type="VARCHAR" length="255" jt="12" />
			<column name="loc_address2" type="VARCHAR" length="255" jt="12" />
			<column name="loc_city" type="VARCHAR" length="100" jt="12" />
			<column name="loc_state" type="VARCHAR" length="45" jt="12" />
			<column name="loc_postalcode" type="VARCHAR" length="45" jt="12" />
			<column name="loc_country" type="VARCHAR" length="45" jt="12" />
			<column name="loc_fax" type="VARCHAR" length="45" jt="12" />
			<column name="loc_phone" type="VARCHAR" length="45" jt="12" />
			<column name="loc_purpose" type="VARCHAR" length="10" jt="12" />
			<column name="mail_address" type="VARCHAR" length="255" jt="12" />
			<column name="mail_address2" type="VARCHAR" length="255" jt="12" />
			<column name="mail_city" type="VARCHAR" length="100" jt="12" />
			<column name="mail_postalcode" type="VARCHAR" length="45" jt="12" />
			<column name="mail_state" type="VARCHAR" length="45" jt="12" />
			<column name="mail_country" type="VARCHAR" length="45" jt="12" />
			<column name="mail_fax" type="VARCHAR" length="45" jt="12" />
			<column name="mail_phone" type="VARCHAR" length="45" jt="12" />
			<column name="mail_purpose" type="VARCHAR" length="45" jt="12" />
			<column name="credential" type="VARCHAR" length="45" jt="12" />
			<column name="first_name" type="VARCHAR" length="100" jt="12" />
			<column name="last_name" type="VARCHAR" length="255" jt="12" />
			<column name="middle_name" type="VARCHAR" length="100" jt="12" />
			<column name="last_updated" type="DATE" jt="91" />
			<column name="sole_proprietor" type="VARCHAR" length="10" jt="12" />
			<column name="type" type="VARCHAR" length="10" jt="12" />
			<column name="gender" type="VARCHAR" length="10" jt="12" />
			<column name="name" type="VARCHAR" length="255" jt="12" />
			<column name="organization_name" type="VARCHAR" length="255" jt="12" />
			<index name="pk_client_npiregistry_postal" unique="PRIMARY_KEY" >
				<column name="npi" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_npiregistry_taxonomy" row_count="3648" spec="" >
			<column name="npi" type="VARCHAR" length="20" jt="12" mandatory="y" />
			<column name="code" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="desc" type="VARCHAR" length="100" jt="12" />
			<column name="license" type="VARCHAR" length="45" jt="12" />
			<column name="primary" type="VARCHAR" length="5" jt="12" />
			<column name="state" type="VARCHAR" length="5" jt="12" />
			<index name="pk_client_npiregistry_taxonomy" unique="PRIMARY_KEY" >
				<column name="npi" />
				<column name="code" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_pe_info" row_count="46" spec="" >
			<column name="clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="appt_url" type="VARCHAR" length="255" jt="12" />
			<column name="url" type="VARCHAR" length="255" jt="12" />
			<column name="title" type="VARCHAR" length="255" jt="12" />
			<column name="logo" type="VARCHAR" length="500" jt="12" />
			<column name="logo_width" type="INT" jt="4" />
			<column name="logo_height" type="INT" jt="4" />
			<column name="logo_url" type="VARCHAR" length="500" jt="12" />
			<index name="pk_client_pe_info" unique="PRIMARY_KEY" >
				<column name="clientid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_pe_locations" row_count="231" spec="" >
			<column name="unique_location_id" type="INT" jt="4" mandatory="y" />
			<column name="clientid" type="VARCHAR" length="5" jt="12" />
			<column name="title" type="VARCHAR" length="255" jt="12" />
			<column name="address1" type="VARCHAR" length="255" jt="12" />
			<column name="address2" type="VARCHAR" length="255" jt="12" />
			<column name="city" type="VARCHAR" length="100" jt="12" />
			<column name="state" type="VARCHAR" length="50" jt="12" />
			<column name="postal_code" type="VARCHAR" length="45" jt="12" />
			<column name="custom_location_country" type="VARCHAR" length="45" jt="12" />
			<column name="appointment_line" type="VARCHAR" length="45" jt="12" />
			<column name="location_geo_lat" type="DECIMAL" length="18" decimal="12" jt="3" />
			<column name="location_geo_long" type="DECIMAL" length="18" decimal="12" jt="3" />
			<column name="state_abbr" type="VARCHAR" length="45" jt="12" />
			<column name="nid" type="INT" jt="4" />
			<index name="pk_client_pe_locations" unique="PRIMARY_KEY" >
				<column name="unique_location_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_personnel" row_count="104" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="location" type="VARCHAR" length="150" jt="12" />
			<index name="pk_client_personnel" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="npi" />
			</index>
			<index name="idx_client_personnel_npi" unique="NORMAL" >
				<column name="npi" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_pr" row_count="343" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="job_name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="publication_name" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="article_name" type="VARCHAR" length="150" jt="12" mandatory="y" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="url" type="VARCHAR" length="400" jt="12" mandatory="y" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="online_print" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="job_date" type="DATE" jt="91" mandatory="y" />
			<column name="circulation" type="INT" jt="4" />
			<column name="value" type="DECIMAL" length="18" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_client_pr" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="job_name" />
				<column name="publication_name" />
				<column name="online_print" />
				<column name="job_date" />
				<column name="article_name" />
				<column name="url" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_preference_awareness" row_count="43" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="most_preferred" type="VARCHAR" length="1" jt="12" >
				<defo><![CDATA['Y']]></defo>
			</column>
			<column name="last_study_date" type="DATE" jt="91" mandatory="y" >
				<defo><![CDATA['1900-01-01']]></defo>
			</column>
			<column name="contact_listed" type="VARCHAR" length="100" jt="12" />
			<column name="contact_address" type="VARCHAR" length="500" jt="12" />
			<column name="message" type="VARCHAR" length="1000" jt="12" />
			<column name="preference_pct" type="DECIMAL" length="6" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="awareness_pct" type="DECIMAL" length="6" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="500" jt="12" />
			<index name="pk_client_preference_awareness" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="last_study_date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_projects" row_count="1269" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" >
				<defo><![CDATA['1990-01-01']]></defo>
			</column>
			<column name="recommended_projects" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="recommended_projects_complete" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="recommended_projects_inprogress" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="additional_projects_complete" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="additional_project_inprogress" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_client_projects" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportingmonth" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_projects_online" row_count="21399" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="id" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="title" type="VARCHAR" length="255" jt="12" />
			<column name="internal" type="VARCHAR" length="45" jt="12" />
			<column name="type" type="VARCHAR" length="45" jt="12" />
			<column name="contractual" type="VARCHAR" length="45" jt="12" />
			<column name="creation_date" type="DATE" jt="91" />
			<column name="workflow_state" type="VARCHAR" length="45" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="reportingmonth" type="DATE" jt="91" />
			<column name="updated_date" type="DATE" jt="91" />
			<index name="pk_client_projects_online" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_referral_reach" row_count="161" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="job_name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="job_type" type="VARCHAR" length="45" jt="12" />
			<column name="quarter" type="VARCHAR" length="5" jt="12" />
			<column name="job_action_type" type="VARCHAR" length="45" jt="12" />
			<column name="job_number" type="VARCHAR" length="45" jt="12" />
			<column name="job_status" type="VARCHAR" length="45" jt="12" />
			<column name="completion_date" type="DATE" jt="91" />
			<column name="notes" type="VARCHAR" length="500" jt="12" />
			<column name="objective_1" type="VARCHAR" length="100" jt="12" />
			<column name="objective_2" type="VARCHAR" length="100" jt="12" />
			<column name="objective_3" type="VARCHAR" length="100" jt="12" />
			<column name="objective_4" type="VARCHAR" length="100" jt="12" />
			<column name="objective_5" type="VARCHAR" length="100" jt="12" />
			<column name="total_objectives" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="total_contacts" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="total_contacts_reached" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_client_referral_reach" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="job_name" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_call_config" row_count="36682" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="querystring" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="target_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
				<comment><![CDATA[1 = Active 0 = InActive]]></comment>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="tracker_name" type="VARCHAR" length="150" jt="12" />
			<column name="include_mor" type="VARCHAR" length="2" jt="12" >
				<defo><![CDATA['Y']]></defo>
			</column>
			<index name="pk_client_rg_call_config" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportinggroup" />
				<column name="reportingmonth" />
				<column name="querystring" />
				<column name="tracking_number" />
				<column name="target_number" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_call_config_20220419" row_count="28824" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="querystring" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="target_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
				<comment><![CDATA[1 = Active 0 = InActive]]></comment>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="tracker_name" type="VARCHAR" length="150" jt="12" />
			<column name="include_mor" type="VARCHAR" length="2" jt="12" >
				<defo><![CDATA['Y']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_call_config_bkup" row_count="28425" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="querystring" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="target_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
				<comment><![CDATA[1 = Active 0 = InActive]]></comment>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="tracker_name" type="VARCHAR" length="150" jt="12" />
			<column name="include_mor" type="VARCHAR" length="2" jt="12" >
				<defo><![CDATA['Y']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_call_config_new" row_count="7752" spec="" >
			<comment><![CDATA[This table is used to house the mapping of reporting group to querystring to tracking#]]></comment>
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="querystring" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="target_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
				<comment><![CDATA[1 = Active 0 = InActive]]></comment>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="tracker_name" type="VARCHAR" length="150" jt="12" />
			<index name="pk_client_rg_call_config_new" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportinggroup" />
				<column name="reportingmonth" />
				<column name="querystring" />
				<column name="tracking_number" />
				<column name="target_number" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_cmpgn_config" row_count="27475" spec="" >
			<comment><![CDATA[This table is used to house the mapping of reporting group to querystring to tracking# to campaign and invoice\\planned spend]]></comment>
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="campaign" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="invoice_amount" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="planned_spend" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="actual_spend" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="impressions" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="clicks" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="reach" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="message" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['not completed']]></defo>
			</column>
			<column name="start_date" type="DATE" jt="91" >
				<defo><![CDATA['1990-01-01']]></defo>
			</column>
			<column name="end_date" type="DATE" jt="91" >
				<defo><![CDATA['1990-01-01']]></defo>
			</column>
			<column name="dt_budget" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="2000" jt="12" />
			<index name="pk_client_rg_cmpgn_config" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportinggroup" />
				<column name="reportingmonth" />
				<column name="channel" />
				<column name="campaign" />
				<column name="job_name" />
			</index>
			<index name="idx_cmpgn_config_clientid_reportingmonth" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportingmonth" />
			</index>
			<index name="idx_client_rg_cmpgn_config_channel" unique="NORMAL" >
				<column name="channel" />
			</index>
			<index name="idx_client_rg_cmpgn_config_reportinggroup" unique="NORMAL" >
				<column name="reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_cmpgn_config_bkup" row_count="266" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="querystring" type="VARCHAR" length="45" jt="12" />
			<column name="tracking_number" type="VARCHAR" length="45" jt="12" />
			<column name="target_number" type="VARCHAR" length="45" jt="12" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="campaign" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="invoice_amount" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="planned_spend" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="actual_spend" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_cmpgn_config_fixed" row_count="28305" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="channel" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="campaign" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="invoice_amount" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="planned_spend" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="actual_spend" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="job_name" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['n/a']]></defo>
			</column>
			<column name="impressions" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="clicks" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="reach" type="DECIMAL" length="41" decimal="0" jt="3" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="message" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['not completed']]></defo>
			</column>
			<column name="start_date" type="DATE" jt="91" >
				<defo><![CDATA['1990-01-01']]></defo>
			</column>
			<column name="end_date" type="DATE" jt="91" >
				<defo><![CDATA['1990-01-01']]></defo>
			</column>
			<column name="dt_budget" type="DECIMAL" length="6" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="2000" jt="12" />
			<index name="pk_client_rg_cmpgn_config_fixed" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportinggroup" />
				<column name="reportingmonth" />
				<column name="channel" />
				<column name="campaign" />
				<column name="job_name" />
			</index>
			<index name="idx_cmpgn_config_clientid_reportingmonth" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportingmonth" />
			</index>
			<index name="idx_client_rg_cmpgn_config_channel" unique="NORMAL" >
				<column name="channel" />
			</index>
			<index name="idx_client_rg_cmpgn_config_reportinggroup" unique="NORMAL" >
				<column name="reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_cmpgn_prfrmnc_notes" row_count="1196" spec="" >
			<column name="note_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="note_date" type="DATE" jt="91" mandatory="y" >
				<defo><![CDATA['1900-01-01']]></defo>
			</column>
			<column name="note" type="VARCHAR" length="1800" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" mandatory="y" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_client_rg_cmpgn_prfrmnc_notes" unique="PRIMARY_KEY" >
				<column name="note_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=1267 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_cmpgn_prfrmnc_notes_bkup" row_count="737" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="note_date" type="DATE" jt="91" mandatory="y" >
				<defo><![CDATA['1900-01-01']]></defo>
			</column>
			<column name="note" type="VARCHAR" length="1800" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" mandatory="y" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_rg_mnthly_bdgt" row_count="4281" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="monthlybudget" type="DECIMAL" length="10" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="providers" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="notes" type="VARCHAR" length="500" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_client_rg_mnthly_bdgt" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reportinggroup" />
				<column name="reportingmonth" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="client_zipcodes" row_count="3998" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="zipcode" type="VARCHAR" length="12" jt="12" mandatory="y" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_client_zipcodes" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="zipcode" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="device_mapping" row_count="9" spec="" >
			<column name="device_source" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="device" type="VARCHAR" length="45" jt="12" />
			<index name="pk_device_mapping" unique="PRIMARY_KEY" >
				<column name="device_source" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="dim_date" row_count="11243" spec="" >
			<column name="date_key" type="INT" jt="4" mandatory="y" />
			<column name="full_date" type="DATE" jt="91" />
			<column name="date_name" type="VARCHAR" length="11" jt="12" mandatory="y" />
			<column name="date_name_us" type="VARCHAR" length="11" jt="12" mandatory="y" />
			<column name="date_name_eu" type="VARCHAR" length="11" jt="12" mandatory="y" />
			<column name="day_of_week" type="TINYINT" jt="-6" mandatory="y" />
			<column name="day_name_of_week" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="day_abbr_of_week" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="day_of_month" type="TINYINT" jt="-6" mandatory="y" />
			<column name="day_of_year" type="SMALLINT" jt="5" mandatory="y" />
			<column name="weekday_weekend" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="week_of_year" type="TINYINT" jt="-6" mandatory="y" />
			<column name="month_name" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="month_abbr" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="month_of_year" type="TINYINT" jt="-6" mandatory="y" />
			<column name="is_last_day_of_month" type="CHAR" length="1" jt="1" mandatory="y" />
			<column name="calendar_quarter" type="TINYINT" jt="-6" mandatory="y" />
			<column name="calendar_year" type="SMALLINT" jt="5" mandatory="y" />
			<column name="calendar_year_month" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="calendar_year_qtr" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="calendar_date_year_start" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_year_end" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_month_start" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_month_end" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_year_prev" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_year_prev_2" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_year_prev_3" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_year_prev_4" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_prev_full_year" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_prev_2_full_years" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_prev_3_full_years" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_prev_4_full_years" type="DATE" jt="91" mandatory="y" />
			<column name="calendar_date_prev_13_full_months" type="DATE" jt="91" mandatory="y" />
			<index name="pk_dim_date" unique="PRIMARY_KEY" >
				<column name="date_key" />
			</index>
			<index name="idx_dim_date_full_date" unique="UNIQUE_KEY" >
				<column name="full_date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="ecommunications" row_count="3663" spec="" >
			<column name="e_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="e_system" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="e_campaignid" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="e_fromemail" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="e_fromname" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="e_name" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="e_replyto" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="e_sentdatetime" type="DATETIME" jt="93" mandatory="y" />
			<column name="e_subject" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="e_recipients_total" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_webversionurl" type="VARCHAR" length="500" jt="12" />
			<column name="e_bounced" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_clicks" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_forwards" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_likes" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_mentions" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_spamcomplaints" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_opened_total" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_opened_unique" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_unsubscribed" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="e_recipients" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_ecommunications" unique="PRIMARY_KEY" >
				<column name="e_clientid" />
				<column name="e_system" />
				<column name="e_campaignid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="eltoro_orderlines" row_count="74" spec="" >
			<column name="eltrrdrlns_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="eltrrdrlns_name" type="VARCHAR" length="100" jt="12" />
			<column name="eltrrdrlns_campaign_id" type="VARCHAR" length="100" jt="12" />
			<column name="eltrrdrlns_campaign_name" type="VARCHAR" length="100" jt="12" />
			<column name="eltrrdrlns_startdate" type="DATETIME" jt="93" />
			<column name="eltrrdrlns_enddate" type="DATETIME" jt="93" />
			<column name="eltrrdrlns_total_impressions" type="INT" jt="4" />
			<column name="eltrrdrlns_cpm" type="INT" jt="4" />
			<column name="eltrrdrlns_click_through_url" type="VARCHAR" length="100" jt="12" />
			<column name="eltrrdrlns_thumb" type="VARCHAR" length="500" jt="12" />
			<column name="eltrrdrlns_first_deployed" type="DATETIME" jt="93" />
			<column name="eltrrdrlns_last_deployed" type="DATETIME" jt="93" />
			<column name="eltrrdrlns_completed" type="DATETIME" jt="93" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<index name="pk_eltoro_orderlines" unique="PRIMARY_KEY" >
				<column name="eltrrdrlns_id" />
			</index>
			<index name="idx_eltoro_orderlines_client_id_reportinggroup" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="eltoro_stats" row_count="86" spec="" >
			<column name="eltrstts_orderline_id" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="eltrstts_startdate" type="DATE" jt="91" mandatory="y" />
			<column name="eltrstts_enddate" type="DATE" jt="91" />
			<column name="eltrstts_impressions" type="INT" jt="4" />
			<column name="eltrstts_clicks" type="INT" jt="4" />
			<index name="pk_eltoro_stats" unique="PRIMARY_KEY" >
				<column name="eltrstts_orderline_id" />
				<column name="eltrstts_startdate" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="email_upload" row_count="0" spec="" >
			<column name="eml_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="eml_prctc_client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="eml_list_name" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="eml_address" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="eml_upload_user" type="VARCHAR" length="100" jt="12" />
			<column name="eml_upload_datetime" type="DATETIME" jt="93" />
			<column name="eml_duplicate" type="TINYINT" jt="-6" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="eml_bademail" type="TINYINT" jt="-6" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="eml_failure" type="TINYINT" jt="-6" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="eml_failure_details" type="VARCHAR" length="100" jt="12" />
			<column name="eml_existing_review" type="TINYINT" jt="-6" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_email_upload" unique="PRIMARY_KEY" >
				<column name="eml_id" />
			</index>
			<index name="eml_id_UNIQUE" unique="UNIQUE_KEY" >
				<column name="eml_id" />
			</index>
			<index name="idx_eml_address" unique="NORMAL" >
				<column name="eml_address" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=923508 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_ads" row_count="1706" spec="" >
			<column name="fbad_ad_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_ad_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_ad_status" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_adset_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_adset_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_adset_status" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_campaign_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_campaign_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_campaign_status" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_date_start" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_date_stop" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_page_id" type="BIGINT" jt="-5" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_bid_type" type="VARCHAR" length="50" jt="12" />
			<column name="fbad_recommendations" type="JSON" jt="2000" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<index name="pk_facebook_ads" unique="PRIMARY_KEY" >
				<column name="fbad_ad_id" />
				<column name="fbad_adset_id" />
				<column name="fbad_campaign_id" />
			</index>
			<index name="idx_facebook_ads_client_id_reportinggroup" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_ads_bkup" row_count="783" spec="" >
			<column name="fbad_ad_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_ad_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_ad_status" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_adset_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_adset_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_adset_status" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_campaign_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_campaign_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_campaign_status" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_date_start" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_date_stop" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_page_id" type="BIGINT" jt="-5" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_bid_type" type="VARCHAR" length="50" jt="12" />
			<column name="fbad_recommendations" type="JSON" jt="2000" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_metrics_agegender" row_count="1043542" spec="" >
			<column name="fbad_ad_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_adset_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_campaign_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_reporting_month" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_age" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fbad_gender" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fbad_reach" type="INT" jt="4" />
			<column name="fbad_spend" type="DECIMAL" length="10" decimal="4" jt="3" />
			<column name="fbad_impressions" type="BIGINT" jt="-5" />
			<column name="fbad_clicks" type="BIGINT" jt="-5" />
			<column name="fbad_unique_clicks" type="BIGINT" jt="-5" />
			<column name="fbad_total_unique_actions" type="BIGINT" jt="-5" />
			<column name="fbad_objective" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_actions" type="JSON" jt="2000" />
			<column name="fbad_like" type="INT" jt="4" />
			<column name="fbad_comment" type="INT" jt="4" />
			<column name="fbad_post" type="INT" jt="4" />
			<column name="fbad_post_reaction" type="INT" jt="4" />
			<column name="fbad_link_click" type="INT" jt="4" />
			<column name="fbad_page_engagement" type="INT" jt="4" />
			<column name="fbad_post_engagement" type="INT" jt="4" />
			<index name="pk_facebook_metrics_agegender" unique="PRIMARY_KEY" >
				<column name="fbad_ad_id" />
				<column name="fbad_adset_id" />
				<column name="fbad_campaign_id" />
				<column name="fbad_reporting_month" />
				<column name="fbad_age" />
				<column name="fbad_gender" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_metrics_device" row_count="265335" spec="" >
			<column name="fbad_ad_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_adset_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_campaign_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_reporting_month" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_device" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fbad_reach" type="INT" jt="4" />
			<column name="fbad_spend" type="DECIMAL" length="10" decimal="4" jt="3" />
			<column name="fbad_impressions" type="BIGINT" jt="-5" />
			<column name="fbad_clicks" type="BIGINT" jt="-5" />
			<column name="fbad_unique_clicks" type="BIGINT" jt="-5" />
			<column name="fbad_total_unique_actions" type="BIGINT" jt="-5" />
			<column name="fbad_objective" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_actions" type="JSON" jt="2000" />
			<column name="fbad_like" type="INT" jt="4" />
			<column name="fbad_comment" type="INT" jt="4" />
			<column name="fbad_post" type="INT" jt="4" />
			<column name="fbad_post_reaction" type="INT" jt="4" />
			<column name="fbad_link_click" type="INT" jt="4" />
			<column name="fbad_page_engagement" type="INT" jt="4" />
			<column name="fbad_post_engagement" type="INT" jt="4" />
			<index name="pk_facebook_metrics_device" unique="PRIMARY_KEY" >
				<column name="fbad_ad_id" />
				<column name="fbad_adset_id" />
				<column name="fbad_campaign_id" />
				<column name="fbad_reporting_month" />
				<column name="fbad_device" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_page" row_count="89" spec="" >
			<column name="fbpg_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="fbpg_name" type="VARCHAR" length="500" jt="12" />
			<column name="fbpg_clientid" type="VARCHAR" length="5" jt="12" />
			<column name="fbpg_reportinggroup" type="VARCHAR" length="100" jt="12" />
			<column name="fbpg_perms" type="VARCHAR" length="500" jt="12" />
			<column name="fbpg_category" type="VARCHAR" length="500" jt="12" />
			<column name="fbpg_category_list" type="VARCHAR" length="500" jt="12" />
			<column name="fbpg_start_likes" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpg_likes" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpg_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="fbpg_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_facebook_page" unique="PRIMARY_KEY" >
				<column name="fbpg_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_page_likes" row_count="3395" spec="" >
			<column name="fbpglks_pageid" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="fbpglks_reportingmonth" type="DATE" jt="91" mandatory="y" />
			<column name="fbpglks_likes" type="INT" jt="4" />
			<index name="pk_facebook_page_likes" unique="PRIMARY_KEY" >
				<column name="fbpglks_pageid" />
				<column name="fbpglks_reportingmonth" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_post" row_count="72644" spec="" >
			<column name="fbpst_pageid" type="VARCHAR" length="20" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="fbpst_id" type="VARCHAR" length="45" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="fbpst_name" type="VARCHAR" length="1000" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="fbpst_message" type="TEXT" jt="-1" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="fbpst_created_time" type="DATETIME" jt="93" />
			<column name="fbpst_likes" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_comments" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_reactions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_shares" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_impressions_organic" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_impressions_paid" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_reach_organic" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_reach_paid" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_picture_url" type="VARCHAR" length="500" jt="12" />
			<column name="fbpst_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="fbpst_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_facebook_post" unique="PRIMARY_KEY" >
				<column name="fbpst_id" />
			</index>
			<index name="idx_facebook_post_fbpst_pageid" unique="NORMAL" >
				<column name="fbpst_pageid" />
			</index>
			<index name="idx_facebook_post_fbpst_created_time" unique="NORMAL" >
				<column name="fbpst_created_time" />
			</index>
			<index name="idx_facebook_post_fbpst_picture_url" unique="NORMAL" >
				<column name="fbpst_picture_url" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="facebook_test" row_count="0" spec="" >
			<column name="fbpst_pageid" type="VARCHAR" length="20" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="fbpst_id" type="VARCHAR" length="45" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="fbpst_name" type="VARCHAR" length="1000" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8 COLLATE utf8_general_ci]]></column_options>
			</column>
			<column name="fbpst_message" type="VARCHAR" length="500" jt="12" />
			<column name="fbpst_created_time" type="DATETIME" jt="93" />
			<column name="fbpst_likes" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_comments" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_reactions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_shares" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_impressions_organic" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_impressions_paid" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_reach_organic" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_reach_paid" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbpst_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="fbpst_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_ad" row_count="13558128" spec="" >
			<column name="ggl_id" type="BIGINT" jt="-5" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="ggl_ad_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_account" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_campaign_status" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_ad_network" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_campaign_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_campaign" type="VARCHAR" length="255" jt="12" />
			<column name="ggl_device" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="ggl_month" type="DATE" jt="91" mandatory="y" />
			<column name="ggl_date" type="DATE" jt="91" mandatory="y" />
			<column name="ggl_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ggl_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ggl_cost" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ggl_finalurl" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<index name="pk_google_ad" unique="PRIMARY_KEY" >
				<column name="ggl_id" />
			</index>
			<index name="idx_google_ad_client_id_ggl_month" unique="NORMAL" >
				<column name="client_id" />
				<column name="ggl_month" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=230962877 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_ad_org" row_count="595813" spec="" >
			<column name="ggl_account" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_keyword_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_keyword" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="ggl_campaign_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_campaign" type="VARCHAR" length="255" jt="12" />
			<column name="ggl_ad_group_id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ggl_add_group" type="VARCHAR" length="255" jt="12" />
			<column name="ggl_device" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="ggl_month" type="DATE" jt="91" mandatory="y" />
			<column name="ggl_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ggl_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="ggl_cost" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_analytics" row_count="12149582" spec="" >
			<column name="ga_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="ga_campaign" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="ga_pagepath" type="VARCHAR" length="1000" jt="12" mandatory="y" />
			<column name="ga_city" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="ga_region" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="ga_sourcemedium" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="ga_devicecategory" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="ga_yearmonth" type="VARCHAR" length="6" jt="12" mandatory="y" />
			<column name="ga_pageviews" type="INT" jt="4" />
			<column name="ga_uniquepageviews" type="INT" jt="4" />
			<column name="ga_newusers" type="INT" jt="4" />
			<column name="ga_users" type="INT" jt="4" />
			<column name="ga_sessions" type="INT" jt="4" />
			<column name="ga_bounces" type="INT" jt="4" />
			<column name="ga_bouncerate" type="INT" jt="4" />
			<column name="ga_avgsessionduration" type="INT" jt="4" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<column name="reportingmonth" type="DATE" jt="91" />
			<column name="ga_pageparams" type="VARCHAR" length="1000" jt="12" />
			<index name="pk_google_analytics" unique="PRIMARY_KEY" >
				<column name="ga_id" />
			</index>
			<index name="idx_clientid" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportingmonth" />
			</index>
			<index name="idx_google_analytics_reportingmonth" unique="NORMAL" >
				<column name="reportingmonth" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=16842814 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_category" row_count="45" spec="" >
			<column name="categoryId" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="displayName" type="VARCHAR" length="255" jt="12" />
			<index name="pk_google_category" unique="PRIMARY_KEY" >
				<column name="categoryId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_contactme" row_count="145" spec="" >
			<column name="ggl_cntctme_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="google_name" type="VARCHAR" length="100" jt="12" />
			<column name="patient_first_name" type="VARCHAR" length="100" jt="12" />
			<column name="patient_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="patient_dob" type="VARCHAR" length="45" jt="12" />
			<column name="patient_phone" type="VARCHAR" length="45" jt="12" />
			<column name="reviewId" type="VARCHAR" length="255" jt="12" />
			<index name="pk_google_contactme" unique="PRIMARY_KEY" >
				<column name="ggl_cntctme_id" />
			</index>
			<index name="idx_google_contactme_reviewId" unique="NORMAL" >
				<column name="reviewId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=181 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_location" row_count="776" spec="" >
			<column name="locationId" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="locationDetails" type="JSON" jt="2000" />
			<column name="RefreshDate" type="DATETIME" jt="93" />
			<column name="locationDetailsDiff" type="JSON" jt="2000" />
			<column name="DiffMask" type="JSON" jt="2000" />
			<column name="DiffRefreshDate" type="DATETIME" jt="93" />
			<column name="admins" type="JSON" jt="2000" />
			<column name="media" type="JSON" jt="2000" />
			<column name="accountId" type="VARCHAR" length="45" jt="12" />
			<index name="pk_google_location" unique="PRIMARY_KEY" >
				<column name="locationId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_location_diffs" row_count="1948" spec="" >
			<column name="locationId" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="Diff" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<index name="pk_google_location_diffs" unique="PRIMARY_KEY" >
				<column name="locationId" />
				<column name="Diff" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_location_drivingdirections" row_count="0" spec="" >
			<column name="locationid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="day_count" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="latitude" type="VARCHAR" length="45" jt="12" />
			<column name="longitude" type="VARCHAR" length="45" jt="12" />
			<column name="postalcode" type="VARCHAR" length="45" jt="12" />
			<column name="count" type="INT" jt="4" />
			<column name="timezone" type="VARCHAR" length="45" jt="12" />
			<column name="importdate" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<index name="pk_google_location_drivingdirections" unique="PRIMARY_KEY" >
				<column name="locationid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_patientfeedback" row_count="1131" spec="" >
			<column name="ggl_rvw_ptntfdbck_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="reviewId" type="VARCHAR" length="255" jt="12" />
			<column name="sendDate" type="DATETIME" jt="93" />
			<column name="nodeId" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_google_patientfeedback" unique="PRIMARY_KEY" >
				<column name="ggl_rvw_ptntfdbck_id" />
			</index>
			<index name="reviewId_UNIQUE" unique="UNIQUE_KEY" >
				<column name="reviewId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=1509 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_question" row_count="581" spec="" >
			<column name="ggl_qstn_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="name" type="VARCHAR" length="500" jt="12" />
			<column name="locationId" type="VARCHAR" length="45" jt="12" />
			<column name="author_displayName" type="VARCHAR" length="100" jt="12" />
			<column name="author_profilePhotoUrl" type="VARCHAR" length="500" jt="12" />
			<column name="author_type" type="VARCHAR" length="45" jt="12" />
			<column name="text" type="VARCHAR" length="1000" jt="12" />
			<column name="createTime" type="DATETIME" jt="93" />
			<column name="updateTime" type="DATETIME" jt="93" />
			<column name="topAnswers" type="JSON" jt="2000" />
			<index name="pk_google_question" unique="PRIMARY_KEY" >
				<column name="ggl_qstn_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=681274 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_question_answer" row_count="1638" spec="" >
			<column name="name" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<column name="question_name" type="VARCHAR" length="500" jt="12" />
			<column name="author_displayName" type="VARCHAR" length="100" jt="12" />
			<column name="author_profilePhotoUrl" type="VARCHAR" length="500" jt="12" />
			<column name="text" type="VARCHAR" length="1000" jt="12" />
			<column name="createTime" type="DATETIME" jt="93" />
			<column name="updateTime" type="DATETIME" jt="93" />
			<index name="pk_google_question_answer" unique="PRIMARY_KEY" >
				<column name="name" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_question_patientfeedback" row_count="63" spec="" >
			<column name="ggl_qstn_ptntfdbck_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="questionId" type="VARCHAR" length="255" jt="12" />
			<column name="sendDate" type="DATETIME" jt="93" />
			<column name="nodeId" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_google_question_patientfeedback" unique="PRIMARY_KEY" >
				<column name="ggl_qstn_ptntfdbck_id" />
			</index>
			<index name="questionId_UNIQUE" unique="UNIQUE_KEY" >
				<column name="questionId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=224 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_review" row_count="93548" spec="" >
			<column name="ggl_rvw_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="reviewId" type="VARCHAR" length="255" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="reviewer_profilephotourl" type="VARCHAR" length="255" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="reviewer_displayname" type="VARCHAR" length="100" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="starRating" type="VARCHAR" length="45" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="comment" type="LONGTEXT" jt="-1" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="createTime" type="DATETIME" jt="93" />
			<column name="updateTime" type="DATETIME" jt="93" />
			<column name="name" type="VARCHAR" length="1000" jt="12" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="locationId" type="VARCHAR" length="45" jt="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="RefreshDate" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<index name="pk_google_review" unique="PRIMARY_KEY" >
				<column name="ggl_rvw_id" />
			</index>
			<index name="reviewId_UNIQUE" unique="UNIQUE_KEY" >
				<column name="reviewId" />
			</index>
			<index name="idx_google_review_locationId" unique="NORMAL" >
				<column name="locationId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=313852344 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci]]></options>
		</table>
		<table name="google_review_reply" row_count="12488" spec="" >
			<column name="ggl_rvw_rply_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="reviewReply" type="LONGTEXT" jt="-1" />
			<column name="updateTime" type="DATETIME" jt="93" />
			<column name="reviewId" type="VARCHAR" length="255" jt="12" />
			<index name="pk_google_review_reply" unique="PRIMARY_KEY" >
				<column name="ggl_rvw_rply_id" />
			</index>
			<index name="reviewId_UNIQUE" unique="UNIQUE_KEY" >
				<column name="reviewId" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=14590346 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="google_review_reply_approval" row_count="343" spec="" >
			<column name="ggl_rvw_rply_apprvl_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="reviewId" type="VARCHAR" length="255" jt="12" />
			<column name="approvalState" type="VARCHAR" length="100" jt="12" />
			<column name="reviewReply" type="LONGTEXT" jt="-1" />
			<column name="updateTime" type="DATETIME" jt="93" />
			<column name="approvalEmail" type="VARCHAR" length="255" jt="12" />
			<index name="pk_google_review_reply_approval" unique="PRIMARY_KEY" >
				<column name="ggl_rvw_rply_apprvl_id" />
			</index>
			<index name="index2" unique="UNIQUE_KEY" >
				<column name="reviewId" />
				<column name="approvalState" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=519 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="groundtruth" row_count="148072" spec="" >
			<column name="gt_acct_id" type="INT" jt="4" mandatory="y" />
			<column name="gt_acct_name" type="VARCHAR" length="100" jt="12" />
			<column name="gt_acct_timezone" type="VARCHAR" length="100" jt="12" />
			<column name="gt_acct_advertiser_domain" type="VARCHAR" length="100" jt="12" />
			<column name="gt_cmpgn_id" type="INT" jt="4" mandatory="y" />
			<column name="gt_cmpgn_name" type="VARCHAR" length="100" jt="12" />
			<column name="gt_cmpgn_start_date" type="DATE" jt="91" />
			<column name="gt_cmpgn_end_date" type="DATE" jt="91" />
			<column name="gt_date" type="DATE" jt="91" mandatory="y" />
			<column name="gt_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="gt_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="gt_spend" type="DECIMAL" length="10" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="gt_reach" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reportinggroup" type="VARCHAR" length="100" jt="12" />
			<index name="pk_groundtruth" unique="PRIMARY_KEY" >
				<column name="gt_acct_id" />
				<column name="gt_cmpgn_id" />
				<column name="gt_date" />
			</index>
			<index name="idx_groundtruth_client_id_reportinggroup" unique="NORMAL" >
				<column name="client_id" />
				<column name="reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="listings_summary" row_count="4831" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="npi" type="VARCHAR" length="45" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="500" jt="12" />
			<column name="listing_url" type="LONGTEXT" jt="-1" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="LONGTEXT" jt="-1" />
			<column name="avg_starrating" type="DECIMAL" length="35" decimal="2" jt="3" />
			<column name="total_reviews" type="DECIMAL" length="33" decimal="0" jt="3" />
			<column name="is_active" type="TINYINT" jt="-6" />
			<index name="client_id" unique="NORMAL" >
				<column name="client_id" />
				<column name="provider" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="listings_summary_fixed" row_count="4919" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="npi" type="VARCHAR" length="45" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="500" jt="12" />
			<column name="listing_url" type="LONGTEXT" jt="-1" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="LONGTEXT" jt="-1" />
			<column name="avg_starrating" type="DECIMAL" length="35" decimal="2" jt="3" />
			<column name="total_reviews" type="DECIMAL" length="33" decimal="0" jt="3" />
			<column name="is_active" type="TINYINT" jt="-6" />
			<index name="client_id" unique="NORMAL" >
				<column name="client_id" />
				<column name="provider" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="menu" row_count="44" spec="" >
			<column name="mn_menu" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="mn_level" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="mn_name" type="VARCHAR" length="100" jt="12" />
			<column name="mn_url" type="VARCHAR" length="255" jt="12" />
			<column name="mn_roles" type="VARCHAR" length="255" jt="12" />
			<index name="pk_menu" unique="PRIMARY_KEY" >
				<column name="mn_menu" />
				<column name="mn_level" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="menu_old" row_count="50" spec="" >
			<column name="mn_menu" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="mn_level" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="mn_name" type="VARCHAR" length="100" jt="12" />
			<column name="mn_url" type="VARCHAR" length="255" jt="12" />
			<column name="mn_roles" type="VARCHAR" length="255" jt="12" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="metrics" row_count="12" spec="" >
			<column name="metric" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="name" type="VARCHAR" length="45" jt="12" />
			<column name="description" type="VARCHAR" length="45" jt="12" />
			<column name="order" type="INT" jt="4" />
			<column name="type" type="VARCHAR" length="45" jt="12" />
			<index name="pk_metrics" unique="PRIMARY_KEY" >
				<column name="metric" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="online_appointment" row_count="94532" spec="" >
			<column name="oa_siteid" type="VARCHAR" length="50" jt="12" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="oa_practiceid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="oa_created" type="DATETIME" jt="93" mandatory="y" />
			<column name="oa_email" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="oa_phone" type="VARCHAR" length="100" jt="12" />
			<column name="oa_ref" type="VARCHAR" length="500" jt="12" />
			<column name="oa_firstname" type="VARCHAR" length="100" jt="12" />
			<column name="oa_lastname" type="VARCHAR" length="100" jt="12" />
			<column name="oa_formorigin" type="VARCHAR" length="255" jt="12" />
			<column name="oa_location" type="VARCHAR" length="100" jt="12" />
			<column name="oa_source" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['online appt form']]></defo>
			</column>
			<index name="pk_online_appointment" unique="PRIMARY_KEY" >
				<column name="oa_practiceid" />
				<column name="oa_created" />
				<column name="oa_email" />
				<column name="oa_siteid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="online_appointment_email" row_count="3066" spec="" >
			<column name="oae_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="oae_date" type="DATE" jt="91" mandatory="y" />
			<column name="oae_appointment" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="oae_referral" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="oae_cancel" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="oae_reschedule" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="oae_source" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="oae_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="oae_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_online_appointment_email" unique="PRIMARY_KEY" >
				<column name="oae_clientid" />
				<column name="oae_date" />
				<column name="oae_source" />
			</index>
			<index name="idx_online_appointment_email_oae_clientid_oae_date" unique="NORMAL" >
				<column name="oae_clientid" />
				<column name="oae_date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="online_referral" row_count="3448" spec="" >
			<column name="or_siteid" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="or_practiceid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="or_created" type="DATETIME" jt="93" mandatory="y" />
			<column name="or_patientdob" type="DATE" jt="91" />
			<column name="or_patientemail" type="VARCHAR" length="100" jt="12" />
			<column name="or_patientname" type="VARCHAR" length="100" jt="12" />
			<column name="or_patientphone" type="VARCHAR" length="100" jt="12" />
			<column name="or_referringdoctor" type="VARCHAR" length="255" jt="12" />
			<column name="or_workcompreferral" type="VARCHAR" length="45" jt="12" />
			<index name="pk_online_referral" unique="PRIMARY_KEY" >
				<column name="or_practiceid" />
				<column name="or_created" />
				<column name="or_siteid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="provider" row_count="986" spec="" >
			<column name="specialty_text" type="VARCHAR" length="500" jt="12" />
			<column name="rating" type="VARCHAR" length="500" jt="12" />
			<column name="provider_middle_name" type="VARCHAR" length="500" jt="12" />
			<column name="provider_credential_text" type="VARCHAR" length="500" jt="12" />
			<column name="image" type="VARCHAR" length="500" jt="12" />
			<column name="provider_name_prefix" type="VARCHAR" length="500" jt="12" />
			<column name="postal_code" type="VARCHAR" length="500" jt="12" />
			<column name="city" type="VARCHAR" length="500" jt="12" />
			<column name="title" type="VARCHAR" length="500" jt="12" />
			<column name="office_address_country" type="VARCHAR" length="500" jt="12" />
			<column name="state" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="500" jt="12" />
			<column name="provider_name" type="VARCHAR" length="500" jt="12" />
			<column name="provider_first_name" type="VARCHAR" length="500" jt="12" />
			<column name="office_fax" type="VARCHAR" length="500" jt="12" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="office_address_geofield" type="VARCHAR" length="500" jt="12" />
			<column name="address1" type="VARCHAR" length="500" jt="12" />
			<column name="address2" type="VARCHAR" length="500" jt="12" />
			<column name="nid" type="VARCHAR" length="500" jt="12" />
			<column name="provider_name_suffix_text" type="VARCHAR" length="500" jt="12" />
			<column name="client_id" type="VARCHAR" length="500" jt="12" />
			<column name="field_medical_specialty" type="VARCHAR" length="500" jt="12" />
			<column name="gender" type="VARCHAR" length="500" jt="12" />
			<column name="publish_to" type="JSON" jt="2000" />
			<column name="parent_practice_nid" type="VARCHAR" length="500" jt="12" />
			<column name="office_phone" type="VARCHAR" length="500" jt="12" />
			<column name="parent_practice" type="VARCHAR" length="500" jt="12" />
			<column name="provider_path" type="VARCHAR" length="5" jt="12" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="provider_review_url" type="VARCHAR" length="500" jt="12" />
			<column name="lastupdate" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="provider_website_url" type="VARCHAR" length="255" jt="12" />
			<column name="is_active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<index name="pk_provider" unique="PRIMARY_KEY" >
				<column name="npi" />
			</index>
			<index name="idx_provider_provider_name" unique="NORMAL" >
				<column name="provider_name" />
			</index>
			<index name="idx_provider_client_id" unique="NORMAL" >
				<column name="client_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="provider_clientsite" row_count="755" spec="" >
			<column name="last_updated_date" type="DATETIME" jt="93" >
				<defo><![CDATA['1900-01-01 00:00:00']]></defo>
			</column>
			<column name="full_name_including_credentials" type="VARCHAR" length="500" jt="12" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="practice_website_nid" type="VARCHAR" length="45" jt="12" />
			<column name="parent_practice" type="VARCHAR" length="500" jt="12" />
			<column name="parent_practice_id" type="VARCHAR" length="5" jt="12" />
			<column name="provider_type" type="VARCHAR" length="45" jt="12" />
			<column name="provider_first_name" type="VARCHAR" length="100" jt="12" />
			<column name="provider_middle_name" type="VARCHAR" length="100" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="provider_suffix_text" type="VARCHAR" length="100" jt="12" />
			<column name="provider_credential_text" type="VARCHAR" length="100" jt="12" />
			<column name="website_url" type="VARCHAR" length="500" jt="12" />
			<column name="provider_photo" type="VARCHAR" length="500" jt="12" />
			<column name="venel_client" type="VARCHAR" length="45" jt="12" />
			<column name="emeritus" type="VARCHAR" length="45" jt="12" />
			<column name="publish_to" type="VARCHAR" length="45" jt="12" />
			<column name="office_availability" type="VARCHAR" length="1000" jt="12" />
			<column name="office_address_country" type="VARCHAR" length="500" jt="12" />
			<column name="office_address_name" type="VARCHAR" length="500" jt="12" />
			<column name="address1" type="VARCHAR" length="500" jt="12" />
			<column name="address2" type="VARCHAR" length="500" jt="12" />
			<column name="city" type="VARCHAR" length="100" jt="12" />
			<column name="state" type="VARCHAR" length="100" jt="12" />
			<column name="postal_code" type="VARCHAR" length="45" jt="12" />
			<column name="provider_rating" type="DECIMAL" length="5" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="provider_rating_count" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="provider_specialty_text" type="VARCHAR" length="500" jt="12" />
			<index name="pk_provider_clientsite" unique="PRIMARY_KEY" >
				<column name="npi" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="provider_sitepath" row_count="1818" spec="" >
			<column name="source" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="path" type="VARCHAR" length="500" jt="12" />
			<index name="pk_provider_sitepath" unique="PRIMARY_KEY" >
				<column name="source" />
				<column name="npi" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="qb_customer" row_count="80" spec="" >
			<column name="id" type="INT" jt="4" mandatory="y" />
			<column name="company_name" type="VARCHAR" length="100" jt="12" />
			<column name="display_name" type="VARCHAR" length="100" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_qb_customer" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="qb_invoice" row_count="4161" spec="" >
			<column name="id" type="INT" jt="4" mandatory="y" />
			<column name="doc_number" type="INT" jt="4" />
			<column name="txn_date" type="DATE" jt="91" />
			<column name="customer_id" type="INT" jt="4" />
			<column name="customer_name" type="VARCHAR" length="100" jt="12" />
			<column name="due_date" type="DATE" jt="91" />
			<column name="total_amt" type="DECIMAL" length="13" decimal="2" jt="3" />
			<column name="sales_term_id" type="INT" jt="4" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="invoice_status" type="VARCHAR" length="45" jt="12" />
			<column name="email_status" type="VARCHAR" length="45" jt="12" />
			<column name="balance" type="DECIMAL" length="13" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<index name="pk_qb_invoice" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_qb_invoice_customer_id" unique="NORMAL" >
				<column name="customer_id" />
			</index>
			<index name="idx_qb_invoice_sales_term_id" unique="NORMAL" >
				<column name="sales_term_id" />
			</index>
			<index name="idx_qb_invoice_doc_number" unique="NORMAL" >
				<column name="doc_number" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="qb_invoice_line" row_count="20466" spec="" >
			<column name="doc_number" type="INT" jt="4" mandatory="y" />
			<column name="id" type="INT" jt="4" mandatory="y" />
			<column name="line_num" type="INT" jt="4" />
			<column name="description" type="VARCHAR" length="255" jt="12" />
			<column name="amount" type="DECIMAL" length="13" decimal="2" jt="3" />
			<column name="item_id" type="INT" jt="4" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_qb_invoice_line" unique="PRIMARY_KEY" >
				<column name="doc_number" />
				<column name="id" />
			</index>
			<index name="idx_qb_invoice_line_item_id" unique="NORMAL" >
				<column name="item_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="qb_item" row_count="29" spec="" >
			<column name="id" type="INT" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="255" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_qb_item" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<index name="idx_qb_item_name" unique="NORMAL" >
				<column name="name" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="qb_term" row_count="7" spec="" >
			<column name="id" type="INT" jt="4" mandatory="y" />
			<column name="name" type="VARCHAR" length="45" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_qb_term" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="qb_token" row_count="1" spec="" >
			<column name="refresh" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<index name="pk_qb_token" unique="PRIMARY_KEY" >
				<column name="refresh" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="receipts" row_count="0" spec="" >
			<column name="filename" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="filepath" type="VARCHAR" length="255" jt="12" />
			<column name="mimetype" type="VARCHAR" length="45" jt="12" />
			<column name="size" type="VARCHAR" length="45" jt="12" />
			<column name="destination" type="VARCHAR" length="255" jt="12" />
			<column name="orgfilename" type="VARCHAR" length="255" jt="12" />
			<index name="pk_receipts" unique="PRIMARY_KEY" >
				<column name="filename" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="report" row_count="12" spec="" >
			<column name="rprt_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="rprt_name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rprt_url" type="VARCHAR" length="500" jt="12" mandatory="y" />
			<index name="pk_report" unique="PRIMARY_KEY" >
				<column name="rprt_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reporting_group" row_count="94" spec="" >
			<column name="rg_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="rg_reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rg_monthlybudget" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="rg_startdate" type="DATE" jt="91" mandatory="y" />
			<column name="rg_enddate" type="DATE" jt="91" mandatory="y" />
			<column name="rg_practicereceipts" type="DECIMAL" length="6" decimal="2" jt="3" mandatory="y" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="rg_uniquepatients" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="rg_valueofnewpatient" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="rg_crt_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="rg_mdfd_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="rg_path" type="VARCHAR" length="100" jt="12" />
			<column name="rg_crt_user" type="VARCHAR" length="100" jt="12" />
			<column name="rg_mdfd_user" type="VARCHAR" length="100" jt="12" />
			<column name="rg_geoplacement" type="DECIMAL" length="6" decimal="2" jt="3" mandatory="y" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="rg_spend" type="DECIMAL" length="6" decimal="2" jt="3" mandatory="y" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="rg_reportinggroupid" type="VARCHAR" length="100" jt="12" />
			<column name="rg_reporting_startdate" type="DATE" jt="91" >
				<defo><![CDATA['1989-01-01']]></defo>
			</column>
			<index name="pk_reporting_group" unique="PRIMARY_KEY" >
				<column name="rg_clientid" />
				<column name="rg_reportinggroup" />
				<column name="rg_startdate" />
				<column name="rg_enddate" />
			</index>
			<index name="rg_reportinggroup_UNIQUE" unique="UNIQUE_KEY" >
				<column name="rg_reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reporting_group_call" row_count="29" spec="" >
			<column name="rgc_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="rgc_trackingnumber" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="rgc_sourcename" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rgc_reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rgc_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="rgc_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="rgc_start_date" type="DATE" jt="91" >
				<defo><![CDATA['2000-01-01']]></defo>
			</column>
			<column name="rgc_end_date" type="DATE" jt="91" >
				<defo><![CDATA['2100-01-01']]></defo>
			</column>
			<index name="pk_reporting_group_call" unique="PRIMARY_KEY" >
				<column name="rgc_clientid" />
				<column name="rgc_trackingnumber" />
				<column name="rgc_sourcename" />
				<column name="rgc_reportinggroup" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reporting_group_facebook" row_count="0" spec="" >
			<column name="rgfcbk_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="rgfcbk_fbpg_id" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="rgfcbk_reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rgfcbk_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="rgfcbk_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<index name="pk_reporting_group_facebook" unique="PRIMARY_KEY" >
				<column name="rgfcbk_clientid" />
				<column name="rgfcbk_fbpg_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reporting_group_web" row_count="53" spec="" >
			<column name="rgw_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="rgw_campaign" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="rgw_websystem" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="rgw_reportinggroup" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="rgw_venel_paid" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="rgw_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="rgw_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="rgw_start_date" type="DATE" jt="91" >
				<defo><![CDATA['2000-01-01']]></defo>
			</column>
			<column name="rgw_end_date" type="DATE" jt="91" >
				<defo><![CDATA['2100-01-01']]></defo>
			</column>
			<index name="pk_reporting_group_web" unique="PRIMARY_KEY" >
				<column name="rgw_clientid" />
				<column name="rgw_campaign" />
				<column name="rgw_websystem" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reviews_sql" row_count="531597" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="client_name" type="VARCHAR" length="150" jt="12" />
			<column name="client_key" type="VARCHAR" length="100" jt="12" />
			<column name="npi" type="VARCHAR" length="20" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="VARCHAR" length="50" jt="12" />
			<column name="listing_url" type="VARCHAR" length="500" jt="12" />
			<column name="date" type="DATE" jt="91" />
			<column name="total_starrating" type="FLOAT" jt="7" />
			<column name="total_reviews" type="INT" jt="4" />
			<column name="comment" type="TEXT" jt="-1" />
			<column name="reviewer" type="VARCHAR" length="100" jt="12" />
			<column name="hash" type="CHAR" length="32" jt="1" />
			<index name="idx_reviews_sql_client_id" unique="NORMAL" >
				<column name="client_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reviews_sql2" row_count="449082" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="client_name" type="VARCHAR" length="150" jt="12" />
			<column name="client_key" type="VARCHAR" length="100" jt="12" />
			<column name="npi" type="VARCHAR" length="20" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="VARCHAR" length="50" jt="12" />
			<column name="listing_url" type="VARCHAR" length="500" jt="12" />
			<column name="date" type="DATE" jt="91" />
			<column name="total_starrating" type="FLOAT" jt="7" />
			<column name="total_reviews" type="INT" jt="4" />
			<column name="comment" type="TEXT" jt="-1" />
			<column name="reviewer" type="VARCHAR" length="100" jt="12" />
			<column name="hash" type="CHAR" length="32" jt="1" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="reviews_sql_fixed" row_count="538617" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="client_name" type="VARCHAR" length="150" jt="12" />
			<column name="client_key" type="VARCHAR" length="100" jt="12" />
			<column name="npi" type="VARCHAR" length="20" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="VARCHAR" length="50" jt="12" />
			<column name="listing_url" type="VARCHAR" length="500" jt="12" />
			<column name="date" type="DATE" jt="91" />
			<column name="total_starrating" type="FLOAT" jt="7" />
			<column name="total_reviews" type="INT" jt="4" />
			<column name="comment" type="TEXT" jt="-1" />
			<column name="reviewer" type="VARCHAR" length="100" jt="12" />
			<column name="hash" type="CHAR" length="32" jt="1" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="scheduled_task_errors" row_count="0" spec="" >
			<column name="ERRTIME" type="DATETIME" jt="93" />
			<column name="ERRPROCESS" type="VARCHAR" length="100" jt="12" />
			<column name="ERRMESSAGE" type="VARCHAR" length="500" jt="12" />
			<column name="SEND_STATUS" type="INT" jt="4" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="sf_account" row_count="22591" spec="" >
			<column name="id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="name" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="client_id__c" type="VARCHAR" length="3" jt="12" />
			<column name="venel_client_owner__c" type="VARCHAR" length="45" jt="12" />
			<column name="ispartner" type="TINYINT" jt="-6" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="type" type="VARCHAR" length="45" jt="12" />
			<column name="sub_segment__c" type="VARCHAR" length="100" jt="12" />
			<column name="fax" type="VARCHAR" length="45" jt="12" />
			<column name="fax_opt_out__c" type="VARCHAR" length="45" jt="12" />
			<column name="lastmodifieddate" type="DATETIME" jt="93" mandatory="y" />
			<column name="recordtypeid" type="VARCHAR" length="45" jt="12" />
			<column name="billingstreet" type="VARCHAR" length="500" jt="12" />
			<column name="billingcity" type="VARCHAR" length="100" jt="12" />
			<column name="billingstate" type="VARCHAR" length="45" jt="12" />
			<column name="billingpostalcode" type="VARCHAR" length="45" jt="12" />
			<column name="email__c" type="VARCHAR" length="100" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_sf_account" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="sf_campaign" row_count="375" spec="" >
			<column name="id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="name" type="VARCHAR" length="500" jt="12" />
			<column name="description" type="VARCHAR" length="2000" jt="12" />
			<column name="client_id__c" type="VARCHAR" length="3" jt="12" />
			<column name="venel_client_owner__c" type="VARCHAR" length="100" jt="12" />
			<column name="type" type="VARCHAR" length="45" jt="12" />
			<column name="total_fax_sheets_sent__c" type="INT" jt="4" />
			<column name="numbersent" type="INT" jt="4" />
			<column name="createddate" type="DATETIME" jt="93" />
			<column name="lastmodifieddate" type="DATETIME" jt="93" />
			<index name="pk_sf_campaign" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="sf_campaignmember" row_count="79588" spec="" >
			<column name="campaignid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="contactid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fax" type="VARCHAR" length="45" jt="12" />
			<column name="hasoptedoutoffax" type="VARCHAR" length="5" jt="12" />
			<column name="status" type="VARCHAR" length="45" jt="12" />
			<column name="lastmodifieddate" type="DATETIME" jt="93" />
			<index name="pk_sf_campaignmember" unique="PRIMARY_KEY" >
				<column name="campaignid" />
				<column name="contactid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="sf_contact" row_count="31485" spec="" >
			<column name="id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="name" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="fax" type="VARCHAR" length="45" jt="12" />
			<column name="accountid" type="VARCHAR" length="45" jt="12" />
			<column name="Ownerid" type="VARCHAR" length="45" jt="12" />
			<column name="venel_client_owner__c" type="VARCHAR" length="100" jt="12" />
			<column name="client_id__c" type="VARCHAR" length="3" jt="12" />
			<column name="hasoptedoutoffax" type="VARCHAR" length="45" jt="12" />
			<column name="fax_last_sent_date__c" type="DATETIME" jt="93" />
			<column name="fax_last_status" type="VARCHAR" length="45" jt="12" />
			<column name="Primary_Segment__c" type="VARCHAR" length="45" jt="12" />
			<column name="lastmodifieddate" type="DATETIME" jt="93" />
			<column name="mailingstreet" type="VARCHAR" length="500" jt="12" />
			<column name="mailingcity" type="VARCHAR" length="100" jt="12" />
			<column name="mailingstate" type="VARCHAR" length="45" jt="12" />
			<column name="mailingpostalcode" type="VARCHAR" length="45" jt="12" />
			<column name="email" type="VARCHAR" length="100" jt="12" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_sf_contact" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="sf_task" row_count="78096" spec="" >
			<column name="id" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="subject" type="VARCHAR" length="45" jt="12" />
			<column name="description" type="VARCHAR" length="2000" jt="12" />
			<column name="whoid" type="VARCHAR" length="45" jt="12" />
			<column name="whatid" type="VARCHAR" length="45" jt="12" />
			<column name="status" type="VARCHAR" length="45" jt="12" />
			<column name="type" type="VARCHAR" length="45" jt="12" />
			<column name="activitydate" type="DATE" jt="91" />
			<column name="lastmodifieddate" type="DATETIME" jt="93" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_sf_task" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="socialmedia_text" row_count="96" spec="" >
			<column name="smt_client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="smt_to" type="VARCHAR" length="20" jt="12" mandatory="y" />
			<column name="smt_practice" type="VARCHAR" length="255" jt="12" />
			<column name="smt_location" type="VARCHAR" length="45" jt="12" />
			<column name="smt_firstname" type="VARCHAR" length="50" jt="12" />
			<column name="smt_fullname" type="VARCHAR" length="200" jt="12" />
			<column name="smt_email" type="VARCHAR" length="100" jt="12" />
			<column name="smt_tinyurl" type="VARCHAR" length="45" jt="12" />
			<column name="smt_active" type="INT" jt="4" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="smt_crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="smt_mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="smt_crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['Admin']]></defo>
			</column>
			<column name="smt_mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['Admin']]></defo>
			</column>
			<index name="pk_socialmedia_text" unique="PRIMARY_KEY" >
				<column name="smt_client_id" />
				<column name="smt_to" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="tbl_pbi_appointments" row_count="10132877" spec="" >
			<column name="Client Id" type="VARCHAR" length="10" jt="12" />
			<column name="Client Key" type="VARCHAR" length="163" jt="12" />
			<column name="Appointment Type" type="VARCHAR" length="45" jt="12" />
			<column name="Referring Provider" type="VARCHAR" length="512" jt="12" />
			<column name="NPI" type="VARCHAR" length="45" jt="12" />
			<column name="Appointment Date" type="DATE" jt="91" />
			<column name="Patient PostalCode" type="VARCHAR" length="20" jt="12" />
			<column name="Patient Id" type="VARCHAR" length="45" jt="12" />
			<column name="Appointment Count" type="DECIMAL" length="23" decimal="0" jt="3" />
			<column name="RP_NPI" type="VARCHAR" length="45" jt="12" />
			<column name="_rpkey" type="VARCHAR" length="100" jt="12" />
			<index name="idx_tbl_pbi_appointments_Appointment Date" unique="NORMAL" >
				<column name="Appointment Date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="tbl_pbi_calls" row_count="24685" spec="" >
			<column name="Client Key" type="VARCHAR" length="163" jt="12" />
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="reporting_group" type="VARCHAR" length="158" jt="12" />
			<column name="reporting_month" type="DATE" jt="91" />
			<column name="Call Category" type="VARCHAR" length="45" jt="12" />
			<column name="Call Subcategory" type="VARCHAR" length="21" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="channel" type="VARCHAR" length="11" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="Call Source" type="VARCHAR" length="100" jt="12" />
			<column name="call_count" type="DECIMAL" length="32" decimal="0" jt="3" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="tbl_pbi_projects" row_count="13100" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="prjct_week" type="DATE" jt="91" />
			<column name="reporting_month" type="DATE" jt="91" />
			<column name="providers" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Monthly Projects" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Monthly Fees" type="DECIMAL" length="10" decimal="4" jt="3" mandatory="y" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="Project Count(Current Week)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Fee(Current Week)" type="DECIMAL" length="10" decimal="4" jt="3" mandatory="y" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="Count Rank(Current Week)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Current Week)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Count(Prior Week)" type="DECIMAL" length="32" decimal="0" jt="3" />
			<column name="Project Fee(Prior Week)" type="DECIMAL" length="32" decimal="4" jt="3" />
			<column name="Count Rank(Prior Week)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Prior Week)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Count(Prior 4 Weeks)" type="DECIMAL" length="32" decimal="0" jt="3" />
			<column name="Project Fee(Prior 4 Weeks)" type="DECIMAL" length="32" decimal="4" jt="3" />
			<column name="Count Rank(Prior 4 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Prior 4 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Count(Prior 8 Weeks)" type="DECIMAL" length="32" decimal="0" jt="3" />
			<column name="Project Fee(Prior 8 Weeks)" type="DECIMAL" length="32" decimal="4" jt="3" />
			<column name="Count Rank(Prior 8 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Prior 8 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Count(Prior 13 Weeks)" type="DECIMAL" length="32" decimal="0" jt="3" />
			<column name="Project Fee(Prior 13 Weeks)" type="DECIMAL" length="32" decimal="4" jt="3" />
			<column name="Count Rank(Prior 13 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Prior 13 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Count(Prior 52 Weeks)" type="DECIMAL" length="32" decimal="0" jt="3" />
			<column name="Project Fee(Prior 52 Weeks)" type="DECIMAL" length="32" decimal="4" jt="3" />
			<column name="Count Rank(Prior 52 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Prior 52 Weeks)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Project Count(Prior Year)" type="DECIMAL" length="32" decimal="0" jt="3" />
			<column name="Project Fee(Prior Year)" type="DECIMAL" length="32" decimal="4" jt="3" />
			<column name="Count Rank(Prior Year)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="Fee Rank(Prior Year)" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="testdate" row_count="0" spec="" >
			<column name="dt" type="DATETIME" jt="93" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="testimonial" row_count="462254" spec="" >
			<column name="body" type="LONGTEXT" jt="-1" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci]]></column_options>
			</column>
			<column name="review_rating" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="permission_to_share" type="VARCHAR" length="5" jt="12" />
			<column name="reviewer_name" type="VARCHAR" length="500" jt="12" />
			<column name="reviewer_email" type="VARCHAR" length="500" jt="12" />
			<column name="message_tone" type="VARCHAR" length="45" jt="12" />
			<column name="sentiment_score" type="VARCHAR" length="45" jt="12" />
			<column name="practice_id" type="VARCHAR" length="5" jt="12" />
			<column name="npi" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="creation_date" type="DATETIME" jt="93" />
			<column name="published" type="VARCHAR" length="5" jt="12" />
			<column name="unique_review_id" type="VARCHAR" length="250" jt="12" mandatory="y" />
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="source" type="VARCHAR" length="45" jt="12" mandatory="y" >
				<defo><![CDATA['Undefined']]></defo>
			</column>
			<column name="published_to" type="JSON" jt="2000" />
			<column name="source_title" type="VARCHAR" length="100" jt="12" />
			<column name="staff_review_rating" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="review_reply" type="LONGTEXT" jt="-1" />
			<column name="placeid" type="VARCHAR" length="128" jt="12" />
			<column name="location_id" type="VARCHAR" length="128" jt="12" />
			<index name="pk_testimonial" unique="PRIMARY_KEY" >
				<column name="unique_review_id" />
				<column name="npi" />
				<column name="source" />
			</index>
			<index name="idx_npi" unique="NORMAL" >
				<column name="npi" />
			</index>
			<index name="idx_testimonial_source" unique="NORMAL" >
				<column name="source" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="testimonial_clientsite" row_count="19310" spec="" >
			<column name="body" type="MEDIUMTEXT" jt="-1" />
			<column name="review_rating" type="VARCHAR" length="45" jt="12" />
			<column name="permission_to_share" type="VARCHAR" length="45" jt="12" />
			<column name="reviewer_name" type="VARCHAR" length="500" jt="12" />
			<column name="reviewer_email" type="VARCHAR" length="500" jt="12" />
			<column name="message_tone" type="VARCHAR" length="45" jt="12" />
			<column name="sentiment_score" type="VARCHAR" length="45" jt="12" />
			<column name="practice_id" type="VARCHAR" length="45" jt="12" />
			<column name="npi" type="VARCHAR" length="45" jt="12" />
			<column name="creation_date" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="published" type="VARCHAR" length="45" jt="12" />
			<column name="unique_review_id" type="VARCHAR" length="250" jt="12" mandatory="y" />
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="source" type="VARCHAR" length="45" jt="12" mandatory="y" >
				<defo><![CDATA['Undefined']]></defo>
			</column>
			<column name="published_to" type="JSON" jt="2000" />
			<column name="source_title" type="VARCHAR" length="100" jt="12" />
			<index name="pk_testimonial_clientsite" unique="PRIMARY_KEY" >
				<column name="unique_review_id" />
				<column name="creation_date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="testimonial_source" row_count="11" spec="" >
			<column name="source" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="source_ext_description" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="source_order" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="source_abbreviation" type="VARCHAR" length="45" jt="12" />
			<column name="source_ispublic" type="INT" jt="4" mandatory="y" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="source_sitepathurl" type="VARCHAR" length="500" jt="12" />
			<column name="source_url" type="VARCHAR" length="500" jt="12" />
			<index name="pk_testimonial_source" unique="PRIMARY_KEY" >
				<column name="source" />
				<column name="source_ext_description" />
			</index>
			<index name="idx_testimonial_source_source_abbreviation" unique="NORMAL" >
				<column name="source_abbreviation" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="th_r" row_count="31752" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="client_description" type="VARCHAR" length="158" jt="12" />
			<column name="client_key" type="VARCHAR" length="100" jt="12" />
			<column name="npi" type="VARCHAR" length="20" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="VARCHAR" length="50" jt="12" />
			<column name="listing_url" type="VARCHAR" length="500" jt="12" />
			<column name="date" type="DATE" jt="91" />
			<column name="total_starrating" type="FLOAT" jt="7" />
			<column name="total_reviews" type="INT" jt="4" />
			<column name="comment" type="TEXT" jt="-1" />
			<column name="reviewer" type="VARCHAR" length="100" jt="12" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="th_r_sav" row_count="29942" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" />
			<column name="client_description" type="VARCHAR" length="158" jt="12" />
			<column name="client_key" type="VARCHAR" length="100" jt="12" />
			<column name="npi" type="VARCHAR" length="20" jt="12" />
			<column name="provider" type="VARCHAR" length="500" jt="12" />
			<column name="provider_last_name" type="VARCHAR" length="100" jt="12" />
			<column name="platform" type="VARCHAR" length="50" jt="12" />
			<column name="source" type="VARCHAR" length="50" jt="12" />
			<column name="listing_url" type="VARCHAR" length="500" jt="12" />
			<column name="date" type="DATE" jt="91" />
			<column name="total_starrating" type="FLOAT" jt="7" />
			<column name="total_reviews" type="INT" jt="4" />
			<column name="comment" type="TEXT" jt="-1" />
			<column name="reviewer" type="VARCHAR" length="100" jt="12" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="ufiles" row_count="42" spec="" >
			<column name="fl_id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="fl_name" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="fl_type" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fl_data" type="MEDIUMBLOB" jt="-4" />
			<column name="fl_size" type="INT" jt="4" />
			<column name="active" type="TINYINT" jt="-6" >
				<defo><![CDATA['1']]></defo>
			</column>
			<column name="crt_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="crt_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<column name="mdfd_date" type="DATETIME" jt="93" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="mdfd_user" type="VARCHAR" length="100" jt="12" >
				<defo><![CDATA['reporting@venel.com']]></defo>
			</column>
			<index name="pk_ufiles" unique="PRIMARY_KEY" >
				<column name="fl_id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=68 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="user" row_count="44" spec="" >
			<column name="u_username" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="u_email" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="u_firstname" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="u_lastname" type="VARCHAR" length="100" jt="12" mandatory="y" >
				<defo><![CDATA['']]></defo>
			</column>
			<column name="u_roles" type="VARCHAR" length="255" jt="12" />
			<column name="u_crt_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
			</column>
			<column name="u_mdfd_date" type="DATETIME" jt="93" mandatory="y" >
				<defo><![CDATA[CURRENT_TIMESTAMP]]></defo>
				<column_options><![CDATA[ON UPDATE CURRENT_TIMESTAMP]]></column_options>
			</column>
			<column name="u_status" type="VARCHAR" length="45" jt="12" >
				<defo><![CDATA['Active']]></defo>
			</column>
			<index name="pk_user" unique="PRIMARY_KEY" >
				<column name="u_username" />
			</index>
			<index name="idx_user_u_email" unique="NORMAL" >
				<column name="u_email" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="users" row_count="4" spec="" >
			<column name="id" type="INT" jt="4" mandatory="y" >
				<identity><![CDATA[AUTO_INCREMENT]]></identity>
			</column>
			<column name="name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="age" type="INT" jt="4" mandatory="y" />
			<column name="email" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<index name="pk_users" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
			<options><![CDATA[ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="web_mor" row_count="3830" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="reporting_group" type="VARCHAR" length="508" jt="12" mandatory="y" />
			<column name="reporting_month" type="VARCHAR" length="10" jt="12" mandatory="y" />
			<column name="clicks" type="DECIMAL" length="63" decimal="0" jt="3" />
			<column name="cost" type="DECIMAL" length="58" decimal="4" jt="3" />
			<column name="impressions" type="DECIMAL" length="63" decimal="0" jt="3" />
			<column name="likes" type="DECIMAL" length="54" decimal="0" jt="3" />
			<index name="pk_web_mor" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="reporting_group" />
				<column name="reporting_month" />
			</index>
			<index name="idx_clientid_reportingmonth" unique="NORMAL" >
				<column name="client_id" />
				<column name="reporting_month" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="workamajig_projects" row_count="42786" spec="" >
			<column name="prjct_number" type="VARCHAR" length="50" jt="12" mandatory="y" />
			<column name="prjct_name" type="VARCHAR" length="100" jt="12" />
			<column name="prjct_startdate" type="DATE" jt="91" />
			<column name="prjct_status" type="VARCHAR" length="45" jt="12" />
			<column name="prjct_type" type="VARCHAR" length="45" jt="12" />
			<column name="prjct_active" type="VARCHAR" length="45" jt="12" />
			<column name="prjct_percentcomplete" type="VARCHAR" length="10" jt="12" />
			<column name="prjct_clientid" type="VARCHAR" length="45" jt="12" />
			<column name="prjct_lasttaskduedate" type="DATE" jt="91" />
			<column name="prjct_classification" type="VARCHAR" length="45" jt="12" />
			<column name="prjct_dateupdated" type="DATE" jt="91" />
			<column name="prjct_closed" type="VARCHAR" length="45" jt="12" />
			<column name="prjct_firsttaskstartdate" type="DATE" jt="91" />
			<index name="pk_workamajig_projects" unique="PRIMARY_KEY" >
				<column name="prjct_number" />
			</index>
			<index name="idx_workamajig_projects_prjct_clientid" unique="NORMAL" >
				<column name="prjct_clientid" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="workamajig_tasks" row_count="84633" spec="" >
			<column name="project_number" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="task_line_number" type="INT" jt="4" mandatory="y" />
			<column name="project_name" type="VARCHAR" length="255" jt="12" />
			<column name="project_start_date" type="DATE" jt="91" />
			<column name="project_status" type="VARCHAR" length="45" jt="12" />
			<column name="project_type" type="VARCHAR" length="45" jt="12" />
			<column name="project_classification" type="VARCHAR" length="45" jt="12" />
			<column name="percentage_complete" type="INT" jt="4" />
			<column name="task_name" type="VARCHAR" length="255" jt="12" />
			<column name="actual_start_date" type="DATE" jt="91" />
			<column name="actual_completion_date" type="DATE" jt="91" />
			<column name="plan_start_date" type="DATE" jt="91" />
			<column name="plan_completion_date" type="DATE" jt="91" />
			<column name="client_id" type="VARCHAR" length="45" jt="12" />
			<column name="date_update" type="DATE" jt="91" />
			<column name="active" type="VARCHAR" length="45" jt="12" />
			<index name="pk_workamajig_tasks" unique="PRIMARY_KEY" >
				<column name="project_number" />
				<column name="task_line_number" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="xxx_sf_fax" row_count="0" spec="" >
			<column name="client_id" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="campaign_name" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="created_date" type="DATE" jt="91" mandatory="y" />
			<column name="recipients" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fax_sheets" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="campaign_description" type="VARCHAR" length="500" jt="12" />
			<index name="pk_xxx_sf_fax" unique="PRIMARY_KEY" >
				<column name="client_id" />
				<column name="campaign_name" />
				<column name="created_date" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="xxxfacebook_ad" row_count="65433" spec="" >
			<column name="fbad_ad_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_ad_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_adset_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_adset_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_campaign_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_campaign_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_date_start" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_date_stop" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_age" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fbad_gender" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fbad_reach" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_spend" type="DECIMAL" length="10" decimal="4" jt="3" >
				<defo><![CDATA['0.0000']]></defo>
			</column>
			<column name="fbad_impressions" type="BIGINT" jt="-5" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_clicks" type="BIGINT" jt="-5" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_unique_clicks" type="BIGINT" jt="-5" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_total_unique_actions" type="BIGINT" jt="-5" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_objective" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_actions" type="JSON" jt="2000" />
			<column name="fbad_like" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_comment" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_post" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_post_reaction" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_link_click" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_page_engagement" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="fbad_post_engagement" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<index name="pk_xxxfacebook_ad" unique="PRIMARY_KEY" >
				<column name="fbad_ad_id" />
				<column name="fbad_adset_id" />
				<column name="fbad_campaign_id" />
				<column name="fbad_date_start" />
				<column name="fbad_date_stop" />
				<column name="fbad_age" />
				<column name="fbad_gender" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="xxxfacebook_ad_device" row_count="1073" spec="" >
			<column name="fbad_ad_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_ad_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_adset_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_adset_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_campaign_id" type="BIGINT" jt="-5" mandatory="y" />
			<column name="fbad_campaign_name" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_date_start" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_date_stop" type="DATE" jt="91" mandatory="y" />
			<column name="fbad_device" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="fbad_reach" type="INT" jt="4" />
			<column name="fbad_spend" type="DECIMAL" length="10" decimal="4" jt="3" />
			<column name="fbad_impressions" type="BIGINT" jt="-5" />
			<column name="fbad_clicks" type="BIGINT" jt="-5" />
			<column name="fbad_unique_clicks" type="BIGINT" jt="-5" />
			<column name="fbad_total_unique_actions" type="BIGINT" jt="-5" />
			<column name="fbad_objective" type="VARCHAR" length="255" jt="12" />
			<column name="fbad_actions" type="JSON" jt="2000" />
			<column name="fbad_like" type="INT" jt="4" />
			<column name="fbad_comment" type="INT" jt="4" />
			<column name="fbad_post" type="INT" jt="4" />
			<column name="fbad_post_reaction" type="INT" jt="4" />
			<column name="fbad_link_click" type="INT" jt="4" />
			<column name="fbad_page_engagement" type="INT" jt="4" />
			<column name="fbad_post_engagement" type="INT" jt="4" />
			<index name="pk_xxxfacebook_ad_device" unique="PRIMARY_KEY" >
				<column name="fbad_ad_id" />
				<column name="fbad_adset_id" />
				<column name="fbad_campaign_id" />
				<column name="fbad_date_start" />
				<column name="fbad_date_stop" />
				<column name="fbad_device" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="xxxweb" row_count="7814" spec="" >
			<column name="w_clientid" type="VARCHAR" length="5" jt="12" mandatory="y" />
			<column name="w_date" type="DATE" jt="91" mandatory="y" />
			<column name="w_campaign" type="VARCHAR" length="255" jt="12" mandatory="y" />
			<column name="w_impressions" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="w_clicks" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="w_cost" type="DECIMAL" length="10" decimal="2" jt="3" >
				<defo><![CDATA['0.00']]></defo>
			</column>
			<column name="w_page_likes" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="w_reach" type="INT" jt="4" >
				<defo><![CDATA['0']]></defo>
			</column>
			<column name="w_campaignstatus" type="VARCHAR" length="100" jt="12" />
			<column name="w_system" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="w_account" type="VARCHAR" length="100" jt="12" mandatory="y" />
			<column name="w_customerid" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<column name="w_addistribution" type="VARCHAR" length="45" jt="12" mandatory="y" />
			<index name="pk_xxxweb" unique="PRIMARY_KEY" >
				<column name="w_clientid" />
				<column name="w_date" />
				<column name="w_campaign" />
				<column name="w_addistribution" />
				<column name="w_customerid" />
				<column name="w_account" />
				<column name="w_system" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<view name="vw_appointment" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`client_id` AS `client_id`,`rg`.`rg_reportinggroup` AS `reporting_group`,`cr`.`cal_reporting_month` AS `reporting_month`,`oa`.`oa_ref` AS `query_string`,(case when (`oa`.`oa_ref` like '%Bing%') then 'Bing' when (`oa`.`oa_ref` like '%omg%') then 'Google' when (`oa`.`oa_ref` like '%requested_appt%') then 'MyChoice-Organic' else 'Other-Organic' end) AS `query_string_group`,(case when (`oa`.`oa_ref` like '%Bing%') then 'OI' when (`oa`.`oa_ref` like '%omg%') then 'OI' when (`oa`.`oa_ref` like '%requested_appt%') then 'Organic' else 'Organic' end) AS `query_string_group_type`,`oa`.`oa_created` AS `created`,sum(coalesce(`oa`.`appointments`,0)) AS `appointment_count`,(sum(coalesce(`oa`.`appointments`,0)) * `rg`.`rg_valueofnewpatient`) AS `appointment_value` from (((`dw`.`client` `c` join `dw`.`reporting_group` `rg` on(((`c`.`client_id` = `rg`.`rg_clientid`) and (`rg`.`rg_reportinggroup` = concat(`c`.`client_id`,' - ',`c`.`client_name`))))) join `dw`.`vw_calendar_reporting_month` `cr`) left join (select `dw`.`online_appointment_email`.`oae_clientid` AS `client_id`,date_format(`dw`.`online_appointment_email`.`oae_date`,'%Y-%m-01') AS `reporting_month`,'' AS `oa_ref`,date_format(`dw`.`online_appointment_email`.`oae_date`,'%Y-%m-01') AS `oa_created`,sum(`dw`.`online_appointment_email`.`oae_appointment`) AS `appointments`,sum(`dw`.`online_appointment_email`.`oae_referral`) AS `referrals` from `dw`.`online_appointment_email` group by `dw`.`online_appointment_email`.`oae_clientid`,date_format(`dw`.`online_appointment_email`.`oae_date`,'%Y-%m-01') union all select `dw`.`online_appointment`.`oa_practiceid` AS `client_id`,date_format(`dw`.`online_appointment`.`oa_created`,'%Y-%m-01') AS `reporting_month`,`dw`.`online_appointment`.`oa_ref` AS `oa_ref`,`dw`.`online_appointment`.`oa_created` AS `oa_created`,count(0) AS `online_appointments`,0 AS `referrals` from `dw`.`online_appointment` where (date_format(`dw`.`online_appointment`.`oa_created`,'%Y-%m-01') >= '2017-12-01') group by `dw`.`online_appointment`.`oa_practiceid`,`dw`.`online_appointment`.`oa_ref`,`dw`.`online_appointment`.`oa_created`,date_format(`dw`.`online_appointment`.`oa_created`,'%Y-%m-01')) `oa` on(((`oa`.`client_id` = `rg`.`rg_clientid`) and (date_format(`oa`.`reporting_month`,'%Y-%m-01') = `cr`.`cal_reporting_month`)))) group by `c`.`client_id`,`cr`.`cal_reporting_month`,`oa`.`oa_ref`,`oa`.`oa_created`,`rg`.`rg_reportinggroup`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="query_string" type="VARCHAR" />
			<column name="query_string_group" type="VARCHAR" />
			<column name="query_string_group_type" type="VARCHAR" />
			<column name="created" type="VARCHAR" />
			<column name="appointment_count" type="DECIMAL" />
			<column name="appointment_value" type="DECIMAL" />
		</view>
		<view name="vw_calendar" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select date_format(`c`.`cal_date`,'%Y%m%d') AS `cal_datekey`,`c`.`cal_date` AS `cal_date`,`c`.`cal_year` AS `cal_year`,`c`.`cal_month` AS `cal_month`,`c`.`cal_day` AS `cal_day`,`c`.`cal_startofmonth` AS `cal_startofmonth`,`c`.`cal_quarter` AS `cal_quarter`,`c`.`cal_monthabbr` AS `cal_monthabbr`,`c`.`cal_monthname` AS `cal_monthname`,`c`.`cal_dayname` AS `cal_dayname`,(`c`.`cal_date` + interval (1 - dayofweek(`c`.`cal_date`)) day) AS `cal_startofweek`,dayofweek(`c`.`cal_date`) AS `cal_dayofweek`,(case when ((dayofweek(`c`.`cal_date`) = 1) or (dayofweek(`c`.`cal_date`) = 7)) then 'Weekend' else 'Weekday' end) AS `cal_daytype`,(case when (dayofmonth(`c`.`cal_date`) < 15) then date_format(`c`.`cal_date`,'%Y-%m-15') else (date_format(`c`.`cal_date`,'%Y-%m-01') + interval 1 month) end) AS `cal_payperiod`,(curdate() = `c`.`cal_date`) AS `cal_currentdate`,((`c`.`cal_date` + interval (1 - dayofweek(`c`.`cal_date`)) day) = (curdate() + interval (1 - dayofweek(curdate())) day)) AS `cal_currentweek`,((month(curdate()) = month(`c`.`cal_date`)) and (year(curdate()) = year(`c`.`cal_date`))) AS `cal_currentmonth`,(year(curdate()) = year(`c`.`cal_date`)) AS `cal_currentyear`,((curdate() + interval -(1) day) = `c`.`cal_date`) AS `cal_previousdate`,((`c`.`cal_date` + interval (1 - dayofweek(`c`.`cal_date`)) day) = ((curdate() + interval (1 - dayofweek(curdate())) day) + interval -(7) day)) AS `cal_previousweek`,((month((curdate() + interval -(1) month)) = month(`c`.`cal_date`)) and (year(curdate()) = year(`c`.`cal_date`))) AS `cal_previousmonth`,(year((curdate() + interval -(1) year)) = year(`c`.`cal_date`)) AS `cal_previousyear`,dayofmonth(last_day(`c`.`cal_date`)) AS `cal_daysinmonth` from `dw`.`calendar` `c`]]></view_script>
			<column name="cal_datekey" type="VARCHAR" />
			<column name="cal_date" type="DATE" />
			<column name="cal_year" type="INT" />
			<column name="cal_month" type="INT" />
			<column name="cal_day" type="VARCHAR" />
			<column name="cal_startofmonth" type="DATE" />
			<column name="cal_quarter" type="INT" />
			<column name="cal_monthabbr" type="VARCHAR" />
			<column name="cal_monthname" type="VARCHAR" />
			<column name="cal_dayname" type="VARCHAR" />
			<column name="cal_startofweek" type="DATE" />
			<column name="cal_dayofweek" type="INT" />
			<column name="cal_daytype" type="VARCHAR" />
			<column name="cal_payperiod" type="VARCHAR" />
			<column name="cal_currentdate" type="INT" />
			<column name="cal_currentweek" type="INT" />
			<column name="cal_currentmonth" type="INT" />
			<column name="cal_currentyear" type="INT" />
			<column name="cal_previousdate" type="INT" />
			<column name="cal_previousweek" type="INT" />
			<column name="cal_previousmonth" type="INT" />
			<column name="cal_previousyear" type="INT" />
			<column name="cal_daysinmonth" type="INT" />
		</view>
		<view name="vw_calendar_reporting_month" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`calendar`.`cal_startofmonth` AS `cal_reporting_month`,(`dw`.`calendar`.`cal_startofmonth` + interval -(1) year) AS `cal_reporting_month_py` from `dw`.`calendar` group by `dw`.`calendar`.`cal_startofmonth`]]></view_script>
			<column name="cal_reporting_month" type="DATE" />
			<column name="cal_reporting_month_py" type="DATE" />
		</view>
		<view name="vw_calendar_rolling24" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`calendar`.`cal_startofmonth` AS `cal_startofmonth`,(`dw`.`calendar`.`cal_startofmonth` + interval -(1) year) AS `cal_startofmonth_py` from `dw`.`calendar` where (`dw`.`calendar`.`cal_startofmonth` >= (now() + interval -(24) month)) group by `dw`.`calendar`.`cal_startofmonth`]]></view_script>
			<column name="cal_startofmonth" type="DATE" />
			<column name="cal_startofmonth_py" type="DATE" />
		</view>
		<view name="vw_call" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`call_id` AS `call_id`,`c`.`client_id` AS `client_id`,`dw`.`client`.`client_description` AS `client_description`,coalesce(`rgcc`.`reportinggroup`,`rgc`.`rgc_reportinggroup`,`dw`.`client`.`client_description`,concat(`c`.`client_id`,' - Not Defined')) AS `reporting_group`,`c`.`call_reporting_month` AS `reporting_month`,cast(`c`.`call_datetime` as date) AS `call_date`,cast(`c`.`call_datetime` as time) AS `call_time`,convert_tz(`c`.`call_datetime`,'America/Chicago',`ctz`.`timezone`) AS `call_datetime`,`c`.`call_source` AS `call_source`,`c`.`call_duration` AS `call_duration`,`c`.`call_answered` AS `call_answered`,`c`.`caller_number` AS `call_caller_number`,`c`.`caller_name` AS `call_caller_name`,`c`.`caller_city` AS `call_caller_city`,`c`.`caller_state` AS `call_caller_state`,`c`.`caller_zip` AS `call_caller_zip`,`c`.`caller_country` AS `call_caller_country`,`c`.`destination_number` AS `call_destination_number`,`c`.`tracking_number` AS `call_tracking_number`,(case when (`c`.`call_system` = 'CallRail') then concat('https://app.callrail.com/calls/',`c`.`call_id`) else NULL end) AS `call_url`,`c`.`call_url` AS `call_recording_url`,`c`.`oi_caller_status` AS `call_oi_status`,`c`.`oi_caller_provider` AS `call_oi_provider`,`c`.`oi_caller_dob` AS `call_oi_dob`,`c`.`oi_caller_name` AS `call_oi_caller_name`,`c`.`oi_comment` AS `call_oi_comment`,`c`.`oi_reviewer` AS `call_oi_reviewer`,`c`.`oi_reviewer_duration` AS `call_oi_reviewer_duration`,sec_to_time(`c`.`oi_reviewer_duration`) AS `call_oi_reviewer_duration(Min)`,`c`.`oi_reviewer_date` AS `call_oi_reviewer_date`,`c`.`call_system` AS `call_system`,`c`.`call_tags` AS `call_tags`,`c`.`call_category` AS `call_category`,(case when (`c`.`call_tags` is null) then 'Other' when (`c`.`call_tags` like '%Multiple Appointments%') then 'Multiple Appointments' when (`c`.`call_tags` like '%Follow Up Appointment%') then 'Follow Up Appointment' when (`c`.`call_tags` like '%Availability%') then 'Availability' when (`c`.`call_tags` like '%Insurance%') then 'Insurance' when (`c`.`call_tags` like '%Needs Referral/Report%') then 'Needs Referral/Report' when (`c`.`call_tags` like '%Voicemail%') then 'Voicemail' when (`c`.`call_tags` like '%Answering Service%') then 'Answering Service' when (`c`.`call_tags` like '%Walk In Clinic%') then 'Walk In Clinic' when (`c`.`call_tags` like '%Other%') then 'Other' else 'None' end) AS `call_subcategory`,(case when (`c`.`oi_comment` is null) then 'Other' when (`c`.`oi_comment` like 'Multiple%') then 'Multiple Appointments' when (`c`.`oi_comment` like 'Follow%') then 'Follow Up Appointment' when (`c`.`oi_comment` like 'Availability%') then 'Availability' when (`c`.`oi_comment` like 'Insurance%') then 'Insurance' when (`c`.`oi_comment` like 'Needs%') then 'Needs Referral/Report' when (`c`.`oi_comment` like 'Voicemail%') then 'Voicemail' when (`c`.`oi_comment` like 'Answering%') then 'Answering Service' when (`c`.`oi_comment` like 'Walk%') then 'Walk In Clinic' when (`c`.`oi_comment` like 'Other%') then 'Other' else 'None' end) AS `call_subcategory(Comment)`,(case when (`c`.`call_source` like '%Google%') then 'Google' when (`c`.`call_source` like '%Bing%') then 'Bing' when (`c`.`call_source` like '%Facebook%') then 'Facebook' when (`c`.`call_source` like '%GroundTruth%') then 'GroundTruth' when (`c`.`call_source` like '%El Toro%') then 'El Toro' else 'Other' end) AS `channel`,(case when (`c`.`call_source` like '%Google%') then 1 when (`c`.`call_source` like '%Bing%') then 2 when (`c`.`call_source` like '%Facebook%') then 3 when (`c`.`call_source` like '%El Toro%') then 4 when (`c`.`call_source` like '%GroundTruth%') then 5 else 6 end) AS `channel_sort`,`c`.`call_count` AS `call_count` from (((((`dw`.`call` `c` left join `dw`.`vw_client` `client` on((`c`.`client_id` = `dw`.`client`.`client_id`))) left join `dw`.`reporting_group_call` `rgc` on(((`c`.`client_id` = `rgc`.`rgc_clientid`) and (right(`c`.`tracking_number`,10) = `rgc`.`rgc_trackingnumber`) and (`c`.`call_reporting_month` between `rgc`.`rgc_start_date` and `rgc`.`rgc_end_date`)))) left join `dw`.`client_rg_call_config` `rgcc` on(((`c`.`client_id` = `rgcc`.`client_id`) and (right(`c`.`tracking_number`,10) = right(`rgcc`.`tracking_number`,10)) and (right(`c`.`destination_number`,10) = right(`rgcc`.`target_number`,10)) and (`c`.`call_reporting_month` = `rgcc`.`reportingmonth`)))) left join `dw`.`reporting_group` `rg` on((`rg`.`rg_reportinggroup` = coalesce(`rgcc`.`reportinggroup`,`rgc`.`rgc_reportinggroup`)))) left join (select distinct `dw`.`callrail_companies`.`crc_clientid` AS `client_id`,`dw`.`callrail_companies`.`crc_time_zone` AS `timezone` from `dw`.`callrail_companies` where (`dw`.`callrail_companies`.`crc_status` = 'active')) `ctz` on((`c`.`client_id` = `ctz`.`client_id`))) where ((`c`.`call_answered` = 1) and (`c`.`call_duration` >= 60) and (not((coalesce(`c`.`call_tags`,'') like '%EXCLUDE FROM MOR%'))) and (coalesce(`rgcc`.`include_mor`,'Y') = 'Y'))]]></view_script>
			<column name="call_id" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="call_date" type="DATE" />
			<column name="call_time" type="TIME" />
			<column name="call_datetime" type="DATETIME" />
			<column name="call_source" type="VARCHAR" />
			<column name="call_duration" type="INT" />
			<column name="call_answered" type="INT" />
			<column name="call_caller_number" type="VARCHAR" />
			<column name="call_caller_name" type="VARCHAR" />
			<column name="call_caller_city" type="VARCHAR" />
			<column name="call_caller_state" type="VARCHAR" />
			<column name="call_caller_zip" type="VARCHAR" />
			<column name="call_caller_country" type="VARCHAR" />
			<column name="call_destination_number" type="VARCHAR" />
			<column name="call_tracking_number" type="VARCHAR" />
			<column name="call_url" type="VARCHAR" />
			<column name="call_recording_url" type="VARCHAR" />
			<column name="call_oi_status" type="VARCHAR" />
			<column name="call_oi_provider" type="VARCHAR" />
			<column name="call_oi_dob" type="VARCHAR" />
			<column name="call_oi_caller_name" type="VARCHAR" />
			<column name="call_oi_comment" type="VARCHAR" />
			<column name="call_oi_reviewer" type="VARCHAR" />
			<column name="call_oi_reviewer_duration" type="INT" />
			<column name="call_oi_reviewer_duration(Min)" type="TIME" />
			<column name="call_oi_reviewer_date" type="DATETIME" />
			<column name="call_system" type="VARCHAR" />
			<column name="call_tags" type="VARCHAR" />
			<column name="call_category" type="VARCHAR" />
			<column name="call_subcategory" type="VARCHAR" />
			<column name="call_subcategory(Comment)" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="channel_sort" type="INT" />
			<column name="call_count" type="INT" />
		</view>
		<view name="vw_campaign" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select coalesce(`dw`.`c`.`client_id`,'999') AS `client_id`,rtrim(coalesce(`w`.`reporting_group`,`rgw`.`rgw_reportinggroup`,`dw`.`c`.`client_description`,'999 - Unknown')) AS `reporting_group`,(case when (`w`.`campaign_name` like '%Venel%') then 'Yes' else 'No' end) AS `Venel Paid`,(case when (`w`.`channel` = 'GroundTruth') then 'Yes' when (`w`.`channel` = 'El Toro') then 'Yes' when ((`w`.`channel` = 'Facebook') and (`w`.`campaign_name` like '%Geoplacement%')) then 'Yes' else 'No' end) AS `GeoPlacement`,`w`.`reporting_month` AS `reporting_month`,`w`.`campaign_name` AS `Campaign Name`,`w`.`campaign_start` AS `campaign_start`,`w`.`campaign_end` AS `campaign_end`,coalesce(`d`.`device`,`w`.`device`,'Unknown') AS `Device`,`w`.`channel` AS `Channel`,`w`.`impressions` AS `Impressions`,`w`.`clicks` AS `Clicks`,`w`.`cost` AS `Cost`,`w`.`likes` AS `Likes`,`w`.`comments` AS `Comments` from ((((select `g`.`client_id` AS `client_id`,`g`.`reportinggroup` AS `reporting_group`,`g`.`ggl_month` AS `reporting_month`,`g`.`ggl_campaign` AS `campaign_name`,min(`g`.`ggl_month`) AS `campaign_start`,max(`g`.`ggl_month`) AS `campaign_end`,coalesce(`g`.`ggl_device`,'Unknown') AS `device`,'Google' AS `channel`,sum(`g`.`ggl_impressions`) AS `impressions`,sum(`g`.`ggl_clicks`) AS `clicks`,sum((`g`.`ggl_cost` / 1000000)) AS `cost`,0 AS `likes`,0 AS `comments` from `dw`.`google_ad` `g` group by `g`.`client_id`,`g`.`ggl_month`,`g`.`ggl_campaign`,`g`.`ggl_device` union all select `gt`.`client_id` AS `client_id`,`gt`.`reportinggroup` AS `reporting_group`,date_format(`gt`.`gt_date`,'%Y-%m-01') AS `reporting_month`,`gt`.`gt_cmpgn_name` AS `campaign_name`,min(`gt`.`gt_cmpgn_start_date`) AS `campaign_start`,max(`gt`.`gt_cmpgn_end_date`) AS `campaign_end`,'mobile' AS `device`,'GroundTruth' AS `channel`,sum(`gt`.`gt_impressions`) AS `impressions`,sum(`gt`.`gt_clicks`) AS `clicks`,sum(`gt`.`gt_spend`) AS `spend`,0 AS `Likes`,0 AS `Comments` from `dw`.`groundtruth` `gt` group by `gt`.`client_id`,`gt`.`reportinggroup`,date_format(`gt`.`gt_date`,'%Y-%m-01'),`gt`.`gt_cmpgn_name` union all select `ads`.`client_id` AS `client_id`,`ads`.`reportinggroup` AS `reporting_group`,`ads`.`bng_month` AS `reporting_month`,`ads`.`bng_campaignname` AS `campaign_name`,min(`ads`.`bng_month`) AS `start_date`,max(`ads`.`bng_month`) AS `stop_date`,`ads`.`bng_devicetype` AS `device`,'Bing' AS `channel`,sum(`ads`.`bng_impressions`) AS `impressions`,sum(`ads`.`bng_clicks`) AS `clicks`,sum(`ads`.`bng_spend`) AS `spend`,0 AS `likes`,0 AS `comments` from `dw`.`bing_ad` `ads` group by `ads`.`client_id`,`ads`.`reportinggroup`,`ads`.`bng_month`,`ads`.`bng_campaignname`,`ads`.`bng_devicetype` union all select `dw`.`vw_eltoro_ads`.`client_id` AS `client_id`,`dw`.`vw_eltoro_ads`.`reporting_group` AS `reporting_group`,`dw`.`vw_eltoro_ads`.`reporting_month` AS `reporting_month`,`dw`.`vw_eltoro_ads`.`campaign_name` AS `campaign_name`,min(`dw`.`vw_eltoro_ads`.`start_date`) AS `start_date`,max(`dw`.`vw_eltoro_ads`.`stop_date`) AS `stop_date`,`dw`.`vw_eltoro_ads`.`device` AS `device`,'El Toro' AS `channel`,sum(`dw`.`vw_eltoro_ads`.`impressions`) AS `impressions`,sum(`dw`.`vw_eltoro_ads`.`clicks`) AS `clicks`,sum(`dw`.`vw_eltoro_ads`.`spend`) AS `spend`,sum(`dw`.`vw_eltoro_ads`.`Likes`) AS `likes`,sum(`dw`.`vw_eltoro_ads`.`Comments`) AS `comments` from `dw`.`vw_eltoro_ads` group by `dw`.`vw_eltoro_ads`.`client_id`,`dw`.`vw_eltoro_ads`.`reporting_group`,`dw`.`vw_eltoro_ads`.`reporting_month`,`dw`.`vw_eltoro_ads`.`campaign_name`,`dw`.`vw_eltoro_ads`.`device` union all select `dw`.`fbad`.`client_id` AS `client_id`,`dw`.`fbad`.`reporting_group` AS `reporting_group`,`dw`.`fbad`.`reporting_month` AS `reporting_month`,`dw`.`fbad`.`campaign_name` AS `campaign_name`,min(`dw`.`fbad`.`start_date`) AS `start_date`,max(`dw`.`fbad`.`stop_date`) AS `stop_date`,`dw`.`fbad`.`device` AS `device`,'Facebook' AS `channel`,sum(`dw`.`fbad`.`impressions`) AS `impressions`,sum(`dw`.`fbad`.`unique_clicks`) AS `clicks`,sum(`dw`.`fbad`.`spend`) AS `spend`,sum(`dw`.`fbad`.`likes`) AS `likes`,sum(`dw`.`fbad`.`comments`) AS `comments` from `dw`.`vw_facebook_ads_device` `fbad` where (not((left(`dw`.`fbad`.`campaign_name`,5) like 'Post:'))) group by `dw`.`fbad`.`client_id`,`dw`.`fbad`.`reporting_group`,`dw`.`fbad`.`reporting_group`,`dw`.`fbad`.`reporting_month`,`dw`.`fbad`.`campaign_name`,`dw`.`fbad`.`device`) `w` left join `dw`.`reporting_group_web` `rgw` on(((`w`.`client_id` = `rgw`.`rgw_clientid`) and (`w`.`campaign_name` like `rgw`.`rgw_campaign`) and (`w`.`channel` = `rgw`.`rgw_websystem`)))) left join `dw`.`vw_client` `c` on((`w`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`device_mapping` `d` on((`d`.`device_source` = `w`.`device`)))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="Venel Paid" type="VARCHAR" />
			<column name="GeoPlacement" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="Campaign Name" type="VARCHAR" />
			<column name="campaign_start" type="DATETIME" />
			<column name="campaign_end" type="DATETIME" />
			<column name="Device" type="VARCHAR" />
			<column name="Channel" type="VARCHAR" />
			<column name="Impressions" type="DECIMAL" />
			<column name="Clicks" type="DECIMAL" />
			<column name="Cost" type="DECIMAL" />
			<column name="Likes" type="DECIMAL" />
			<column name="Comments" type="DECIMAL" />
		</view>
		<view name="vw_campaign_channel_summary" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`client_rg_cmpgn_config`.`client_id` AS `client_id`,`dw`.`client_rg_cmpgn_config`.`reportinggroup` AS `reportinggroup`,date_format(`dw`.`client_rg_cmpgn_config`.`reportingmonth`,'%Y-%m-%d') AS `reportingmonth`,`dw`.`client_rg_cmpgn_config`.`channel` AS `channel`,`dw`.`client_rg_cmpgn_config`.`campaign` AS `campaign`,sum(`dw`.`client_rg_cmpgn_config`.`invoice_amount`) AS `invoice_amount`,sum(`dw`.`client_rg_cmpgn_config`.`planned_spend`) AS `planned_spend`,sum(`dw`.`client_rg_cmpgn_config`.`actual_spend`) AS `actual_spend`,sum((case when (`dw`.`client_rg_cmpgn_config`.`campaign` like '%venel%') then `dw`.`client_rg_cmpgn_config`.`actual_spend` else 0 end)) AS `venel_spend`,sum((case when (`dw`.`client_rg_cmpgn_config`.`campaign` like '%venel%') then 0 else `dw`.`client_rg_cmpgn_config`.`actual_spend` end)) AS `client_spend`,(sum(`dw`.`client_rg_cmpgn_config`.`planned_spend`) - sum((case when (`dw`.`client_rg_cmpgn_config`.`campaign` like '%venel%') then 0 else `dw`.`client_rg_cmpgn_config`.`actual_spend` end))) AS `variance` from `dw`.`client_rg_cmpgn_config` group by `dw`.`client_rg_cmpgn_config`.`client_id`,`dw`.`client_rg_cmpgn_config`.`reportinggroup`,date_format(`dw`.`client_rg_cmpgn_config`.`reportingmonth`,'%Y-%m-%d'),`dw`.`client_rg_cmpgn_config`.`channel`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="reportingmonth" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="campaign" type="VARCHAR" />
			<column name="invoice_amount" type="DECIMAL" />
			<column name="planned_spend" type="DECIMAL" />
			<column name="actual_spend" type="DECIMAL" />
			<column name="venel_spend" type="DECIMAL" />
			<column name="client_spend" type="DECIMAL" />
			<column name="variance" type="DECIMAL" />
		</view>
		<view name="vw_campaign_old" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select coalesce(`dw`.`c`.`client_id`,'999') AS `client_id`,rtrim(coalesce(`w`.`reporting_group`,`rgw`.`rgw_reportinggroup`,`dw`.`c`.`client_description`,'999 - Unknown')) AS `reporting_group`,(case when (`w`.`campaign_name` like '%Venel%') then 'Yes' else 'No' end) AS `Venel Paid`,(case when (`w`.`channel` = 'GroundTruth') then 'Yes' when (`w`.`channel` = 'El Toro') then 'Yes' when ((`w`.`channel` = 'Facebook') and (`w`.`campaign_name` like '%Geoplacement%')) then 'Yes' else 'No' end) AS `GeoPlacement`,`w`.`reporting_month` AS `reporting_month`,`w`.`campaign_name` AS `Campaign Name`,`w`.`campaign_start` AS `campaign_start`,`w`.`campaign_end` AS `campaign_end`,coalesce(`d`.`device`,`w`.`device`,'Unknown') AS `Device`,`w`.`channel` AS `Channel`,`w`.`impressions` AS `Impressions`,`w`.`clicks` AS `Clicks`,`w`.`cost` AS `Cost`,`w`.`likes` AS `Likes`,`w`.`comments` AS `Comments` from ((((select `g`.`client_id` AS `client_id`,`g`.`reportinggroup` AS `reporting_group`,`g`.`ggl_month` AS `reporting_month`,`g`.`ggl_campaign` AS `campaign_name`,min(`g`.`ggl_month`) AS `campaign_start`,max(`g`.`ggl_month`) AS `campaign_end`,coalesce(`g`.`ggl_device`,'Unknown') AS `device`,'Google' AS `channel`,sum(`g`.`ggl_impressions`) AS `impressions`,sum(`g`.`ggl_clicks`) AS `clicks`,sum((`g`.`ggl_cost` / 1000000)) AS `cost`,0 AS `likes`,0 AS `comments` from `dw`.`google_ad` `g` group by (case when (`g`.`ggl_account` = 'Venel') then '001' else left(`g`.`ggl_account`,3) end),`g`.`ggl_month`,`g`.`ggl_campaign`,coalesce(`g`.`ggl_device`,'Unknown') union all select `gt`.`client_id` AS `client_id`,`gt`.`reportinggroup` AS `reporting_group`,date_format(`gt`.`gt_date`,'%Y-%m-01') AS `reporting_month`,`gt`.`gt_cmpgn_name` AS `campaign_name`,min(`gt`.`gt_cmpgn_start_date`) AS `campaign_start`,max(`gt`.`gt_cmpgn_end_date`) AS `campaign_end`,'mobile' AS `device`,'GroundTruth' AS `channel`,sum(`gt`.`gt_impressions`) AS `impressions`,sum(`gt`.`gt_clicks`) AS `clicks`,sum(`gt`.`gt_spend`) AS `spend`,0 AS `Likes`,0 AS `Comments` from `dw`.`groundtruth` `gt` group by `gt`.`client_id`,`gt`.`reportinggroup`,date_format(`gt`.`gt_date`,'%Y-%m-01'),`gt`.`gt_cmpgn_name` union all select `ads`.`client_id` AS `client_id`,`ads`.`reportinggroup` AS `reporting_group`,`ads`.`bng_month` AS `reporting_month`,`ads`.`bng_campaignname` AS `campaign_name`,min(`ads`.`bng_month`) AS `start_date`,max(`ads`.`bng_month`) AS `stop_date`,`ads`.`bng_devicetype` AS `device`,'Bing' AS `channel`,sum(`ads`.`bng_impressions`) AS `impressions`,sum(`ads`.`bng_clicks`) AS `clicks`,sum(`ads`.`bng_spend`) AS `spend`,0 AS `likes`,0 AS `comments` from `dw`.`bing_ad` `ads` group by `ads`.`client_id`,`ads`.`reportinggroup`,`ads`.`bng_month`,`ads`.`bng_campaignname`,`ads`.`bng_devicetype` union all select `dw`.`vw_eltoro_ads`.`client_id` AS `client_id`,`dw`.`vw_eltoro_ads`.`reporting_group` AS `reporting_group`,`dw`.`vw_eltoro_ads`.`reporting_month` AS `reporting_month`,`dw`.`vw_eltoro_ads`.`campaign_name` AS `campaign_name`,min(`dw`.`vw_eltoro_ads`.`start_date`) AS `start_date`,max(`dw`.`vw_eltoro_ads`.`stop_date`) AS `stop_date`,`dw`.`vw_eltoro_ads`.`device` AS `device`,'El Toro' AS `channel`,sum(`dw`.`vw_eltoro_ads`.`impressions`) AS `impressions`,sum(`dw`.`vw_eltoro_ads`.`clicks`) AS `clicks`,sum(`dw`.`vw_eltoro_ads`.`spend`) AS `spend`,sum(`dw`.`vw_eltoro_ads`.`Likes`) AS `likes`,sum(`dw`.`vw_eltoro_ads`.`Comments`) AS `comments` from `dw`.`vw_eltoro_ads` group by `dw`.`vw_eltoro_ads`.`client_id`,`dw`.`vw_eltoro_ads`.`reporting_group`,`dw`.`vw_eltoro_ads`.`reporting_month`,`dw`.`vw_eltoro_ads`.`campaign_name`,`dw`.`vw_eltoro_ads`.`device` union all select `dw`.`fbad`.`client_id` AS `client_id`,`dw`.`fbad`.`reporting_group` AS `reporting_group`,`dw`.`fbad`.`reporting_month` AS `reporting_month`,`dw`.`fbad`.`campaign_name` AS `campaign_name`,min(`dw`.`fbad`.`start_date`) AS `start_date`,max(`dw`.`fbad`.`stop_date`) AS `stop_date`,`dw`.`fbad`.`device` AS `device`,'Facebook' AS `channel`,sum(`dw`.`fbad`.`impressions`) AS `impressions`,sum(`dw`.`fbad`.`unique_clicks`) AS `clicks`,sum(`dw`.`fbad`.`spend`) AS `spend`,sum(`dw`.`fbad`.`likes`) AS `likes`,sum(`dw`.`fbad`.`comments`) AS `comments` from `dw`.`vw_facebook_ads_device` `fbad` where (not((left(`dw`.`fbad`.`campaign_name`,5) like 'Post:'))) group by `dw`.`fbad`.`client_id`,`dw`.`fbad`.`reporting_group`,`dw`.`fbad`.`reporting_group`,`dw`.`fbad`.`reporting_month`,`dw`.`fbad`.`campaign_name`,`dw`.`fbad`.`device`) `w` left join `dw`.`reporting_group_web` `rgw` on(((`w`.`client_id` = `rgw`.`rgw_clientid`) and (`w`.`campaign_name` like `rgw`.`rgw_campaign`) and (`w`.`channel` = `rgw`.`rgw_websystem`)))) left join `dw`.`vw_client` `c` on((`w`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`device_mapping` `d` on((`d`.`device_source` = `w`.`device`)))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="Venel Paid" type="VARCHAR" />
			<column name="GeoPlacement" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="Campaign Name" type="VARCHAR" />
			<column name="campaign_start" type="DATETIME" />
			<column name="campaign_end" type="DATETIME" />
			<column name="Device" type="VARCHAR" />
			<column name="Channel" type="VARCHAR" />
			<column name="Impressions" type="DECIMAL" />
			<column name="Clicks" type="DECIMAL" />
			<column name="Cost" type="DECIMAL" />
			<column name="Likes" type="DECIMAL" />
			<column name="Comments" type="DECIMAL" />
		</view>
		<view name="vw_campaign_planned_spend" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `x`.`client_id` AS `client_id`,max(`x`.`reportinggroup`) AS `reportinggroup`,`x`.`reportingmonth` AS `reportingmonth`,`x`.`channel` AS `channel`,`x`.`campaign` AS `campaign`,sum(`x`.`invoice_amount`) AS `invoice_amount`,sum(`x`.`planned_spend`) AS `planned_spend`,sum(`x`.`actual_spend`) AS `actual_spend`,sum(`x`.`daily_allocation`) AS `daily_allocation`,sum(`x`.`planned_allocation`) AS `planned_allocation`,sum(`x`.`actual_allocation`) AS `actual_allocation`,max(`x`.`days_remaining`) AS `days_remaining`,min(`x`.`active`) AS `active`,max(`x`.`crt_date`) AS `crt_date`,max(`x`.`crt_user`) AS `crt_user`,max(`x`.`mdfd_date`) AS `mdfd_date`,max(`x`.`mdfd_user`) AS `mdfd_user`,max(`x`.`job_name`) AS `job_name`,sum(`x`.`impressions`) AS `impressions`,sum(`x`.`clicks`) AS `clicks`,sum(`x`.`reach`) AS `reach`,min(`x`.`message`) AS `message`,max(`x`.`start_date`) AS `start_date`,max(`x`.`end_date`) AS `end_date`,sum(`x`.`dt_budget`) AS `dt_budget`,max(`x`.`notes`) AS `notes` from (select `dw`.`client_rg_cmpgn_config`.`client_id` AS `client_id`,`dw`.`client_rg_cmpgn_config`.`reportinggroup` AS `reportinggroup`,date_format(`dw`.`client_rg_cmpgn_config`.`reportingmonth`,'%Y-%m-%d') AS `reportingmonth`,`dw`.`client_rg_cmpgn_config`.`channel` AS `channel`,(case when (`dw`.`client_rg_cmpgn_config`.`campaign` like '%GeoTargeting%') then 'GeoPlacement' when (`dw`.`client_rg_cmpgn_config`.`channel` in ('Bing','Google')) then 'OrthoInteractive' when (`dw`.`client_rg_cmpgn_config`.`channel` = 'Facebook') then 'Facebook' when (`dw`.`client_rg_cmpgn_config`.`channel` = 'AdRoll') then 'Retargeting' else ('*' + `dw`.`client_rg_cmpgn_config`.`channel`) end) AS `platform`,`dw`.`client_rg_cmpgn_config`.`campaign` AS `campaign`,`dw`.`client_rg_cmpgn_config`.`message` AS `message`,`dw`.`client_rg_cmpgn_config`.`start_date` AS `start_date`,`dw`.`client_rg_cmpgn_config`.`end_date` AS `end_date`,`dw`.`client_rg_cmpgn_config`.`job_name` AS `job_name`,`dw`.`client_rg_cmpgn_config`.`dt_budget` AS `dt_budget`,`dw`.`client_rg_cmpgn_config`.`invoice_amount` AS `invoice_amount`,`dw`.`client_rg_cmpgn_config`.`planned_spend` AS `planned_spend`,coalesce(`dw`.`client_rg_cmpgn_config`.`actual_spend`,0) AS `actual_spend`,(coalesce(`dw`.`client_rg_cmpgn_config`.`planned_spend`,0) * ((dayofmonth(curdate()) - 1) / dayofmonth(last_day(curdate())))) AS `MTD_planned_spend`,((coalesce(`dw`.`client_rg_cmpgn_config`.`planned_spend`,0) * (dayofmonth(curdate()) / dayofmonth(last_day(curdate())))) - coalesce(`dw`.`client_rg_cmpgn_config`.`actual_spend`,0)) AS `MTD_var`,if(((to_days(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)) - to_days(last_day(curdate()))) = 0),((to_days(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)) - to_days(curdate())) + 1),0) AS `days_remaining`,coalesce(round((`dw`.`client_rg_cmpgn_config`.`actual_spend` / if((date_format(curdate(),'%Y-%m-%d') <= last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)),dayofmonth((curdate() - 1)),dayofmonth(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)))),2),0) AS `actual_allocation`,coalesce(if(((to_days(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)) - to_days(last_day(curdate()))) = 0),round(((`dw`.`client_rg_cmpgn_config`.`planned_spend` - `dw`.`client_rg_cmpgn_config`.`actual_spend`) / ((to_days(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)) - to_days(curdate())) + 1)),2),0),0) AS `daily_allocation`,if(((coalesce((case when (`dw`.`client_rg_cmpgn_config`.`campaign` like '%venel%') then 0 else `dw`.`client_rg_cmpgn_config`.`actual_spend` end),0) = 0) and (coalesce(`dw`.`client_rg_cmpgn_config`.`planned_spend`,0) = 0)),0,coalesce((1 - (round((`dw`.`client_rg_cmpgn_config`.`actual_spend` / if((date_format(curdate(),'%Y-%m-%d') <= last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)),dayofmonth((curdate() - 1)),dayofmonth(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`)))),2) / round((`dw`.`client_rg_cmpgn_config`.`planned_spend` / dayofmonth(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`))),2))),if((coalesce(`dw`.`client_rg_cmpgn_config`.`planned_spend`,0) = 0),-(1),1))) AS `var_pct`,round((`dw`.`client_rg_cmpgn_config`.`planned_spend` / dayofmonth(last_day(`dw`.`client_rg_cmpgn_config`.`reportingmonth`))),2) AS `planned_allocation`,coalesce(`dw`.`client_rg_cmpgn_config`.`impressions`,0) AS `impressions`,coalesce(`dw`.`client_rg_cmpgn_config`.`clicks`,0) AS `clicks`,coalesce(`dw`.`client_rg_cmpgn_config`.`reach`,0) AS `reach`,`dw`.`client_rg_cmpgn_config`.`notes` AS `notes`,`dw`.`client_rg_cmpgn_config`.`active` AS `active`,`dw`.`client_rg_cmpgn_config`.`crt_date` AS `crt_date`,`dw`.`client_rg_cmpgn_config`.`crt_user` AS `crt_user`,`dw`.`client_rg_cmpgn_config`.`mdfd_date` AS `mdfd_date`,`dw`.`client_rg_cmpgn_config`.`mdfd_user` AS `mdfd_user` from `dw`.`client_rg_cmpgn_config`) `x` group by `x`.`client_id`,`x`.`reportingmonth`,`x`.`channel`,`x`.`campaign` order by `x`.`client_id`,`x`.`reportingmonth` desc]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="reportingmonth" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="campaign" type="VARCHAR" />
			<column name="invoice_amount" type="DECIMAL" />
			<column name="planned_spend" type="DECIMAL" />
			<column name="actual_spend" type="DECIMAL" />
			<column name="daily_allocation" type="DECIMAL" />
			<column name="planned_allocation" type="DECIMAL" />
			<column name="actual_allocation" type="DECIMAL" />
			<column name="days_remaining" type="BIGINT" />
			<column name="active" type="TINYINT" />
			<column name="crt_date" type="DATETIME" />
			<column name="crt_user" type="VARCHAR" />
			<column name="mdfd_date" type="DATETIME" />
			<column name="mdfd_user" type="VARCHAR" />
			<column name="job_name" type="VARCHAR" />
			<column name="impressions" type="DECIMAL" />
			<column name="clicks" type="DECIMAL" />
			<column name="reach" type="DECIMAL" />
			<column name="message" type="VARCHAR" />
			<column name="start_date" type="DATE" />
			<column name="end_date" type="DATE" />
			<column name="dt_budget" type="DECIMAL" />
			<column name="notes" type="VARCHAR" />
		</view>
		<view name="vw_campaign_planned_spend_fixed" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`client_rg_cmpgn_config_fixed`.`client_id` AS `client_id`,`dw`.`client_rg_cmpgn_config_fixed`.`reportinggroup` AS `reportinggroup`,date_format(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`,'%Y-%m-%d') AS `reportingmonth`,`dw`.`client_rg_cmpgn_config_fixed`.`channel` AS `channel`,(case when (`dw`.`client_rg_cmpgn_config_fixed`.`campaign` like '%GeoTargeting%') then 'GeoPlacement' when (`dw`.`client_rg_cmpgn_config_fixed`.`channel` in ('Bing','Google')) then 'OrthoInteractive' when (`dw`.`client_rg_cmpgn_config_fixed`.`channel` = 'Facebook') then 'Facebook' when (`dw`.`client_rg_cmpgn_config_fixed`.`channel` = 'AdRoll') then 'Retargeting' else ('*' + `dw`.`client_rg_cmpgn_config_fixed`.`channel`) end) AS `platform`,`dw`.`client_rg_cmpgn_config_fixed`.`campaign` AS `campaign`,`dw`.`client_rg_cmpgn_config_fixed`.`message` AS `message`,`dw`.`client_rg_cmpgn_config_fixed`.`start_date` AS `start_date`,`dw`.`client_rg_cmpgn_config_fixed`.`end_date` AS `end_date`,`dw`.`client_rg_cmpgn_config_fixed`.`job_name` AS `job_name`,`dw`.`client_rg_cmpgn_config_fixed`.`dt_budget` AS `dt_budget`,`dw`.`client_rg_cmpgn_config_fixed`.`invoice_amount` AS `invoice_amount`,`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend` AS `planned_spend`,coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`actual_spend`,0) AS `actual_spend`,(coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend`,0) * ((dayofmonth(curdate()) - 1) / dayofmonth(last_day(curdate())))) AS `MTD_planned_spend`,((coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend`,0) * (dayofmonth(curdate()) / dayofmonth(last_day(curdate())))) - coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`actual_spend`,0)) AS `MTD_var`,if(((to_days(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)) - to_days(last_day(curdate()))) = 0),((to_days(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)) - to_days(curdate())) + 1),0) AS `days_remaining`,coalesce(round((`dw`.`client_rg_cmpgn_config_fixed`.`actual_spend` / if((date_format(curdate(),'%Y-%m-%d') <= last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)),dayofmonth((curdate() - 1)),dayofmonth(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)))),2),0) AS `actual_allocation`,coalesce(if(((to_days(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)) - to_days(last_day(curdate()))) = 0),round(((`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend` - `dw`.`client_rg_cmpgn_config_fixed`.`actual_spend`) / ((to_days(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)) - to_days(curdate())) + 1)),2),0),0) AS `daily_allocation`,if(((coalesce((case when (`dw`.`client_rg_cmpgn_config_fixed`.`campaign` like '%venel%') then 0 else `dw`.`client_rg_cmpgn_config_fixed`.`actual_spend` end),0) = 0) and (coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend`,0) = 0)),0,coalesce((1 - (round((`dw`.`client_rg_cmpgn_config_fixed`.`actual_spend` / if((date_format(curdate(),'%Y-%m-%d') <= last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)),dayofmonth((curdate() - 1)),dayofmonth(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`)))),2) / round((`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend` / dayofmonth(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`))),2))),if((coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend`,0) = 0),-(1),1))) AS `var_pct`,round((`dw`.`client_rg_cmpgn_config_fixed`.`planned_spend` / dayofmonth(last_day(`dw`.`client_rg_cmpgn_config_fixed`.`reportingmonth`))),2) AS `planned_allocation`,coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`impressions`,0) AS `impressions`,coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`clicks`,0) AS `clicks`,coalesce(`dw`.`client_rg_cmpgn_config_fixed`.`reach`,0) AS `reach`,`dw`.`client_rg_cmpgn_config_fixed`.`notes` AS `notes`,`dw`.`client_rg_cmpgn_config_fixed`.`active` AS `active`,`dw`.`client_rg_cmpgn_config_fixed`.`crt_date` AS `crt_date`,`dw`.`client_rg_cmpgn_config_fixed`.`crt_user` AS `crt_user`,`dw`.`client_rg_cmpgn_config_fixed`.`mdfd_date` AS `mdfd_date`,`dw`.`client_rg_cmpgn_config_fixed`.`mdfd_user` AS `mdfd_user` from `dw`.`client_rg_cmpgn_config_fixed`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="reportingmonth" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="platform" type="VARCHAR" />
			<column name="campaign" type="VARCHAR" />
			<column name="message" type="VARCHAR" />
			<column name="start_date" type="DATE" />
			<column name="end_date" type="DATE" />
			<column name="job_name" type="VARCHAR" />
			<column name="dt_budget" type="DECIMAL" />
			<column name="invoice_amount" type="DECIMAL" />
			<column name="planned_spend" type="DECIMAL" />
			<column name="actual_spend" type="DECIMAL" />
			<column name="MTD_planned_spend" type="DECIMAL" />
			<column name="MTD_var" type="DECIMAL" />
			<column name="days_remaining" type="BIGINT" />
			<column name="actual_allocation" type="DECIMAL" />
			<column name="daily_allocation" type="DECIMAL" />
			<column name="var_pct" type="DECIMAL" />
			<column name="planned_allocation" type="DECIMAL" />
			<column name="impressions" type="DECIMAL" />
			<column name="clicks" type="DECIMAL" />
			<column name="reach" type="DECIMAL" />
			<column name="notes" type="VARCHAR" />
			<column name="active" type="TINYINT" />
			<column name="crt_date" type="DATETIME" />
			<column name="crt_user" type="VARCHAR" />
			<column name="mdfd_date" type="DATETIME" />
			<column name="mdfd_user" type="VARCHAR" />
		</view>
		<view name="vw_channelsummary" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`client`.`client_id` AS `client_id`,`cc`.`reportingmonth` AS `reportingmonth`,(case when ((locate('Geoplacement',`cc`.`campaign`) > 0) or (locate('GeoTargeting',`cc`.`campaign`) > 0)) then 'Geoplacement ™' else `cctgry`.`channel_category` end) AS `channel_category`,`cc`.`message` AS `message`,sum(`cc`.`impressions`) AS `Impressions`,sum(`cc`.`reach`) AS `Reach`,sum(`cc`.`clicks`) AS `Clicks`,sum(`cc`.`invoice_amount`) AS `invoice_amount`,sum(`cc`.`planned_spend`) AS `planned_spend`,sum(`cc`.`actual_spend`) AS `actual_spend`,sum((case when (`cc`.`campaign` like '%venel%') then `cc`.`actual_spend` else 0 end)) AS `venel_spend`,sum((case when (`cc`.`campaign` like '%venel%') then 0 else `cc`.`actual_spend` end)) AS `client_spend`,(sum(`cc`.`planned_spend`) - sum((case when (`cc`.`campaign` like '%venel%') then 0 else `cc`.`actual_spend` end))) AS `variance` from (((`dw`.`client_rg_cmpgn_config` `cc` join `dw`.`client` on((`cc`.`client_id` = convert(`dw`.`client`.`client_id` using utf8mb4)))) left join `dw`.`channel` `c` on((`cc`.`channel` = `c`.`channel`))) left join `dw`.`channel_category` `cctgry` on((`cctgry`.`channel_category` = (case when ((locate('Geoplacement',`cc`.`campaign`) > 0) or (locate('GeoTargeting',`cc`.`campaign`) > 0)) then 'Geoplacement ™' else `c`.`channel_category` end)))) group by `dw`.`client`.`client_id`,`cc`.`reportingmonth`,(case when ((locate('Geoplacement',`cc`.`campaign`) > 0) or (locate('GeoTargeting',`cc`.`campaign`) > 0)) then 'Geoplacement ™' else `c`.`channel_category` end),`cc`.`message`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="channel_category" type="VARCHAR" />
			<column name="message" type="VARCHAR" />
			<column name="Impressions" type="DECIMAL" />
			<column name="Reach" type="DECIMAL" />
			<column name="Clicks" type="DECIMAL" />
			<column name="invoice_amount" type="DECIMAL" />
			<column name="planned_spend" type="DECIMAL" />
			<column name="actual_spend" type="DECIMAL" />
			<column name="venel_spend" type="DECIMAL" />
			<column name="client_spend" type="DECIMAL" />
			<column name="variance" type="DECIMAL" />
		</view>
		<view name="vw_chatbot_busiest_period" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `chtbtbp`.`story_id` AS `story_id`,`chtbtbp`.`reportingmonth` AS `reportingmonth`,`chtbtbp`.`chtbt_day` AS `chtbt_day`,`chtbtbp`.`chtbtbp_hour` AS `chtbtbp_hour`,`chtbtbp`.`chtbtbp_value` AS `chtbtbp_value`,`chtbtbp`.`chtbtbp_usage` AS `chtbtbp_usage` from (`dw`.`chatbot_busiest_periods` `chtbtbp` join (select `a`.`story_id` AS `story_id`,`a`.`reportingmonth` AS `reportingmonth`,max(`a`.`chtbtbp_value`) AS `bp_value` from `dw`.`chatbot_busiest_periods` `a` group by `a`.`story_id`,`a`.`reportingmonth` having (max(`a`.`chtbtbp_value`) > 0)) `bp` on(((`chtbtbp`.`story_id` = `bp`.`story_id`) and (`chtbtbp`.`reportingmonth` = `bp`.`reportingmonth`) and (`chtbtbp`.`chtbtbp_value` = `bp`.`bp_value`))))]]></view_script>
			<column name="story_id" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="chtbt_day" type="INT" />
			<column name="chtbtbp_hour" type="INT" />
			<column name="chtbtbp_value" type="INT" />
			<column name="chtbtbp_usage" type="INT" />
		</view>
		<view name="vw_client" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`client_id` AS `client_id`,`c`.`client_name` AS `client_name`,rtrim(ltrim(concat(`c`.`client_id`,' - ',`c`.`client_name`))) AS `client_description`,rtrim(ltrim(concat(`c`.`client_id`,' - ',`c`.`client_city`))) AS `client_int_description`,`c`.`client_city` AS `client_city`,`c`.`client_state` AS `client_state`,`c`.`client_generate_mor` AS `client_generate_mor`,`c`.`client_reporting_periods` AS `client_reporting_periods`,`c`.`client_status` AS `client_status`,`c`.`client_oi_coordinator` AS `client_oi_coordinator`,`c`.`client_site_url` AS `client_url`,`c`.`client_site_token` AS `client_token`,`c`.`client_site_api_path` AS `client_api_path`,concat(`c`.`client_site_url`,`c`.`client_site_api_path`,`c`.`client_site_appointment_path`,'?services_token=',`c`.`client_site_token`) AS `client_appointment_api`,concat(`c`.`client_site_url`,`c`.`client_site_api_path`,`c`.`client_site_referral_path`,'?services_token=',`c`.`client_site_token`) AS `client_referral_api`,concat(`c`.`client_site_url`,`c`.`client_site_api_path`,'/reviews','?services_token=',`c`.`client_site_token`) AS `client_review_api`,concat(`c`.`client_site_url`,'api/doctorservice?services_token=',`c`.`client_site_token`) AS `client_provider_api`,`c`.`client_phone` AS `client_phone`,`c`.`Email Subject - Appt Request` AS `client_appt_subject`,`c`.`client_reply_approval_email` AS `client_reply_approval_email`,`c`.`client_ga_viewid` AS `client_ga_viewid`,`c`.`client_account_planner` AS `client_account_planner`,`c`.`client_communication_director` AS `client_communication_director`,`c`.`client_pf_target_id` AS `client_patientfeedback_target`,`c`.`client_pf_contacturl` AS `client_patientfeedback_url`,`c`.`client_reviews_pe` AS `client_reviews_pe`,`c`.`client_adwords_account` AS `client_adwords_account`,`c`.`client_bingads_account` AS `client_bingads_account`,`c`.`client_startdate` AS `client_startdate`,`c`.`client_chatzipurl` AS `client_chatzipurl`,`ci`.`appt_url` AS `client_appointment_url`,concat(`c`.`client_site_url`,`c`.`client_review_url`) AS `client_review_url`,`ci`.`logo` AS `client_logo_url` from (`dw`.`client` `c` left join `dw`.`client_pe_info` `ci` on((`c`.`client_id` = `ci`.`clientid`)))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="client_int_description" type="VARCHAR" />
			<column name="client_city" type="VARCHAR" />
			<column name="client_state" type="VARCHAR" />
			<column name="client_generate_mor" type="VARCHAR" />
			<column name="client_reporting_periods" type="INT" />
			<column name="client_status" type="VARCHAR" />
			<column name="client_oi_coordinator" type="VARCHAR" />
			<column name="client_url" type="VARCHAR" />
			<column name="client_token" type="VARCHAR" />
			<column name="client_api_path" type="VARCHAR" />
			<column name="client_appointment_api" type="TEXT" />
			<column name="client_referral_api" type="TEXT" />
			<column name="client_review_api" type="TEXT" />
			<column name="client_provider_api" type="TEXT" />
			<column name="client_phone" type="VARCHAR" />
			<column name="client_appt_subject" type="VARCHAR" />
			<column name="client_reply_approval_email" type="VARCHAR" />
			<column name="client_ga_viewid" type="VARCHAR" />
			<column name="client_account_planner" type="VARCHAR" />
			<column name="client_communication_director" type="VARCHAR" />
			<column name="client_patientfeedback_target" type="VARCHAR" />
			<column name="client_patientfeedback_url" type="VARCHAR" />
			<column name="client_reviews_pe" type="VARCHAR" />
			<column name="client_adwords_account" type="VARCHAR" />
			<column name="client_bingads_account" type="VARCHAR" />
			<column name="client_startdate" type="DATE" />
			<column name="client_chatzipurl" type="VARCHAR" />
			<column name="client_appointment_url" type="VARCHAR" />
			<column name="client_review_url" type="TEXT" />
			<column name="client_logo_url" type="VARCHAR" />
		</view>
		<view name="vw_client_email" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ce`.`em_clientid` AS `em_clientid`,`ce`.`em_tool` AS `em_tool`,`ce`.`em_toolclientid` AS `em_toolclientid`,`ce`.`em_toolapikey` AS `em_toolapikey` from (`dw`.`client` `c` join `dw`.`client_email` `ce` on((convert(`c`.`client_id` using utf8mb4) = `ce`.`em_clientid`))) where (`c`.`client_status` = 'Active')]]></view_script>
			<column name="em_clientid" type="VARCHAR" />
			<column name="em_tool" type="VARCHAR" />
			<column name="em_toolclientid" type="VARCHAR" />
			<column name="em_toolapikey" type="VARCHAR" />
		</view>
		<view name="vw_client_ext_reviews" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cer`.`client_id` AS `client_id`,`p`.`title` AS `provider_name`,`cer`.`npi` AS `npi`,`cer`.`google_rating` AS `google_rating`,`cer`.`google_reviews` AS `google_reviews`,`cer`.`healthgrades_rating` AS `healthgrades_rating`,`cer`.`healthgrades_reviews` AS `healthgrades_reviews`,`cer`.`yelp_rating` AS `yelp_rating`,`cer`.`yelp_reviews` AS `yelp_reviews`,`cer`.`vitals_rating` AS `vitals_rating`,`cer`.`vitals_reviews` AS `vitals_reviews`,`cer`.`webmd_rating` AS `webmd_rating`,`cer`.`webmd_reviews` AS `webmd_reviews`,`cer`.`ratemd_rating` AS `ratemd_rating`,`cer`.`ratemd_reviews` AS `ratemd_reviews`,(((((((`cer`.`google_rating` * `cer`.`google_reviews`) + (`cer`.`healthgrades_rating` * `cer`.`healthgrades_reviews`)) + (`cer`.`yelp_rating` * `cer`.`yelp_reviews`)) + (`cer`.`vitals_rating` * `cer`.`vitals_reviews`)) + (`cer`.`webmd_rating` * `cer`.`webmd_reviews`)) + (`cer`.`ratemd_rating` * `cer`.`ratemd_reviews`)) / (((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`)) AS `external_rating`,(((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) AS `external_reviews` from (`dw`.`client_ext_reviews` `cer` left join `dw`.`provider` `p` on((`cer`.`npi` = convert(`p`.`npi` using utf8mb4)))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0)]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="provider_name" type="VARCHAR" />
			<column name="npi" type="VARCHAR" />
			<column name="google_rating" type="DECIMAL" />
			<column name="google_reviews" type="INT" />
			<column name="healthgrades_rating" type="DECIMAL" />
			<column name="healthgrades_reviews" type="INT" />
			<column name="yelp_rating" type="DECIMAL" />
			<column name="yelp_reviews" type="INT" />
			<column name="vitals_rating" type="DECIMAL" />
			<column name="vitals_reviews" type="INT" />
			<column name="webmd_rating" type="DECIMAL" />
			<column name="webmd_reviews" type="INT" />
			<column name="ratemd_rating" type="DECIMAL" />
			<column name="ratemd_reviews" type="INT" />
			<column name="external_rating" type="DECIMAL" />
			<column name="external_reviews" type="BIGINT" />
		</view>
		<view name="vw_client_ext_reviews_edit" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cer`.`npi` AS `provider`,`cer`.`client_id` AS `client_id`,`cer`.`npi` AS `npi`,`cer`.`google_rating` AS `google_rating`,`cer`.`google_reviews` AS `google_reviews`,`cer`.`healthgrades_rating` AS `healthgrades_rating`,`cer`.`healthgrades_reviews` AS `healthgrades_reviews`,`cer`.`yelp_rating` AS `yelp_rating`,`cer`.`yelp_reviews` AS `yelp_reviews`,`cer`.`vitals_rating` AS `vitals_rating`,`cer`.`vitals_reviews` AS `vitals_reviews`,`cer`.`webmd_rating` AS `webmd_rating`,`cer`.`webmd_reviews` AS `webmd_reviews`,`cer`.`ratemd_rating` AS `ratemd_rating`,`cer`.`ratemd_reviews` AS `ratemd_reviews` from `dw`.`client_ext_reviews` `cer`]]></view_script>
			<column name="provider" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="npi" type="VARCHAR" />
			<column name="google_rating" type="DECIMAL" />
			<column name="google_reviews" type="INT" />
			<column name="healthgrades_rating" type="DECIMAL" />
			<column name="healthgrades_reviews" type="INT" />
			<column name="yelp_rating" type="DECIMAL" />
			<column name="yelp_reviews" type="INT" />
			<column name="vitals_rating" type="DECIMAL" />
			<column name="vitals_reviews" type="INT" />
			<column name="webmd_rating" type="DECIMAL" />
			<column name="webmd_reviews" type="INT" />
			<column name="ratemd_rating" type="DECIMAL" />
			<column name="ratemd_reviews" type="INT" />
		</view>
		<view name="vw_client_reportinggroup_monthlybudget" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`client_rg_mnthly_bdgt`.`client_id` AS `client_id`,`dw`.`client_rg_mnthly_bdgt`.`reportinggroup` AS `reportinggroup`,`dw`.`client_rg_mnthly_bdgt`.`reportingmonth` AS `reportingmonth`,`dw`.`client_rg_mnthly_bdgt`.`monthlybudget` AS `monthlybudget`,`dw`.`client_rg_mnthly_bdgt`.`providers` AS `providers`,`dw`.`client_rg_mnthly_bdgt`.`notes` AS `notes`,`dw`.`client_rg_mnthly_bdgt`.`active` AS `active`,`dw`.`client_rg_mnthly_bdgt`.`crt_user` AS `crt_user`,`dw`.`client_rg_mnthly_bdgt`.`crt_date` AS `crt_date`,`dw`.`client_rg_mnthly_bdgt`.`mdfd_user` AS `mdfd_user`,`dw`.`client_rg_mnthly_bdgt`.`mdfd_date` AS `mdfd_date` from `dw`.`client_rg_mnthly_bdgt`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="monthlybudget" type="DECIMAL" />
			<column name="providers" type="INT" />
			<column name="notes" type="VARCHAR" />
			<column name="active" type="TINYINT" />
			<column name="crt_user" type="VARCHAR" />
			<column name="crt_date" type="DATETIME" />
			<column name="mdfd_user" type="VARCHAR" />
			<column name="mdfd_date" type="DATETIME" />
		</view>
		<view name="vw_ecommunication" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`client_id` AS `client_id`,`c`.`client_description` AS `client_description`,`c`.`client_description` AS `reporting_group`,date_format(cast(`e`.`e_sentdatetime` as date),'%Y-%m-01') AS `reporting_month`,date_format(cast(`e`.`e_sentdatetime` as date),'%Y-%m-%d') AS `sent_date`,(case when (substr(`e`.`e_name`,3,1) = '-') then replace(replace(replace(substr(`e`.`e_name`,13,200),'_APPROVED',''),'-APPROVED',''),'APPROVED','') else `e`.`e_name` end) AS `ecomm_campaign`,`e`.`e_name` AS `e_name`,`e`.`e_recipients` AS `ecomm_recipients`,`e`.`e_opened_unique` AS `ecomm_opened_unique`,`e`.`e_clicks` AS `ecomm_clicks`,`e`.`e_bounced` AS `ecomm_bounced` from (`dw`.`ecommunications` `e` left join `dw`.`vw_client` `c` on((`e`.`e_clientid` = convert(`c`.`client_id` using utf8mb4)))) where ((case when (substr(`e`.`e_name`,3,1) = '-') then replace(replace(replace(substr(`e`.`e_name`,13,200),'_APPROVED',''),'-APPROVED',''),'APPROVED','') else `e`.`e_name` end) <> 'Dr. Tyndall PE Distribution April 2021')]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="sent_date" type="VARCHAR" />
			<column name="ecomm_campaign" type="VARCHAR" />
			<column name="e_name" type="VARCHAR" />
			<column name="ecomm_recipients" type="INT" />
			<column name="ecomm_opened_unique" type="INT" />
			<column name="ecomm_clicks" type="INT" />
			<column name="ecomm_bounced" type="INT" />
		</view>
		<view name="vw_ecommunication_mor" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `vw_ecommunication`.`client_id` AS `client_id`,`vw_ecommunication`.`reporting_group` AS `reporting_group`,`vw_ecommunication`.`reporting_month` AS `reporting_month`,count(distinct `vw_ecommunication`.`ecomm_campaign`) AS `campaign_count`,sum(`vw_ecommunication`.`ecomm_recipients`) AS `recipients_count`,sum(`vw_ecommunication`.`ecomm_opened_unique`) AS `unique_opens_count`,sum(`vw_ecommunication`.`ecomm_clicks`) AS `clicks_count`,(case when (sum(`vw_ecommunication`.`ecomm_opened_unique`) = 0) then 0 else (sum(`vw_ecommunication`.`ecomm_opened_unique`) / sum((`vw_ecommunication`.`ecomm_recipients` - `vw_ecommunication`.`ecomm_bounced`))) end) AS `open_rate` from `dw`.`vw_ecommunication` group by `vw_ecommunication`.`client_id`,`vw_ecommunication`.`reporting_group`,`vw_ecommunication`.`reporting_month`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="campaign_count" type="BIGINT" />
			<column name="recipients_count" type="DECIMAL" />
			<column name="unique_opens_count" type="DECIMAL" />
			<column name="clicks_count" type="DECIMAL" />
			<column name="open_rate" type="DECIMAL" />
		</view>
		<view name="vw_eltoro_ads" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ol`.`client_id` AS `client_id`,`ol`.`reportinggroup` AS `reporting_group`,date_format(coalesce(`s`.`eltrstts_startdate`,(case when (curdate() between `ol`.`eltrrdrlns_startdate` and `ol`.`eltrrdrlns_enddate`) then curdate() else NULL end)),'%Y-%m-01') AS `reporting_month`,`ol`.`eltrrdrlns_name` AS `campaign_name`,`ol`.`eltrrdrlns_startdate` AS `start_date`,`ol`.`eltrrdrlns_enddate` AS `stop_date`,'mobile' AS `device`,'El Toro' AS `channel`,coalesce((case when (`s`.`eltrstts_impressions` > `ol`.`eltrrdrlns_total_impressions`) then `ol`.`eltrrdrlns_total_impressions` else `s`.`eltrstts_impressions` end),0) AS `impressions`,coalesce(`s`.`eltrstts_clicks`,0) AS `clicks`,coalesce(((case when (`s`.`eltrstts_impressions` > `ol`.`eltrrdrlns_total_impressions`) then `ol`.`eltrrdrlns_total_impressions` else `s`.`eltrstts_impressions` end) * (`ol`.`eltrrdrlns_cpm` / 1000)),0) AS `spend`,0 AS `Likes`,0 AS `Comments` from (`dw`.`eltoro_orderlines` `ol` left join `dw`.`eltoro_stats` `s` on((`ol`.`eltrrdrlns_id` = `s`.`eltrstts_orderline_id`))) where (date_format(coalesce(`s`.`eltrstts_startdate`,(case when (curdate() between `ol`.`eltrrdrlns_startdate` and `ol`.`eltrrdrlns_enddate`) then curdate() else NULL end)),'%Y-%m-01') is not null)]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="campaign_name" type="VARCHAR" />
			<column name="start_date" type="DATETIME" />
			<column name="stop_date" type="DATETIME" />
			<column name="device" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="impressions" type="BIGINT" />
			<column name="clicks" type="BIGINT" />
			<column name="spend" type="DECIMAL" />
			<column name="Likes" type="INT" />
			<column name="Comments" type="INT" />
		</view>
		<view name="vw_facebook_ads_demo" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ads`.`client_id` AS `client_id`,`c`.`client_description` AS `client_description`,`ads`.`reportinggroup` AS `reporting_group`,`ads`.`fbad_campaign_name` AS `campaign_name`,date_format(`ag`.`fbad_reporting_month`,'%Y-%m-01') AS `reporting_month`,`ag`.`fbad_age` AS `age`,`ag`.`fbad_gender` AS `gender`,`ads`.`fbad_date_start` AS `start_date`,`ads`.`fbad_date_stop` AS `stop_date`,sum(`ag`.`fbad_like`) AS `likes`,sum(`ag`.`fbad_impressions`) AS `impressions`,sum(`ag`.`fbad_reach`) AS `reach`,sum(`ag`.`fbad_spend`) AS `spend`,sum(`ag`.`fbad_clicks`) AS `clicks`,sum(`ag`.`fbad_comment`) AS `comments`,sum(`ag`.`fbad_unique_clicks`) AS `unique_clicks`,sum(`ag`.`fbad_page_engagement`) AS `page_engagement`,sum(`ag`.`fbad_post_engagement`) AS `post_engagement` from ((`dw`.`facebook_ads` `ads` join `dw`.`facebook_metrics_agegender` `ag` on(((`ads`.`fbad_ad_id` = `ag`.`fbad_ad_id`) and (`ads`.`fbad_adset_id` = `ag`.`fbad_adset_id`) and (`ads`.`fbad_campaign_id` = `ag`.`fbad_campaign_id`)))) left join `dw`.`vw_client` `c` on((`ads`.`client_id` = `c`.`client_id`))) group by `ads`.`client_id`,`c`.`client_description`,`ads`.`reportinggroup`,`ads`.`fbad_campaign_name`,`ag`.`fbad_reporting_month`,`ag`.`fbad_age`,`ag`.`fbad_gender`,`ads`.`fbad_date_start`,`ads`.`fbad_date_stop`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="campaign_name" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="age" type="VARCHAR" />
			<column name="gender" type="VARCHAR" />
			<column name="start_date" type="DATE" />
			<column name="stop_date" type="DATE" />
			<column name="likes" type="DECIMAL" />
			<column name="impressions" type="DECIMAL" />
			<column name="reach" type="DECIMAL" />
			<column name="spend" type="DECIMAL" />
			<column name="clicks" type="DECIMAL" />
			<column name="comments" type="DECIMAL" />
			<column name="unique_clicks" type="DECIMAL" />
			<column name="page_engagement" type="DECIMAL" />
			<column name="post_engagement" type="DECIMAL" />
		</view>
		<view name="vw_facebook_ads_device" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ads`.`client_id` AS `client_id`,`c`.`client_description` AS `client_description`,`ads`.`reportinggroup` AS `reporting_group`,`ads`.`fbad_campaign_name` AS `campaign_name`,date_format(`ag`.`fbad_reporting_month`,'%Y-%m-01') AS `reporting_month`,`ag`.`fbad_device` AS `device`,`ads`.`fbad_date_start` AS `start_date`,`ads`.`fbad_date_stop` AS `stop_date`,sum(coalesce(`ag`.`fbad_like`,0)) AS `likes`,sum(coalesce(`ag`.`fbad_impressions`,0)) AS `impressions`,sum(coalesce(`ag`.`fbad_reach`,0)) AS `reach`,sum(coalesce(`ag`.`fbad_spend`,0)) AS `spend`,sum(coalesce(`ag`.`fbad_clicks`,0)) AS `clicks`,sum(coalesce(`ag`.`fbad_comment`,0)) AS `comments`,sum(coalesce(`ag`.`fbad_unique_clicks`,0)) AS `unique_clicks`,sum(coalesce(`ag`.`fbad_page_engagement`,0)) AS `page_engagement`,sum(coalesce(`ag`.`fbad_post_engagement`,0)) AS `post_engagement` from ((`dw`.`facebook_ads` `ads` join `dw`.`facebook_metrics_device` `ag` on(((`ads`.`fbad_ad_id` = `ag`.`fbad_ad_id`) and (`ads`.`fbad_adset_id` = `ag`.`fbad_adset_id`) and (`ads`.`fbad_campaign_id` = `ag`.`fbad_campaign_id`)))) left join `dw`.`vw_client` `c` on((`ads`.`client_id` = `c`.`client_id`))) group by `ads`.`client_id`,`c`.`client_description`,`ads`.`reportinggroup`,`ads`.`fbad_campaign_name`,date_format(`ag`.`fbad_reporting_month`,'%Y-%m-01'),`ag`.`fbad_device`,`ads`.`fbad_date_start`,`ads`.`fbad_date_stop`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="campaign_name" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="device" type="VARCHAR" />
			<column name="start_date" type="DATE" />
			<column name="stop_date" type="DATE" />
			<column name="likes" type="DECIMAL" />
			<column name="impressions" type="DECIMAL" />
			<column name="reach" type="DECIMAL" />
			<column name="spend" type="DECIMAL" />
			<column name="clicks" type="DECIMAL" />
			<column name="comments" type="DECIMAL" />
			<column name="unique_clicks" type="DECIMAL" />
			<column name="page_engagement" type="DECIMAL" />
			<column name="post_engagement" type="DECIMAL" />
		</view>
		<view name="vw_facebook_ads_device_bydate" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ads`.`client_id` AS `client_id`,`dw`.`c`.`client_description` AS `client_description`,`ads`.`reportinggroup` AS `reporting_group`,`ads`.`fbad_campaign_name` AS `campaign_name`,`ag`.`fbad_reporting_month` AS `reporting_month`,`ag`.`fbad_device` AS `device`,`ads`.`fbad_date_start` AS `start_date`,`ads`.`fbad_date_stop` AS `stop_date`,sum(coalesce(`ag`.`fbad_like`,0)) AS `likes`,sum(coalesce(`ag`.`fbad_impressions`,0)) AS `impressions`,sum(coalesce(`ag`.`fbad_reach`,0)) AS `reach`,sum(coalesce(`ag`.`fbad_spend`,0)) AS `spend`,sum(coalesce(`ag`.`fbad_clicks`,0)) AS `clicks`,sum(coalesce(`ag`.`fbad_comment`,0)) AS `comments`,sum(coalesce(`ag`.`fbad_unique_clicks`,0)) AS `unique_clicks`,sum(coalesce(`ag`.`fbad_page_engagement`,0)) AS `page_engagement`,sum(coalesce(`ag`.`fbad_post_engagement`,0)) AS `post_engagement` from ((`dw`.`facebook_ads` `ads` join `dw`.`facebook_metrics_device` `ag` on(((`ads`.`fbad_ad_id` = `ag`.`fbad_ad_id`) and (`ads`.`fbad_adset_id` = `ag`.`fbad_adset_id`) and (`ads`.`fbad_campaign_id` = `ag`.`fbad_campaign_id`)))) left join `dw`.`vw_client` `c` on((`ads`.`client_id` = `dw`.`c`.`client_id`))) group by `ads`.`client_id`,`dw`.`c`.`client_description`,`ads`.`reportinggroup`,`ads`.`fbad_campaign_name`,`ag`.`fbad_reporting_month`,`ag`.`fbad_device`,`ads`.`fbad_date_start`,`ads`.`fbad_date_stop`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="campaign_name" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="device" type="VARCHAR" />
			<column name="start_date" type="DATE" />
			<column name="stop_date" type="DATE" />
			<column name="likes" type="DECIMAL" />
			<column name="impressions" type="DECIMAL" />
			<column name="reach" type="DECIMAL" />
			<column name="spend" type="DECIMAL" />
			<column name="clicks" type="DECIMAL" />
			<column name="comments" type="DECIMAL" />
			<column name="unique_clicks" type="DECIMAL" />
			<column name="page_engagement" type="DECIMAL" />
			<column name="post_engagement" type="DECIMAL" />
		</view>
		<view name="vw_facebook_page_likes" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `fp`.`fbpg_clientid` AS `clientid`,`fpl`.`fbpglks_reportingmonth` AS `reportingmonth`,sum(`fpl`.`fbpglks_likes`) AS `likes`,0 AS `start_likes` from (`dw`.`facebook_page_likes` `fpl` join `dw`.`facebook_page` `fp` on((`fpl`.`fbpglks_pageid` = `fp`.`fbpg_id`))) where (`fp`.`fbpg_clientid` is not null) group by `fp`.`fbpg_clientid`,`fpl`.`fbpglks_reportingmonth`]]></view_script>
			<column name="clientid" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="likes" type="DECIMAL" />
			<column name="start_likes" type="INT" />
		</view>
		<view name="vw_facebook_post_mor" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `pg`.`fbpg_clientid` AS `clientid`,`pg`.`fbpg_reportinggroup` AS `reportinggroup`,date_format(`pst`.`fbpst_created_time`,'%Y-%m-01') AS `reportingmonth`,count(0) AS `post_count`,sum(`pst`.`fbpst_likes`) AS `likes_count` from (`dw`.`facebook_post` `pst` left join `dw`.`facebook_page` `pg` on((`pst`.`fbpst_pageid` = `pg`.`fbpg_id`))) group by `pg`.`fbpg_clientid`,`pg`.`fbpg_reportinggroup`,`reportingmonth`]]></view_script>
			<column name="clientid" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="reportingmonth" type="VARCHAR" />
			<column name="post_count" type="BIGINT" />
			<column name="likes_count" type="DECIMAL" />
		</view>
		<view name="vw_google_locations" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`c`.`client_id` AS `Client Id`,`dw`.`c`.`client_int_description` AS `Client`,`dw`.`c`.`client_description` AS `Reporting Group`,(json_extract(`gl`.`locationDetails`,'$.name') collate utf8mb4_0900_ai_ci) AS `Location`,(coalesce(json_unquote(json_extract(`gl`.`locationDetails`,'$.title')),json_unquote(json_extract(`gl`.`locationDetails`,'$.locationName'))) collate utf8mb4_0900_ai_ci) AS `Location Name`,`dw`.`p`.`provider_title` AS `Provider Name`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.storeCode')) collate utf8mb4_0900_ai_ci) AS `Store Code`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.profile.description')) collate utf8mb4_0900_ai_ci) AS `Description`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.placeId')) collate utf8mb4_0900_ai_ci) AS `Place Id`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.phoneNumbers.primaryPhone')) collate utf8mb4_0900_ai_ci) AS `Primary Phone`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.categories.primaryCategory.displayName')) collate utf8mb4_0900_ai_ci) AS `Category Name`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.storefrontAddress.addressLines[0]')) collate utf8mb4_0900_ai_ci) AS `Address Line 1`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.storefrontAddress.addressLines[1]')) collate utf8mb4_0900_ai_ci) AS `Address Line 2`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.storefrontAddress.locality')) collate utf8mb4_0900_ai_ci) AS `City`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.storefrontAddress.administrativeArea')) collate utf8mb4_0900_ai_ci) AS `State`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.storefrontAddress.postalCode')) collate utf8mb4_0900_ai_ci) AS `ZIP`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.labels[0]')) collate utf8mb4_0900_ai_ci) AS `Label`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.canDelete')) collate utf8mb4_0900_ai_ci) AS `Can Delete`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.canUpdate')) collate utf8mb4_0900_ai_ci) AS `Can Update`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.isVerified')) collate utf8mb4_0900_ai_ci) AS `Is Verified`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.isPublished')) collate utf8mb4_0900_ai_ci) AS `Is Published`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.openInfo.status')) collate utf8mb4_0900_ai_ci) AS `Status`,((case when ((json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.hasGoogleUpdated')) = 'true') and (`gl`.`DiffMask` is not null)) then 'true' else NULL end) collate utf8mb4_0900_ai_ci) AS `Is Google Updated`,`cg`.`gmb_location_id` AS `GMB Location Id`,`cg`.`gmb_npi` AS `GMB NPI`,(coalesce(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.mapsUri')),json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.mapsUrl'))) collate utf8mb4_0900_ai_ci) AS `Maps URL`,(concat('https://local.google.com/place?id=',substr(coalesce(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.mapsUri')),json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.mapsUrl'))),(locate('?cid',coalesce(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.mapsUri')),json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.mapsUrl')))) + 5)),'&use=srp&authuser=3') collate utf8mb4_0900_ai_ci) AS `Search URL`,(json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata')) collate utf8mb4_0900_ai_ci) AS `Location State(s)`,(json_unquote(json_extract(`gl`.`media`,'$.mediaItems')) collate utf8mb4_0900_ai_ci) AS `media`,`gl`.`DiffMask` AS `Diff Mask` from (((`dw`.`google_location` `gl` left join `dw`.`client_gmb` `cg` on((`gl`.`locationId` = `cg`.`gmb_location_id`))) left join `dw`.`vw_client` `c` on((`cg`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `p` on((`dw`.`p`.`provider_name` = coalesce(json_unquote(json_extract(`gl`.`locationDetails`,'$.title')),json_unquote(json_extract(`gl`.`locationDetails`,'$.locationName')))))) where ((`dw`.`c`.`client_status` = 'Active') and ((json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.duplicateLocation')) collate utf8mb4_0900_ai_ci) is null) and (0 <> (`gl`.`RefreshDate` = (select max(`a`.`RefreshDate`) from `dw`.`google_location` `a` where (`a`.`locationId` = `gl`.`locationId`)))))]]></view_script>
			<column name="Client Id" type="VARCHAR" />
			<column name="Client" type="VARCHAR" />
			<column name="Reporting Group" type="VARCHAR" />
			<column name="Location" type="LONGTEXT" />
			<column name="Location Name" type="LONGTEXT" />
			<column name="Provider Name" type="VARCHAR" />
			<column name="Store Code" type="LONGTEXT" />
			<column name="Description" type="LONGTEXT" />
			<column name="Place Id" type="LONGTEXT" />
			<column name="Primary Phone" type="LONGTEXT" />
			<column name="Category Name" type="LONGTEXT" />
			<column name="Address Line 1" type="LONGTEXT" />
			<column name="Address Line 2" type="LONGTEXT" />
			<column name="City" type="LONGTEXT" />
			<column name="State" type="LONGTEXT" />
			<column name="ZIP" type="LONGTEXT" />
			<column name="Label" type="LONGTEXT" />
			<column name="Can Delete" type="LONGTEXT" />
			<column name="Can Update" type="LONGTEXT" />
			<column name="Is Verified" type="LONGTEXT" />
			<column name="Is Published" type="LONGTEXT" />
			<column name="Status" type="LONGTEXT" />
			<column name="Is Google Updated" type="VARCHAR" />
			<column name="GMB Location Id" type="VARCHAR" />
			<column name="GMB NPI" type="VARCHAR" />
			<column name="Maps URL" type="LONGTEXT" />
			<column name="Search URL" type="LONGTEXT" />
			<column name="Location State(s)" type="LONGTEXT" />
			<column name="media" type="LONGTEXT" />
			<column name="Diff Mask" type="JSON" />
		</view>
		<view name="vw_google_locations_diff" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select json_unquote(json_extract(`gl`.`locationDetails`,'$.name')) AS `pname`,`gmb`.`gmb_location_name` AS `location_name`,`gmb`.`gmb_storecode` AS `gmb_storecode`,`gmb`.`client_id` AS `client_id`,`gl`.`locationId` AS `locationId`,`gld`.`Diff` AS `diff`,json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.hasPendingEdits')) AS `hasPendingEdits`,json_unquote(json_extract(`gl`.`locationDetails`,concat('$.',(case when (`gld`.`Diff` = 'postalAddress') then 'address' else `gld`.`Diff` end)))) AS `segment_org`,json_unquote(json_extract(`gl`.`locationDetailsDiff`,concat('$.',(case when (`gld`.`Diff` = 'postalAddress') then 'address' else `gld`.`Diff` end)))) AS `segment_diff`,`gmb`.`gmb_mapsurl` AS `Maps URL` from ((`dw`.`google_location` `gl` join `dw`.`google_location_diffs` `gld` on((`gl`.`locationId` = `gld`.`locationId`))) join `dw`.`client_gmb` `gmb` on((`gl`.`locationId` = `gmb`.`gmb_location_id`))) where ((json_unquote(json_extract(`gl`.`locationDetails`,'$.metadata.hasGoogleUpdated')) = 'true') and (`gmb`.`gmb_active` = 1))]]></view_script>
			<column name="pname" type="LONGTEXT" />
			<column name="location_name" type="VARCHAR" />
			<column name="gmb_storecode" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="locationId" type="VARCHAR" />
			<column name="diff" type="VARCHAR" />
			<column name="hasPendingEdits" type="LONGTEXT" />
			<column name="segment_org" type="LONGTEXT" />
			<column name="segment_diff" type="LONGTEXT" />
			<column name="Maps URL" type="VARCHAR" />
		</view>
		<view name="vw_google_locations_pendingverification" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cg`.`gmb_location_id` AS `locationId`,`cg`.`gmb_location_name` AS `locationName`,`cg`.`gmb_storecode` AS `storeCode`,concat(`cg`.`gmb_mapsurl`,'&use=srp&authuser=3') AS `locationMapURL`,concat('https://local.google.com/place?id=',substring_index(`cg`.`gmb_mapsurl`,'?cid=',-(1)),'&use=srp&authuser=3') AS `locationSearchURL`,json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState')) AS `locationstate`,json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.isDuplicate')) AS `isDuplicate`,json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.isDisconnected')) AS `isDisconnected`,json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.hasPendingVerification')) AS `hasPendingVerification`,'true' AS `needVerification` from (`dw`.`client_gmb` `cg` join `dw`.`google_location` `gl` on((`cg`.`gmb_location_id` = `gl`.`locationId`))) where ((`cg`.`gmb_active` = 1) and ((json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.isDuplicate')) = 'true') or (json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.hasPendingVerification')) = 'true') or (json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.isDisabled')) = 'true') or (json_unquote(json_extract(`gl`.`locationDetails`,'$.locationState.isDisconnected')) = 'true')))]]></view_script>
			<column name="locationId" type="VARCHAR" />
			<column name="locationName" type="VARCHAR" />
			<column name="storeCode" type="VARCHAR" />
			<column name="locationMapURL" type="VARCHAR" />
			<column name="locationSearchURL" type="VARCHAR" />
			<column name="locationstate" type="LONGTEXT" />
			<column name="isDuplicate" type="LONGTEXT" />
			<column name="isDisconnected" type="LONGTEXT" />
			<column name="hasPendingVerification" type="LONGTEXT" />
			<column name="needVerification" type="VARCHAR" />
		</view>
		<view name="vw_google_questions" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `gq`.`name` AS `questionId`,`cg`.`client_id` AS `client_id`,`dw`.`c`.`client_name` AS `client_name`,`dw`.`c`.`client_phone` AS `client_phone`,`dw`.`c`.`client_int_description` AS `client_int_description`,`dw`.`c`.`client_communication_director` AS `ad_email`,`dw`.`c`.`client_patientfeedback_url` AS `client_patientfeedback_url`,`cg`.`gmb_location_id` AS `gmb_location_id`,`cg`.`gmb_location_name` AS `gmb_location_name`,`cg`.`gmb_npi` AS `gmb_npi`,`cg`.`gmb_storecode` AS `gmb_storecode`,`cg`.`gmb_mapsurl` AS `gmb_mapsurl`,`p`.`title` AS `title`,`gq`.`author_displayName` AS `author_displayname`,`gq`.`author_profilePhotoUrl` AS `author_profilephotourl`,coalesce(`gq`.`text`,'No Question Provided') AS `question`,`gq`.`createTime` AS `createTime`,`gq`.`updateTime` AS `updateTime`,`dw`.`c`.`client_patientfeedback_target` AS `client_patientfeedback_target`,`gq`.`topAnswers` AS `answers`,(case when (`gq`.`topAnswers` is null) then 'No' else 'Yes' end) AS `reply_exists`,`gpf`.`nodeId` AS `patientfeedback_nodeId`,(case when (`gpf`.`nodeId` is null) then NULL else concat('https://www.patientfeedback.venel.com/node/',`gpf`.`nodeId`) end) AS `patientfeedback_url`,`gpf`.`sendDate` AS `patientfeedback_senddate` from ((((`dw`.`google_question` `gq` left join `dw`.`client_gmb` `cg` on((`cg`.`gmb_location_id` = `gq`.`locationId`))) join `dw`.`vw_client` `c` on((`cg`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`provider` `p` on((`p`.`npi` = `cg`.`gmb_npi`))) left join `dw`.`google_question_patientfeedback` `gpf` on((`gq`.`name` = `gpf`.`questionId`)))]]></view_script>
			<column name="questionId" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="client_phone" type="VARCHAR" />
			<column name="client_int_description" type="VARCHAR" />
			<column name="ad_email" type="VARCHAR" />
			<column name="client_patientfeedback_url" type="VARCHAR" />
			<column name="gmb_location_id" type="VARCHAR" />
			<column name="gmb_location_name" type="VARCHAR" />
			<column name="gmb_npi" type="VARCHAR" />
			<column name="gmb_storecode" type="VARCHAR" />
			<column name="gmb_mapsurl" type="VARCHAR" />
			<column name="title" type="VARCHAR" />
			<column name="author_displayname" type="VARCHAR" />
			<column name="author_profilephotourl" type="VARCHAR" />
			<column name="question" type="TEXT" />
			<column name="createTime" type="DATETIME" />
			<column name="updateTime" type="DATETIME" />
			<column name="client_patientfeedback_target" type="VARCHAR" />
			<column name="answers" type="JSON" />
			<column name="reply_exists" type="VARCHAR" />
			<column name="patientfeedback_nodeId" type="INT" />
			<column name="patientfeedback_url" type="VARCHAR" />
			<column name="patientfeedback_senddate" type="DATETIME" />
		</view>
		<view name="vw_google_reviews" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `gr`.`reviewId` AS `reviewId`,`cg`.`client_id` AS `client_id`,`c`.`client_name` AS `client_name`,`c`.`client_phone` AS `client_phone`,`c`.`client_description` AS `reporting_group`,`c`.`client_int_description` AS `client_int_description`,`c`.`client_communication_director` AS `ad_email`,`c`.`client_patientfeedback_url` AS `client_patientfeedback_url`,`c`.`client_startdate` AS `client_startdate`,`cg`.`gmb_location_id` AS `gmb_location_id`,`cg`.`gmb_location_name` AS `gmb_location_name`,`cg`.`gmb_npi` AS `gmb_npi`,`cg`.`gmb_storecode` AS `gmb_storecode`,`cg`.`gmb_mapsurl` AS `gmb_mapsurl`,`p`.`title` AS `title`,`gr`.`reviewer_displayname` AS `reviewer_displayname`,`gr`.`reviewer_profilephotourl` AS `reviewer_profilephotourl`,coalesce(`gr`.`comment`,'No Comment Provided') AS `comment`,cast(`gr`.`starRating` as signed) AS `starRating`,concat('https://mybusiness.googleapis.com/v4/',`gr`.`name`) AS `review_path`,`gr`.`createTime` AS `createTime`,`gr`.`updateTime` AS `updateTime`,(case when (`grr`.`reviewReply` is null) then 'No' else 'Yes' end) AS `reply_exists`,coalesce(`grr`.`reviewReply`,`grra`.`reviewReply`) AS `reply_comment`,`grr`.`updateTime` AS `reply_updateTime`,`c`.`client_patientfeedback_target` AS `client_patientfeedback_target`,concat(`gpf`.`nodeId`,(case when (`gcm`.`reviewId` is null) then '' else '*' end)) AS `patientfeedback_nodeId`,(case when (`gpf`.`nodeId` is null) then NULL else concat('https://www.patientfeedback.venel.com/node/',`gpf`.`nodeId`) end) AS `patientfeedback_url`,`gpf`.`sendDate` AS `patientfeedback_senddate`,`grra`.`updateTime` AS `requestedDate`,(case when ((`gr`.`createTime` >= `c`.`client_startdate`) and (cast(`gr`.`starRating` as signed) = 5)) then 'Yes' else 'No' end) AS `Venel Assisted` from (((((((`dw`.`google_review` `gr` left join `dw`.`client_gmb` `cg` on((`cg`.`gmb_location_id` = `gr`.`locationId`))) join `dw`.`vw_client` `c` on((`cg`.`client_id` = `c`.`client_id`))) left join `dw`.`google_review_reply` `grr` on((`gr`.`reviewId` = `grr`.`reviewId`))) left join `dw`.`provider` `p` on((`p`.`npi` = `cg`.`gmb_npi`))) left join `dw`.`google_review_reply_approval` `grra` on((`gr`.`reviewId` = `grra`.`reviewId`))) left join `dw`.`google_patientfeedback` `gpf` on((`gr`.`reviewId` = `gpf`.`reviewId`))) left join `dw`.`google_contactme` `gcm` on((`gr`.`reviewId` = `gcm`.`reviewId`)))]]></view_script>
			<column name="reviewId" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="client_phone" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="client_int_description" type="VARCHAR" />
			<column name="ad_email" type="VARCHAR" />
			<column name="client_patientfeedback_url" type="VARCHAR" />
			<column name="client_startdate" type="DATE" />
			<column name="gmb_location_id" type="VARCHAR" />
			<column name="gmb_location_name" type="VARCHAR" />
			<column name="gmb_npi" type="VARCHAR" />
			<column name="gmb_storecode" type="VARCHAR" />
			<column name="gmb_mapsurl" type="VARCHAR" />
			<column name="title" type="VARCHAR" />
			<column name="reviewer_displayname" type="VARCHAR" />
			<column name="reviewer_profilephotourl" type="VARCHAR" />
			<column name="comment" type="LONGTEXT" />
			<column name="starRating" type="BIGINT" />
			<column name="review_path" type="TEXT" />
			<column name="createTime" type="DATETIME" />
			<column name="updateTime" type="DATETIME" />
			<column name="reply_exists" type="VARCHAR" />
			<column name="reply_comment" type="LONGTEXT" />
			<column name="reply_updateTime" type="DATETIME" />
			<column name="client_patientfeedback_target" type="VARCHAR" />
			<column name="patientfeedback_nodeId" type="VARCHAR" />
			<column name="patientfeedback_url" type="VARCHAR" />
			<column name="patientfeedback_senddate" type="DATETIME" />
			<column name="requestedDate" type="DATETIME" />
			<column name="Venel Assisted" type="VARCHAR" />
		</view>
		<view name="vw_google_reviews_org" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `gr`.`reviewId` AS `reviewId`,`cg`.`client_id` AS `client_id`,`c`.`client_name` AS `client_name`,`c`.`client_phone` AS `client_phone`,`c`.`client_int_description` AS `client_int_description`,coalesce(`grra_req`.`approvalEmail`,`c`.`client_reply_approval_email`) AS `approval_email`,`c`.`client_communication_director` AS `ad_email`,`c`.`client_patientfeedback_url` AS `client_patientfeedback_url`,`cg`.`gmb_location_id` AS `gmb_location_id`,`cg`.`gmb_location_name` AS `gmb_location_name`,`cg`.`gmb_npi` AS `gmb_npi`,`cg`.`gmb_storecode` AS `gmb_storecode`,`cg`.`gmb_mapsurl` AS `gmb_mapsurl`,`p`.`title` AS `title`,`gr`.`reviewer_displayname` AS `reviewer_displayname`,`gr`.`reviewer_profilephotourl` AS `reviewer_profilephotourl`,coalesce(`gr`.`comment`,'No Comment Provided') AS `comment`,cast(`gr`.`starRating` as signed) AS `starRating`,concat('https://mybusiness.googleapis.com/v4/',`gr`.`name`) AS `review_path`,`gr`.`createTime` AS `createTime`,`gr`.`updateTime` AS `updateTime`,(case when (`grr`.`reviewReply` is null) then 'No' else 'Yes' end) AS `reply_exists`,`grr`.`reviewReply` AS `reply_comment`,`grr`.`updateTime` AS `reply_updateTime`,`grra_req`.`updateTime` AS `requestedDate`,`grra_req`.`reviewReply` AS `requestedReply`,`grra_appr`.`updateTime` AS `approvedDate`,`grra_decl`.`updateTime` AS `declinedDate`,`grra_rev`.`updateTime` AS `revisedDate`,coalesce(`grra_appr`.`updateTime`,`grra_decl`.`updateTime`,`grra_rev`.`updateTime`) AS `responseDate`,coalesce(`grra_appr`.`approvalState`,`grra_decl`.`approvalState`,`grra_rev`.`approvalState`,`grra_req`.`approvalState`) AS `approvalState`,`grra_rev`.`reviewReply` AS `revisedReply`,`c`.`client_patientfeedback_target` AS `client_patientfeedback_target`,`gpf`.`nodeId` AS `patientfeedback_nodeId`,`gpf`.`sendDate` AS `patientfeedback_senddate` from (((((((((`dw`.`google_review` `gr` left join `dw`.`client_gmb` `cg` on((`cg`.`gmb_location_id` = `gr`.`locationId`))) join `dw`.`vw_client` `c` on((`cg`.`client_id` = `c`.`client_id`))) left join `dw`.`google_review_reply` `grr` on((`gr`.`reviewId` = `grr`.`reviewId`))) left join `dw`.`provider` `p` on((`p`.`npi` = `cg`.`gmb_npi`))) left join `dw`.`google_review_reply_approval` `grra_req` on(((`gr`.`reviewId` = `grra_req`.`reviewId`) and (`grra_req`.`approvalState` = 'Requested')))) left join `dw`.`google_review_reply_approval` `grra_appr` on(((`gr`.`reviewId` = `grra_appr`.`reviewId`) and (`grra_appr`.`approvalState` = 'Approved')))) left join `dw`.`google_review_reply_approval` `grra_decl` on(((`gr`.`reviewId` = `grra_decl`.`reviewId`) and (`grra_decl`.`approvalState` = 'Declined')))) left join `dw`.`google_review_reply_approval` `grra_rev` on(((`gr`.`reviewId` = `grra_rev`.`reviewId`) and (`grra_rev`.`approvalState` = 'Revised')))) left join `dw`.`google_patientfeedback` `gpf` on((`gr`.`reviewId` = `gpf`.`reviewId`)))]]></view_script>
			<column name="reviewId" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="client_phone" type="VARCHAR" />
			<column name="client_int_description" type="VARCHAR" />
			<column name="approval_email" type="VARCHAR" />
			<column name="ad_email" type="VARCHAR" />
			<column name="client_patientfeedback_url" type="VARCHAR" />
			<column name="gmb_location_id" type="VARCHAR" />
			<column name="gmb_location_name" type="VARCHAR" />
			<column name="gmb_npi" type="VARCHAR" />
			<column name="gmb_storecode" type="VARCHAR" />
			<column name="gmb_mapsurl" type="VARCHAR" />
			<column name="title" type="VARCHAR" />
			<column name="reviewer_displayname" type="VARCHAR" />
			<column name="reviewer_profilephotourl" type="VARCHAR" />
			<column name="comment" type="LONGTEXT" />
			<column name="starRating" type="BIGINT" />
			<column name="review_path" type="TEXT" />
			<column name="createTime" type="DATETIME" />
			<column name="updateTime" type="DATETIME" />
			<column name="reply_exists" type="VARCHAR" />
			<column name="reply_comment" type="LONGTEXT" />
			<column name="reply_updateTime" type="DATETIME" />
			<column name="requestedDate" type="DATETIME" />
			<column name="requestedReply" type="LONGTEXT" />
			<column name="approvedDate" type="DATETIME" />
			<column name="declinedDate" type="DATETIME" />
			<column name="revisedDate" type="DATETIME" />
			<column name="responseDate" type="DATETIME" />
			<column name="approvalState" type="VARCHAR" />
			<column name="revisedReply" type="LONGTEXT" />
			<column name="client_patientfeedback_target" type="VARCHAR" />
			<column name="patientfeedback_nodeId" type="INT" />
			<column name="patientfeedback_senddate" type="DATETIME" />
		</view>
		<view name="vw_invoices" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `i`.`doc_number` AS `Inv_Number`,`i`.`txn_date` AS `Inv_Date`,coalesce(`c`.`display_name`,left(`i`.`customer_name`,3)) AS `client_id`,`c`.`company_name` AS `client_name`,`i`.`due_date` AS `due_date`,`t`.`name` AS `sales_term`,`il`.`line_num` AS `line_num`,`il`.`description` AS `line_description`,`il`.`amount` AS `line_amount`,`item`.`name` AS `line_item_description`,`item`.`name` AS `channel_line_item_description`,date_format(`i`.`txn_date`,'%Y-%m-01') AS `reporting_month` from ((((`dw`.`qb_invoice` `i` left join `dw`.`qb_customer` `c` on((`i`.`customer_id` = `c`.`id`))) left join `dw`.`qb_term` `t` on((`i`.`sales_term_id` = `t`.`id`))) left join `dw`.`qb_invoice_line` `il` on((`i`.`doc_number` = `il`.`doc_number`))) left join `dw`.`qb_item` `item` on((`item`.`id` = `il`.`item_id`))) where (`item`.`name` in ('OrthoInteractive (Online Advertising)','FaceBook','GeoPlacement','Adroll'))]]></view_script>
			<column name="Inv_Number" type="INT" />
			<column name="Inv_Date" type="DATE" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="due_date" type="DATE" />
			<column name="sales_term" type="VARCHAR" />
			<column name="line_num" type="INT" />
			<column name="line_description" type="VARCHAR" />
			<column name="line_amount" type="DECIMAL" />
			<column name="line_item_description" type="VARCHAR" />
			<column name="channel_line_item_description" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
		</view>
		<view name="vw_invoices_all" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `i`.`doc_number` AS `Inv_Number`,`i`.`txn_date` AS `Inv_Date`,(case when (`il`.`line_num` = 1) then `i`.`balance` else 0 end) AS `inv_balance`,`i`.`email_status` AS `inv_email_status`,`i`.`invoice_status` AS `inv_invoice_status`,coalesce(`c`.`display_name`,left(`i`.`customer_name`,3)) AS `client_id`,`c`.`company_name` AS `client_name`,`i`.`due_date` AS `due_date`,`t`.`name` AS `sales_term`,`il`.`line_num` AS `line_num`,`il`.`description` AS `line_description`,`il`.`amount` AS `line_amount`,`item`.`name` AS `line_item_description`,`item`.`name` AS `channel_line_item_description`,date_format(`i`.`txn_date`,'%Y-%m-01') AS `reporting_month` from ((((`dw`.`qb_invoice` `i` left join `dw`.`qb_customer` `c` on((`i`.`customer_id` = `c`.`id`))) left join `dw`.`qb_term` `t` on((`i`.`sales_term_id` = `t`.`id`))) left join `dw`.`qb_invoice_line` `il` on((`i`.`doc_number` = `il`.`doc_number`))) left join `dw`.`qb_item` `item` on((`item`.`id` = `il`.`item_id`)))]]></view_script>
			<column name="Inv_Number" type="INT" />
			<column name="Inv_Date" type="DATE" />
			<column name="inv_balance" type="DECIMAL" />
			<column name="inv_email_status" type="VARCHAR" />
			<column name="inv_invoice_status" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="due_date" type="DATE" />
			<column name="sales_term" type="VARCHAR" />
			<column name="line_num" type="INT" />
			<column name="line_description" type="VARCHAR" />
			<column name="line_amount" type="DECIMAL" />
			<column name="line_item_description" type="VARCHAR" />
			<column name="channel_line_item_description" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
		</view>
		<view name="vw_invoices_flatfee" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `i`.`doc_number` AS `Inv_Number`,`i`.`txn_date` AS `Inv_Date`,coalesce(`c`.`display_name`,left(`i`.`customer_name`,3)) AS `client_id`,`c`.`company_name` AS `client_name`,`i`.`due_date` AS `due_date`,`t`.`name` AS `sales_term`,`il`.`line_num` AS `line_num`,`il`.`description` AS `line_description`,`il`.`amount` AS `line_amount`,`item`.`name` AS `line_item_description`,`item`.`name` AS `channel_line_item_description`,date_format(`i`.`txn_date`,'%Y-%m-01') AS `reporting_month` from ((((`dw`.`qb_invoice` `i` left join `dw`.`qb_customer` `c` on((`i`.`customer_id` = `c`.`id`))) left join `dw`.`qb_term` `t` on((`i`.`sales_term_id` = `t`.`id`))) left join `dw`.`qb_invoice_line` `il` on((`i`.`doc_number` = `il`.`doc_number`))) left join `dw`.`qb_item` `item` on((`item`.`id` = `il`.`item_id`))) where (`item`.`name` like 'Flat Fee%')]]></view_script>
			<column name="Inv_Number" type="INT" />
			<column name="Inv_Date" type="DATE" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_name" type="VARCHAR" />
			<column name="due_date" type="DATE" />
			<column name="sales_term" type="VARCHAR" />
			<column name="line_num" type="INT" />
			<column name="line_description" type="VARCHAR" />
			<column name="line_amount" type="DECIMAL" />
			<column name="line_item_description" type="VARCHAR" />
			<column name="channel_line_item_description" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
		</view>
		<view name="vw_online" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `oae`.`oae_clientid` AS `client_id`,`c`.`client_description` AS `client_description`,`c`.`client_description` AS `reporting_group`,`oae`.`oae_date` AS `reporting_month`,`oae`.`oae_source` AS `oae_source`,`oae`.`oae_appointment` AS `oae_appointment`,`oae`.`oae_referral` AS `oae_referral`,(`oae`.`oae_appointment` * `rg`.`rg_valueofnewpatient`) AS `oae_appointment_value`,(`oae`.`oae_referral` * `rg`.`rg_valueofnewpatient`) AS `oae_referral_value` from ((`dw`.`online_appointment_email` `oae` left join `dw`.`vw_client` `c` on((`oae`.`oae_clientid` = convert(`c`.`client_id` using utf8mb4)))) left join `dw`.`vw_reporting_group` `rg` on((`c`.`client_description` = `rg`.`rg_reportinggroup`)))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="oae_source" type="VARCHAR" />
			<column name="oae_appointment" type="INT" />
			<column name="oae_referral" type="INT" />
			<column name="oae_appointment_value" type="BIGINT" />
			<column name="oae_referral_value" type="BIGINT" />
		</view>
		<view name="vw_online_appointment" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `oa`.`oa_practiceid` AS `client_id`,`c`.`client_description` AS `client_description`,`c`.`client_description` AS `reporting_group`,`oa`.`oa_created` AS `created_date`,date_format(`oa`.`oa_created`,'%Y-%m-01') AS `reporting_month`,`oa`.`oa_ref` AS `query_string`,1 AS `oa_appointment`,(1 * `rg`.`rg_valueofnewpatient`) AS `oa_appointment_value` from ((`dw`.`online_appointment` `oa` left join `dw`.`vw_client` `c` on((convert(`oa`.`oa_practiceid` using utf8mb4) = convert(`c`.`client_id` using utf8mb4)))) left join `dw`.`vw_reporting_group` `rg` on(((`c`.`client_description` = `rg`.`rg_reportinggroup`) and (date_format(`oa`.`oa_created`,'%Y-%m-01') between `rg`.`rg_startdate` and `rg`.`rg_enddate`))))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="created_date" type="DATETIME" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="query_string" type="VARCHAR" />
			<column name="oa_appointment" type="INT" />
			<column name="oa_appointment_value" type="BIGINT" />
		</view>
		<view name="vw_online_mor" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`client_id` AS `client_id`,`rg`.`rg_reportinggroup` AS `reporting_group`,`dw`.`cr`.`cal_reporting_month` AS `reporting_month`,sum((coalesce(`oae`.`man_email_appointments`,0) + coalesce(`oa`.`online_appointments`,0))) AS `appointment_count`,sum((coalesce(`oae`.`man_email_referrals`,0) + coalesce(`oref`.`online_referrals`,0))) AS `referral_count`,sum(coalesce(`oae`.`man_email_cancels`,0)) AS `cancel_count`,sum(coalesce(`oae`.`man_email_reschedules`,0)) AS `reschedule_count`,sum(((coalesce(`oae`.`man_email_appointments`,0) + coalesce(`oa`.`online_appointments`,0)) * `rg`.`rg_valueofnewpatient`)) AS `appointment_value`,sum(((coalesce(`oae`.`man_email_referrals`,0) + coalesce(`oref`.`online_referrals`,0)) * `rg`.`rg_valueofnewpatient`)) AS `referral_value`,sum((coalesce(`oae`.`man_email_cancels`,0) * `rg`.`rg_valueofnewpatient`)) AS `cancel_value`,sum((coalesce(`oae`.`man_email_reschedules`,0) * `rg`.`rg_valueofnewpatient`)) AS `reschedule_value` from (((((`dw`.`client` `c` join `dw`.`reporting_group` `rg` on(((`c`.`client_id` = `rg`.`rg_clientid`) and (`rg`.`rg_reportinggroup` = concat(`c`.`client_id`,' - ',`c`.`client_name`))))) join `dw`.`vw_calendar_reporting_month` `cr`) left join (select `dw`.`online_appointment_email`.`oae_clientid` AS `client_id`,date_format(`dw`.`online_appointment_email`.`oae_date`,'%Y-%m-01') AS `reporting_month`,sum(`dw`.`online_appointment_email`.`oae_appointment`) AS `man_email_appointments`,sum(`dw`.`online_appointment_email`.`oae_referral`) AS `man_email_referrals`,sum(`dw`.`online_appointment_email`.`oae_cancel`) AS `man_email_cancels`,sum(`dw`.`online_appointment_email`.`oae_reschedule`) AS `man_email_reschedules` from `dw`.`online_appointment_email` group by `dw`.`online_appointment_email`.`oae_clientid`,date_format(`dw`.`online_appointment_email`.`oae_date`,'%Y-%m-01')) `oae` on(((`oae`.`client_id` = `rg`.`rg_clientid`) and (date_format(`oae`.`reporting_month`,'%Y-%m-01') = `dw`.`cr`.`cal_reporting_month`)))) left join (select `dw`.`online_appointment`.`oa_practiceid` AS `client_id`,date_format(`dw`.`online_appointment`.`oa_created`,'%Y-%m-01') AS `reporting_month`,count(0) AS `online_appointments` from `dw`.`online_appointment` group by `dw`.`online_appointment`.`oa_practiceid`,date_format(`dw`.`online_appointment`.`oa_created`,'%Y-%m-01')) `oa` on(((`oa`.`client_id` = `c`.`client_id`) and (`oa`.`reporting_month` = `dw`.`cr`.`cal_reporting_month`) and (`oa`.`reporting_month` >= '2017-12-01')))) left join (select `dw`.`online_referral`.`or_practiceid` AS `client_id`,date_format(`dw`.`online_referral`.`or_created`,'%Y-%m-01') AS `reporting_month`,count(0) AS `online_referrals` from `dw`.`online_referral` group by `dw`.`online_referral`.`or_practiceid`,date_format(`dw`.`online_referral`.`or_created`,'%Y-%m-01')) `oref` on(((`oref`.`client_id` = `c`.`client_id`) and (`oref`.`reporting_month` = `dw`.`cr`.`cal_reporting_month`) and (`oref`.`reporting_month` >= '2017-12-01')))) group by `c`.`client_id`,`dw`.`cr`.`cal_reporting_month`,`rg`.`rg_reportinggroup`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="appointment_count" type="DECIMAL" />
			<column name="referral_count" type="DECIMAL" />
			<column name="cancel_count" type="DECIMAL" />
			<column name="reschedule_count" type="DECIMAL" />
			<column name="appointment_value" type="DECIMAL" />
			<column name="referral_value" type="DECIMAL" />
			<column name="cancel_value" type="DECIMAL" />
			<column name="reschedule_value" type="DECIMAL" />
		</view>
		<view name="vw_pbi_allreviews" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,concat('',`dw`.`t`.`testimonial_npi`) AS `listingid`,concat('',`dw`.`t`.`testimonial_npi`) AS `NPI`,trim(`dw`.`p`.`provider_name`) AS `Listing`,`dw`.`p`.`provider_last_name` AS `listing_order`,`ts`.`source` AS `Platform`,`ts`.`source` AS `Source`,(case when (`ts`.`source_sitepathurl` is null) then `dw`.`p`.`provider_website_url` else concat(`ts`.`source_url`,`sp`.`path`) end) AS `Listing URL`,cast(`dw`.`t`.`testimonial_creation_date` as date) AS `Review Date`,0 AS `PreVenel`,0 AS `Organic`,`dw`.`t`.`testimonial_rating` AS `total_starrating`,`dw`.`t`.`testimonial_rating_count` AS `total_reviews`,(case when (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') then 0 else `dw`.`t`.`testimonial_rating` end) AS `public_starrating`,(case when (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') then 0 else `dw`.`t`.`testimonial_rating_count` end) AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,`dw`.`t`.`testimonial_rating` AS `venel_starrating`,`dw`.`t`.`testimonial_rating_count` AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,`dw`.`t`.`testimonial_body` AS `comment` from (((((`dw`.`vw_testimonial` `t` join `dw`.`vw_client` `c` on((`dw`.`t`.`testimonial_client_id` = `dw`.`c`.`client_id`))) join `dw`.`vw_provider` `p` on((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`))) left join `dw`.`testimonial_source` `ts` on((`dw`.`t`.`testimonial_source` = `ts`.`source`))) left join `dw`.`provider_clientsite` `pc` on((`dw`.`p`.`provider_npi` = `pc`.`npi`))) left join `dw`.`provider_sitepath` `sp` on(((`sp`.`source` = `ts`.`source_abbreviation`) and (`sp`.`npi` = `dw`.`t`.`testimonial_npi`)))) where ((`dw`.`t`.`testimonial_client_id` like '%') and (`dw`.`t`.`testimonial_published` = 'Yes') and (`dw`.`p`.`provider_gender` is null)) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,`dw`.`gl`.`GMB Location Id` AS `listingid`,(case when (`dw`.`gl`.`Store Code` like '%-Practice%') then concat(`dw`.`c`.`client_id`,'001') else coalesce(`dw`.`p`.`provider_npi`,concat(`dw`.`c`.`client_id`,'001')) end) AS `npi`,trim(`dw`.`gl`.`Location Name`) AS `listing`,`dw`.`p`.`provider_last_name` AS `listing_order`,'Google' AS `platform`,concat('Google-',coalesce(`dw`.`gl`.`Store Code`,'No StoreCode')) AS `Source`,`dw`.`gl`.`Search URL` AS `listing_url`,cast(coalesce(`gr`.`createTime`,'2010-01-01') as date) AS `reviewdate`,(case when (`gr`.`createTime` < `dw`.`c`.`client_startdate`) then 1 else 0 end) AS `PreVenel`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then 1 else 0 end) AS `Organic`,cast(coalesce(`gr`.`starRating`,0) as signed) AS `total_starRating`,(case when (`gr`.`starRating` is not null) then 1 else NULL end) AS `total_reviews`,cast(coalesce(`gr`.`starRating`,0) as signed) AS `public_starRating`,(case when (`gr`.`starRating` is not null) then 1 else 0 end) AS `public_reviews`,(case when (`gr`.`createTime` >= `dw`.`c`.`client_startdate`) then NULL else cast(coalesce(`gr`.`starRating`,0) as signed) end) AS `prevenel_starrating`,(case when ((`gr`.`createTime` < `dw`.`c`.`client_startdate`) and (`gr`.`starRating` is not null)) then 1 else 0 end) AS `prevenel_reviews`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` = 5)) then cast(coalesce(`gr`.`starRating`,0) as signed) else 0 end) AS `venel_starrating`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` = 5)) then 1 else 0 end) AS `venel_reviews`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then cast(coalesce(`gr`.`starRating`,0) as signed) else 0 end) AS `organic_starrating`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then 1 else 0 end) AS `organic_reviews`,`gr`.`comment` AS `comment` from (((`dw`.`vw_google_locations` `gl` join `dw`.`vw_client` `c` on((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`))) left join `dw`.`google_review` `gr` on((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`))) left join `dw`.`vw_provider` `p` on((`dw`.`p`.`provider_name` = `dw`.`gl`.`Location Name`))) where (`dw`.`gl`.`Client Id` like '%') union all select `datashake`.`vw_reviews_inferred`.`Client Key` AS `Client Key`,`datashake`.`vw_reviews_inferred`.`listingid` AS `listingid`,`datashake`.`vw_reviews_inferred`.`NPI` AS `NPI`,`datashake`.`vw_reviews_inferred`.`Listing` AS `Listing`,`datashake`.`vw_reviews_inferred`.`listing_order` AS `listing_order`,`datashake`.`vw_reviews_inferred`.`Platform` AS `Platform`,`datashake`.`vw_reviews_inferred`.`Source` AS `Source`,`datashake`.`vw_reviews_inferred`.`Listing URL` AS `Listing URL`,`datashake`.`vw_reviews_inferred`.`Review Date` AS `Review Date`,`datashake`.`vw_reviews_inferred`.`PreVenel` AS `PreVenel`,`datashake`.`vw_reviews_inferred`.`Organic` AS `Organic`,`datashake`.`vw_reviews_inferred`.`total_starrating` AS `total_starrating`,`datashake`.`vw_reviews_inferred`.`total_reviews` AS `total_reviews`,`datashake`.`vw_reviews_inferred`.`public_starrating` AS `public_starrating`,`datashake`.`vw_reviews_inferred`.`public_reviews` AS `public_reviews`,`datashake`.`vw_reviews_inferred`.`prevenel_starrating` AS `prevenel_starrating`,`datashake`.`vw_reviews_inferred`.`prevenel_reviews` AS `prevenel_reviews`,`datashake`.`vw_reviews_inferred`.`venel_starrating` AS `venel_starrating`,`datashake`.`vw_reviews_inferred`.`venel_reviews` AS `venel_reviews`,`datashake`.`vw_reviews_inferred`.`organic_starrating` AS `organic_starrating`,`datashake`.`vw_reviews_inferred`.`organic_reviews` AS `organic_reviews`,`datashake`.`vw_reviews_inferred`.`comments` AS `comments` from `datashake`.`vw_reviews_inferred` union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'Healthgrade' AS `Platform`,'Healthgrade' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`healthgrades_rating` AS `total_starrating`,`cer`.`healthgrades_reviews` AS `total_reviews`,`cer`.`healthgrades_rating` AS `public_starrating`,`cer`.`healthgrades_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'Yelp' AS `Platform`,'Yelp' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`yelp_rating` AS `total_starrating`,`cer`.`yelp_reviews` AS `total_reviews`,`cer`.`yelp_rating` AS `public_starrating`,`cer`.`yelp_reviews` AS `publc_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'Vitals' AS `Platform`,'Vitals' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`vitals_rating` AS `total_starrating`,`cer`.`vitals_reviews` AS `total_reviews`,`cer`.`vitals_rating` AS `public_starrating`,`cer`.`vitals_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'WebMD' AS `Platform`,'WebMD' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`webmd_rating` AS `total_starrating`,`cer`.`webmd_reviews` AS `total_reviews`,`cer`.`webmd_rating` AS `public_starrating`,`cer`.`webmd_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'RateMD' AS `Platform`,'RateMD' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`ratemd_rating` AS `total_starrating`,`cer`.`ratemd_reviews` AS `total_reviews`,`cer`.`ratemd_rating` AS `public_starrating`,`cer`.`ratemd_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0)]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="listingid" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
			<column name="Listing" type="LONGTEXT" />
			<column name="listing_order" type="VARCHAR" />
			<column name="Platform" type="VARCHAR" />
			<column name="Source" type="LONGTEXT" />
			<column name="Listing URL" type="LONGTEXT" />
			<column name="Review Date" type="DATE" />
			<column name="PreVenel" type="BIGINT" />
			<column name="Organic" type="BIGINT" />
			<column name="total_starrating" type="DECIMAL" />
			<column name="total_reviews" type="DECIMAL" />
			<column name="public_starrating" type="DECIMAL" />
			<column name="public_reviews" type="DECIMAL" />
			<column name="prevenel_starrating" type="DECIMAL" />
			<column name="prevenel_reviews" type="DECIMAL" />
			<column name="venel_starrating" type="DECIMAL" />
			<column name="venel_reviews" type="DECIMAL" />
			<column name="organic_starrating" type="BIGINT" />
			<column name="organic_reviews" type="BIGINT" />
			<column name="comment" type="LONGTEXT" />
		</view>
		<view name="vw_pbi_allreviews_new" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,concat('',`dw`.`t`.`testimonial_npi`) AS `listingid`,concat('',`dw`.`t`.`testimonial_npi`) AS `NPI`,trim(`dw`.`p`.`provider_name`) AS `Listing`,`dw`.`p`.`provider_last_name` AS `listing_order`,`ts`.`source` AS `Platform`,`ts`.`source` AS `Source`,(case when (`ts`.`source_sitepathurl` is null) then `dw`.`p`.`provider_website_url` else concat(`ts`.`source_url`,`sp`.`path`) end) AS `Listing URL`,cast(`dw`.`t`.`testimonial_creation_date` as date) AS `Review Date`,0 AS `PreVenel`,0 AS `Organic`,`dw`.`t`.`testimonial_rating` AS `total_starrating`,`dw`.`t`.`testimonial_rating_count` AS `total_reviews`,(case when (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') then 0 else `dw`.`t`.`testimonial_rating` end) AS `public_starrating`,(case when (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') then 0 else `dw`.`t`.`testimonial_rating_count` end) AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,`dw`.`t`.`testimonial_rating` AS `venel_starrating`,`dw`.`t`.`testimonial_rating_count` AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,`dw`.`t`.`testimonial_body` AS `comment`,`dw`.`t`.`testimonial_reviewer_name` AS `reviewer` from (((((`dw`.`vw_testimonial` `t` join `dw`.`vw_client` `c` on((`dw`.`t`.`testimonial_client_id` = `dw`.`c`.`client_id`))) join `dw`.`vw_provider` `p` on((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`))) left join `dw`.`testimonial_source` `ts` on((`dw`.`t`.`testimonial_source` = `ts`.`source`))) left join `dw`.`provider_clientsite` `pc` on((`dw`.`p`.`provider_npi` = `pc`.`npi`))) left join `dw`.`provider_sitepath` `sp` on(((`sp`.`source` = `ts`.`source_abbreviation`) and (`sp`.`npi` = `dw`.`t`.`testimonial_npi`)))) where ((`dw`.`t`.`testimonial_client_id` like '%') and (`dw`.`t`.`testimonial_published` = 'Yes') and (`dw`.`p`.`provider_gender` is null)) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,`dw`.`gl`.`GMB Location Id` AS `listingid`,(case when (`dw`.`gl`.`Store Code` like '%-Practice%') then concat(`dw`.`c`.`client_id`,'001') else coalesce(`dw`.`p`.`provider_npi`,concat(`dw`.`c`.`client_id`,'001')) end) AS `npi`,trim(`dw`.`gl`.`Location Name`) AS `listing`,`dw`.`p`.`provider_last_name` AS `listing_order`,'Google' AS `platform`,concat('Google-',coalesce(`dw`.`gl`.`Store Code`,'No StoreCode')) AS `Source`,`dw`.`gl`.`Search URL` AS `listing_url`,cast(coalesce(`gr`.`createTime`,'2010-01-01') as date) AS `reviewdate`,(case when (`gr`.`createTime` < `dw`.`c`.`client_startdate`) then 1 else 0 end) AS `PreVenel`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then 1 else 0 end) AS `Organic`,cast(coalesce(`gr`.`starRating`,0) as signed) AS `total_starRating`,(case when (`gr`.`starRating` is not null) then 1 else NULL end) AS `total_reviews`,cast(coalesce(`gr`.`starRating`,0) as signed) AS `public_starRating`,(case when (`gr`.`starRating` is not null) then 1 else 0 end) AS `public_reviews`,(case when (`gr`.`createTime` >= `dw`.`c`.`client_startdate`) then NULL else cast(coalesce(`gr`.`starRating`,0) as signed) end) AS `prevenel_starrating`,(case when ((`gr`.`createTime` < `dw`.`c`.`client_startdate`) and (`gr`.`starRating` is not null)) then 1 else 0 end) AS `prevenel_reviews`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` = 5)) then cast(coalesce(`gr`.`starRating`,0) as signed) else 0 end) AS `venel_starrating`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` = 5)) then 1 else 0 end) AS `venel_reviews`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then cast(coalesce(`gr`.`starRating`,0) as signed) else 0 end) AS `organic_starrating`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then 1 else 0 end) AS `organic_reviews`,`gr`.`comment` AS `comment`,`gr`.`reviewer_displayname` AS `reviewer` from (((`dw`.`vw_google_locations` `gl` join `dw`.`vw_client` `c` on((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`))) left join `dw`.`google_review` `gr` on((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`))) left join `dw`.`vw_provider` `p` on((`dw`.`p`.`provider_name` = `dw`.`gl`.`Location Name`))) where (`dw`.`gl`.`Client Id` like '%') union all select `datashake`.`vw_reviews_inferred`.`Client Key` AS `Client Key`,`datashake`.`vw_reviews_inferred`.`listingid` AS `listingid`,`datashake`.`vw_reviews_inferred`.`NPI` AS `NPI`,`datashake`.`vw_reviews_inferred`.`Listing` AS `Listing`,`datashake`.`vw_reviews_inferred`.`listing_order` AS `listing_order`,`datashake`.`vw_reviews_inferred`.`Platform` AS `Platform`,`datashake`.`vw_reviews_inferred`.`Source` AS `Source`,`datashake`.`vw_reviews_inferred`.`Listing URL` AS `Listing URL`,`datashake`.`vw_reviews_inferred`.`Review Date` AS `Review Date`,`datashake`.`vw_reviews_inferred`.`PreVenel` AS `PreVenel`,`datashake`.`vw_reviews_inferred`.`Organic` AS `Organic`,`datashake`.`vw_reviews_inferred`.`total_starrating` AS `total_starrating`,`datashake`.`vw_reviews_inferred`.`total_reviews` AS `total_reviews`,`datashake`.`vw_reviews_inferred`.`public_starrating` AS `public_starrating`,`datashake`.`vw_reviews_inferred`.`public_reviews` AS `public_reviews`,`datashake`.`vw_reviews_inferred`.`prevenel_starrating` AS `prevenel_starrating`,`datashake`.`vw_reviews_inferred`.`prevenel_reviews` AS `prevenel_reviews`,`datashake`.`vw_reviews_inferred`.`venel_starrating` AS `venel_starrating`,`datashake`.`vw_reviews_inferred`.`venel_reviews` AS `venel_reviews`,`datashake`.`vw_reviews_inferred`.`organic_starrating` AS `organic_starrating`,`datashake`.`vw_reviews_inferred`.`organic_reviews` AS `organic_reviews`,`datashake`.`vw_reviews_inferred`.`comments` AS `comments`,'Datashake' AS `reviewer` from `datashake`.`vw_reviews_inferred` union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'Healthgrade' AS `Platform`,'Healthgrade' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`healthgrades_rating` AS `total_starrating`,`cer`.`healthgrades_reviews` AS `total_reviews`,`cer`.`healthgrades_rating` AS `public_starrating`,`cer`.`healthgrades_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments`,'' AS `reviewer` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'Yelp' AS `Platform`,'Yelp' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`yelp_rating` AS `total_starrating`,`cer`.`yelp_reviews` AS `total_reviews`,`cer`.`yelp_rating` AS `public_starrating`,`cer`.`yelp_reviews` AS `publc_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments`,'' AS `reviewer` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'Vitals' AS `Platform`,'Vitals' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`vitals_rating` AS `total_starrating`,`cer`.`vitals_reviews` AS `total_reviews`,`cer`.`vitals_rating` AS `public_starrating`,`cer`.`vitals_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments`,'' AS `reviwer` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'WebMD' AS `Platform`,'WebMD' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`webmd_rating` AS `total_starrating`,`cer`.`webmd_reviews` AS `total_reviews`,`cer`.`webmd_rating` AS `public_starrating`,`cer`.`webmd_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments`,'' AS `reviewer` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,NULL AS `listingid`,`cer`.`npi` AS `NPI`,trim(`p`.`provider_name`) AS `Listing`,`dw`.`pv`.`provider_last_name` AS `listing_order`,'RateMD' AS `Platform`,'RateMD' AS `Source`,NULL AS `Listing URL`,NULL AS `Review Date`,1 AS `PreVenel`,0 AS `Organic`,`cer`.`ratemd_rating` AS `total_starrating`,`cer`.`ratemd_reviews` AS `total_reviews`,`cer`.`ratemd_rating` AS `public_starrating`,`cer`.`ratemd_reviews` AS `public_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,0 AS `venel_starrating`,0 AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews`,'' AS `comments`,'' AS `reviewer` from (((`dw`.`client_ext_reviews` `cer` left join `dw`.`vw_client` `c` on((`cer`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_provider` `pv` on((`cer`.`npi` = `dw`.`pv`.`provider_npi`))) left join `dw`.`provider` `p` on((`cer`.`npi` = `p`.`npi`))) where ((((((`cer`.`google_reviews` + `cer`.`healthgrades_reviews`) + `cer`.`yelp_reviews`) + `cer`.`vitals_reviews`) + `cer`.`webmd_reviews`) + `cer`.`ratemd_reviews`) > 0)]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="listingid" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
			<column name="Listing" type="LONGTEXT" />
			<column name="listing_order" type="VARCHAR" />
			<column name="Platform" type="VARCHAR" />
			<column name="Source" type="LONGTEXT" />
			<column name="Listing URL" type="LONGTEXT" />
			<column name="Review Date" type="DATE" />
			<column name="PreVenel" type="BIGINT" />
			<column name="Organic" type="BIGINT" />
			<column name="total_starrating" type="DECIMAL" />
			<column name="total_reviews" type="DECIMAL" />
			<column name="public_starrating" type="DECIMAL" />
			<column name="public_reviews" type="DECIMAL" />
			<column name="prevenel_starrating" type="DECIMAL" />
			<column name="prevenel_reviews" type="DECIMAL" />
			<column name="venel_starrating" type="DECIMAL" />
			<column name="venel_reviews" type="DECIMAL" />
			<column name="organic_starrating" type="BIGINT" />
			<column name="organic_reviews" type="BIGINT" />
			<column name="comment" type="LONGTEXT" />
			<column name="reviewer" type="VARCHAR" />
		</view>
		<view name="vw_pbi_allreviews_old" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,`dw`.`t`.`testimonial_npi` AS `listingid`,`dw`.`t`.`testimonial_npi` AS `NPI`,`dw`.`p`.`provider_name` AS `Listing`,`dw`.`p`.`provider_last_name` AS `listing_order`,`ts`.`source` AS `Platform`,`ts`.`source` AS `Source`,concat('https://www.patientencounter.com/admin/reviews/all?field_provider_npi_value=',`dw`.`t`.`testimonial_npi`,'&field_publish_site_value=',`ts`.`source_abbreviation`) AS `Listing URL`,cast(`dw`.`t`.`testimonial_creation_date` as date) AS `Review Date`,`dw`.`t`.`testimonial_rating` AS `total_starrating`,`dw`.`t`.`testimonial_rating_count` AS `total_reviews`,0 AS `prevenel_starrating`,0 AS `prevenel_reviews`,`dw`.`t`.`testimonial_rating` AS `venel_starrating`,`dw`.`t`.`testimonial_rating_count` AS `venel_reviews`,0 AS `organic_starrating`,0 AS `organic_reviews` from ((((`dw`.`vw_testimonial` `t` join `dw`.`vw_client` `c` on((`dw`.`t`.`testimonial_client_id` = `dw`.`c`.`client_id`))) join `dw`.`vw_provider` `p` on((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`))) left join `dw`.`testimonial_source` `ts` on((`dw`.`t`.`testimonial_source` = `ts`.`source`))) left join `dw`.`provider_clientsite` `pc` on((`dw`.`p`.`provider_npi` = `pc`.`npi`))) where ((`dw`.`t`.`testimonial_client_id` like '%') and (`dw`.`t`.`testimonial_published` = 'Yes') and (`dw`.`p`.`provider_gender` is null)) union all select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,`dw`.`gl`.`GMB Location Id` AS `listingid`,(case when (`dw`.`gl`.`Store Code` like '%-Practice%') then concat(`dw`.`c`.`client_id`,'001') else `dw`.`p`.`provider_npi` end) AS `npi`,`dw`.`gl`.`Location Name` AS `listing`,`dw`.`p`.`provider_last_name` AS `listing_order`,'Google' AS `platform`,concat('Google-',coalesce(`dw`.`gl`.`Store Code`,'No StoreCode')) AS `Source`,`dw`.`gl`.`Search URL` AS `listing_url`,cast(`gr`.`createTime` as date) AS `reviewdate`,cast(`gr`.`starRating` as signed) AS `total_starRating`,1 AS `total_reviews`,(case when (`gr`.`createTime` >= `dw`.`c`.`client_startdate`) then NULL else cast(`gr`.`starRating` as signed) end) AS `prevenel_starrating`,(case when (`gr`.`createTime` >= `dw`.`c`.`client_startdate`) then NULL else `gr`.`starRating` end) AS `prevenel_reviews`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` = 5)) then cast(`gr`.`starRating` as signed) else NULL end) AS `venel_starrating`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` = 5)) then `gr`.`starRating` else NULL end) AS `venel_reviews`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then cast(`gr`.`starRating` as signed) else NULL end) AS `organic_starrating`,(case when ((`gr`.`createTime` >= `dw`.`c`.`client_startdate`) and (`gr`.`starRating` < 5)) then `gr`.`starRating` else NULL end) AS `organic_reviews` from (((`dw`.`vw_google_locations` `gl` join `dw`.`vw_client` `c` on((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`))) left join `dw`.`google_review` `gr` on((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`))) left join `dw`.`vw_provider` `p` on((`dw`.`p`.`provider_name` = `dw`.`gl`.`Location Name`))) where (`dw`.`gl`.`Client Id` like '%')]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="listingid" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
			<column name="Listing" type="LONGTEXT" />
			<column name="listing_order" type="VARCHAR" />
			<column name="Platform" type="VARCHAR" />
			<column name="Source" type="LONGTEXT" />
			<column name="Listing URL" type="LONGTEXT" />
			<column name="Review Date" type="DATE" />
			<column name="total_starrating" type="BIGINT" />
			<column name="total_reviews" type="BIGINT" />
			<column name="prevenel_starrating" type="BIGINT" />
			<column name="prevenel_reviews" type="VARCHAR" />
			<column name="venel_starrating" type="BIGINT" />
			<column name="venel_reviews" type="VARCHAR" />
			<column name="organic_starrating" type="BIGINT" />
			<column name="organic_reviews" type="VARCHAR" />
		</view>
		<view name="vw_pbi_appointments" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`tbl_pbi_appointments`.`Client Id` AS `Client Id`,`dw`.`tbl_pbi_appointments`.`Client Key` AS `Client Key`,`dw`.`tbl_pbi_appointments`.`Appointment Type` AS `Appointment Type`,`dw`.`tbl_pbi_appointments`.`Referring Provider` AS `Referring Provider`,`dw`.`tbl_pbi_appointments`.`RP_NPI` AS `Referring Provider NPI`,`dw`.`tbl_pbi_appointments`.`_rpkey` AS `_rpkey`,`dw`.`tbl_pbi_appointments`.`NPI` AS `NPI`,`dw`.`tbl_pbi_appointments`.`Appointment Date` AS `Appointment Date`,`dw`.`tbl_pbi_appointments`.`Patient PostalCode` AS `Patient PostalCode`,`dw`.`tbl_pbi_appointments`.`Appointment Count` AS `Appointment Count`,`dw`.`tbl_pbi_appointments`.`Patient Id` AS `Patient Id` from `dw`.`tbl_pbi_appointments` where (`dw`.`tbl_pbi_appointments`.`Appointment Date` between '2010-01-01' and curdate())]]></view_script>
			<column name="Client Id" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="Appointment Type" type="VARCHAR" />
			<column name="Referring Provider" type="VARCHAR" />
			<column name="Referring Provider NPI" type="VARCHAR" />
			<column name="_rpkey" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
			<column name="Appointment Date" type="DATE" />
			<column name="Patient PostalCode" type="VARCHAR" />
			<column name="Appointment Count" type="DECIMAL" />
			<column name="Patient Id" type="VARCHAR" />
		</view>
		<view name="vw_pbi_calendar" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`cal_datekey` AS `cal_datekey`,`c`.`cal_date` AS `Date`,`c`.`cal_year` AS `Year`,`c`.`cal_month` AS `Month`,`c`.`cal_day` AS `Day`,`c`.`cal_startofmonth` AS `Start of Month`,`c`.`cal_quarter` AS `Quarter`,`c`.`cal_monthabbr` AS `Month Abbr`,`c`.`cal_monthname` AS `Month Name`,`c`.`cal_dayname` AS `Day Name`,`c`.`cal_startofweek` AS `Start of Week`,`c`.`cal_dayofweek` AS `Day of Week`,`c`.`cal_daytype` AS `Day Type`,`c`.`cal_payperiod` AS `Pay Period`,`c`.`cal_daysinmonth` AS `Days in Month` from `dw`.`vw_calendar` `c` where (`c`.`cal_date` >= (date_format(curdate(),'%y-%m-01') + interval -(2) year))]]></view_script>
			<column name="cal_datekey" type="VARCHAR" />
			<column name="Date" type="DATE" />
			<column name="Year" type="INT" />
			<column name="Month" type="INT" />
			<column name="Day" type="VARCHAR" />
			<column name="Start of Month" type="DATE" />
			<column name="Quarter" type="INT" />
			<column name="Month Abbr" type="VARCHAR" />
			<column name="Month Name" type="VARCHAR" />
			<column name="Day Name" type="VARCHAR" />
			<column name="Start of Week" type="DATE" />
			<column name="Day of Week" type="INT" />
			<column name="Day Type" type="VARCHAR" />
			<column name="Pay Period" type="VARCHAR" />
			<column name="Days in Month" type="INT" />
		</view>
		<view name="vw_pbi_calendar_all" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`cal_datekey` AS `cal_datekey`,`c`.`cal_date` AS `Date`,`c`.`cal_year` AS `Year`,`c`.`cal_month` AS `Month`,`c`.`cal_day` AS `Day`,`c`.`cal_startofmonth` AS `Start of Month`,`c`.`cal_quarter` AS `Quarter`,`c`.`cal_monthabbr` AS `Month Abbr`,`c`.`cal_monthname` AS `Month Name`,`c`.`cal_dayname` AS `Day Name`,`c`.`cal_startofweek` AS `Start of Week`,`c`.`cal_dayofweek` AS `Day of Week`,`c`.`cal_daytype` AS `Day Type`,`c`.`cal_payperiod` AS `Pay Period`,`c`.`cal_daysinmonth` AS `Days in Month` from `dw`.`vw_calendar` `c`]]></view_script>
			<column name="cal_datekey" type="VARCHAR" />
			<column name="Date" type="DATE" />
			<column name="Year" type="INT" />
			<column name="Month" type="INT" />
			<column name="Day" type="VARCHAR" />
			<column name="Start of Month" type="DATE" />
			<column name="Quarter" type="INT" />
			<column name="Month Abbr" type="VARCHAR" />
			<column name="Month Name" type="VARCHAR" />
			<column name="Day Name" type="VARCHAR" />
			<column name="Start of Week" type="DATE" />
			<column name="Day of Week" type="INT" />
			<column name="Day Type" type="VARCHAR" />
			<column name="Pay Period" type="VARCHAR" />
			<column name="Days in Month" type="INT" />
		</view>
		<view name="vw_pbi_calls" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`reporting_group`) AS `Client Key`,`dw`.`c`.`client_id` AS `client_id`,`dw`.`c`.`call_date` AS `call_date`,`dw`.`c`.`reporting_group` AS `reporting_group`,`dw`.`c`.`reporting_month` AS `reporting_month`,`dw`.`c`.`call_category` AS `Call Category`,`dw`.`c`.`call_subcategory` AS `Call Subcategory`,`dw`.`c`.`channel` AS `channel`,`dw`.`c`.`call_source` AS `Call Source`,`dw`.`c`.`call_count` AS `call_count` from `dw`.`vw_call` `c` where (year(`dw`.`c`.`reporting_month`) >= (year(curdate()) - 4))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="call_date" type="DATE" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="Call Category" type="VARCHAR" />
			<column name="Call Subcategory" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="Call Source" type="VARCHAR" />
			<column name="call_count" type="INT" />
		</view>
		<view name="vw_pbi_calls2" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`c`.`client_id`,`c`.`reporting_group`) AS `Client Key`,`c`.`client_id` AS `client_id`,`c`.`reporting_group` AS `reporting_group`,`c`.`reporting_month` AS `reporting_month`,`c`.`call_category` AS `Call Category`,`c`.`call_subcategory` AS `Call Subcategory`,`c`.`channel` AS `channel`,`c`.`call_source` AS `Call Source`,sum(`c`.`call_count`) AS `call_count` from `dw`.`vw_call` `c` where (`c`.`reporting_month` >= (date_format(curdate(),'%y-%m-01') + interval -(2) year)) group by concat(`c`.`client_id`,`c`.`reporting_group`),`c`.`client_id`,`c`.`reporting_group`,`c`.`reporting_month`,`c`.`call_category`,`c`.`call_subcategory`,`c`.`channel`,`c`.`call_source`]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="Call Category" type="VARCHAR" />
			<column name="Call Subcategory" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="Call Source" type="VARCHAR" />
			<column name="call_count" type="DECIMAL" />
		</view>
		<view name="vw_pbi_campaignbudgets" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`cc`.`client_id`,`cc`.`reportinggroup`) AS `Client Key`,`cc`.`client_id` AS `client_id`,`cc`.`reportinggroup` AS `reporting_group`,`cc`.`reportingmonth` AS `reportingmonth`,`cc`.`campaign` AS `Campaign`,`cc`.`channel` AS `channel`,(case when ((locate('Geoplacement',`cc`.`campaign`) > 0) or (locate('GeoTargeting',`cc`.`campaign`) > 0)) then 'Geoplacement ™' else `c`.`channel_category` end) AS `Platform`,`cctgry`.`channel_category_color` AS `chnnl_category_color`,`cc`.`message` AS `message`,sum(`cc`.`impressions`) AS `_Impressions`,sum(`cc`.`reach`) AS `_Reach`,sum(`cc`.`clicks`) AS `_Clicks`,sum(`cc`.`invoice_amount`) AS `_Budget`,sum(`cc`.`actual_spend`) AS `_Spend` from ((`dw`.`client_rg_cmpgn_config` `cc` left join `dw`.`channel` `c` on((`cc`.`channel` = `c`.`channel`))) left join `dw`.`channel_category` `cctgry` on((`cctgry`.`channel_category` = (case when ((locate('Geoplacement',`cc`.`campaign`) > 0) or (locate('GeoTargeting',`cc`.`campaign`) > 0)) then 'Geoplacement ™' else `c`.`channel_category` end)))) where ((`cc`.`reportinggroup` like '%') and ((`cc`.`impressions` > 0) or (`cc`.`planned_spend` > 0) or (`cc`.`invoice_amount` > 0)) and (not((`cc`.`message` like '%Venel Paid%')))) group by `cc`.`client_id`,`cc`.`reportinggroup`,`cc`.`reportingmonth`,`cc`.`campaign`,`cc`.`channel`,(case when ((locate('Geoplacement',`cc`.`campaign`) > 0) or (locate('GeoTargeting',`cc`.`campaign`) > 0)) then 'Geoplacement ™' else `c`.`channel_category` end),`cctgry`.`channel_category`,`cctgry`.`channel_category_color`,`cc`.`message`]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="Campaign" type="VARCHAR" />
			<column name="channel" type="VARCHAR" />
			<column name="Platform" type="VARCHAR" />
			<column name="chnnl_category_color" type="VARCHAR" />
			<column name="message" type="VARCHAR" />
			<column name="_Impressions" type="DECIMAL" />
			<column name="_Reach" type="DECIMAL" />
			<column name="_Clicks" type="DECIMAL" />
			<column name="_Budget" type="DECIMAL" />
			<column name="_Spend" type="DECIMAL" />
		</view>
		<view name="vw_pbi_campaigns" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`cs`.`client_id`,`cs`.`reporting_group`) AS `Client Key`,`cs`.`client_id` AS `client_id`,`cs`.`reporting_group` AS `reporting_group`,`cs`.`Venel Paid` AS `Venel Paid`,`cs`.`GeoPlacement` AS `GeoPlacement`,cast(date_format(`cs`.`date`,'%y-%m-01') as date) AS `reporting_month`,`cs`.`date` AS `date`,`cs`.`Campaign Name` AS `Campaign Name`,`cs`.`campaign_start` AS `campaign_start`,`cs`.`campaign_end` AS `campaign_end`,(case when (`cs`.`Device` = 'Devices streaming video content to TV screens') then 'TV' when (`cs`.`Device` like 'mobile_%') then 'Mobile' else `cs`.`Device` end) AS `Device`,`cs`.`Channel` AS `Channel`,(case when (`cs`.`Campaign Name` like '%GeoTargeting%') then 'GeoPlacement' when (`cs`.`Channel` like 'GroundTruth') then 'GeoPlacement' when (`cs`.`Channel` in ('Bing','Google')) then 'OrthoInteractive' when (`cs`.`Channel` = 'Facebook') then 'Facebook' when (`cs`.`Channel` = 'AdRoll') then 'Retargeting' else ('*' + `cs`.`Channel`) end) AS `Platform`,`cs`.`Impressions` AS `Impressions`,`cs`.`Clicks` AS `Clicks`,`cs`.`Cost` AS `Cost`,`cs`.`Reach` AS `Reach`,`cs`.`Engagement` AS `Engagement`,`cs`.`Likes` AS `Likes`,`cs`.`Comments` AS `Comments`,`cc`.`message` AS `Message` from (`dw`.`campaign_summary_bydate` `cs` left join `dw`.`client_rg_cmpgn_config` `cc` on(((`cs`.`client_id` = `cc`.`client_id`) and (`cs`.`reporting_group` = `cc`.`reportinggroup`) and (cast(date_format(`cs`.`date`,'%y-%m-01') as date) = `cc`.`reportingmonth`) and (`cs`.`Campaign Name` = `cc`.`campaign`)))) where (`cs`.`date` >= (date_format(curdate(),'%y-%m-01') + interval -(2) year))]]></view_script>
			<column name="Client Key" type="TEXT" />
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="Venel Paid" type="VARCHAR" />
			<column name="GeoPlacement" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="date" type="DATE" />
			<column name="Campaign Name" type="VARCHAR" />
			<column name="campaign_start" type="DATE" />
			<column name="campaign_end" type="DATE" />
			<column name="Device" type="VARCHAR" />
			<column name="Channel" type="VARCHAR" />
			<column name="Platform" type="VARCHAR" />
			<column name="Impressions" type="DECIMAL" />
			<column name="Clicks" type="DECIMAL" />
			<column name="Cost" type="DECIMAL" />
			<column name="Reach" type="DECIMAL" />
			<column name="Engagement" type="DECIMAL" />
			<column name="Likes" type="DECIMAL" />
			<column name="Comments" type="DECIMAL" />
			<column name="Message" type="VARCHAR" />
		</view>
		<view name="vw_pbi_channels" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`channel` AS `Channel`,`c`.`channel_sortorder` AS `channel_sortorder`,`c`.`channel_status` AS `Channel Status`,`c`.`channel_category` AS `Channel Category`,`c`.`channel_line_item_description` AS `Channel Line Item Description`,`cc`.`channel_category_color` AS `Channel Category Color` from (`dw`.`channel` `c` left join `dw`.`channel_category` `cc` on((`c`.`channel_category` = `cc`.`channel_category`)))]]></view_script>
			<column name="Channel" type="VARCHAR" />
			<column name="channel_sortorder" type="INT" />
			<column name="Channel Status" type="VARCHAR" />
			<column name="Channel Category" type="VARCHAR" />
			<column name="Channel Line Item Description" type="VARCHAR" />
			<column name="Channel Category Color" type="VARCHAR" />
		</view>
		<view name="vw_pbi_chatbotbusyperiods" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cbp`.`story_id` AS `_story_id`,(case `cbp`.`chtbt_day` when 0 then 'Monday' when 1 then 'Tuesday' when 2 then 'Wednesday' when 3 then 'Thursday' when 4 then 'Friday' when 5 then 'Saturday' when 6 then 'Sunday' else 'Badday' end) AS `Busy Period Day`,`cbp`.`chtbtbp_hour` AS `Busy Period Hour`,`cbp`.`chtbtbp_value` AS `_BusyPeriodValue`,`cbp`.`chtbtbp_usage` AS `_BusyPeriodUsage`,`cbp`.`reportingmonth` AS `reportingmonth`,coalesce(`dw`.`c`.`client_id`,'999') AS `_clientid`,concat(coalesce(`dw`.`c`.`client_id`,'999'),coalesce(`dw`.`c`.`client_description`,'999 - Unknown')) AS `Client Key` from ((`dw`.`chatbot_busiest_periods` `cbp` join `dw`.`chatbot_stories` `cs` on((`cbp`.`story_id` = `cs`.`id`))) left join `dw`.`vw_client` `c` on((`dw`.`c`.`client_id` = left(`cs`.`name`,3))))]]></view_script>
			<column name="_story_id" type="VARCHAR" />
			<column name="Busy Period Day" type="VARCHAR" />
			<column name="Busy Period Hour" type="INT" />
			<column name="_BusyPeriodValue" type="INT" />
			<column name="_BusyPeriodUsage" type="INT" />
			<column name="reportingmonth" type="DATE" />
			<column name="_clientid" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
		</view>
		<view name="vw_pbi_chatbotconversations" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cc`.`story_id` AS `_story_id`,`cc`.`conversations` AS `_Conversations`,`cc`.`date` AS `Conversation Date`,coalesce(`dw`.`c`.`client_id`,'999') AS `_clientid`,concat(coalesce(`dw`.`c`.`client_id`,'999'),coalesce(`dw`.`c`.`client_description`,'999 - Unknown')) AS `Client Key` from ((`dw`.`chatbot_conversations` `cc` join `dw`.`chatbot_stories` `cs` on((`cc`.`story_id` = `cs`.`id`))) left join `dw`.`vw_client` `c` on((`dw`.`c`.`client_id` = left(`cs`.`name`,3))))]]></view_script>
			<column name="_story_id" type="VARCHAR" />
			<column name="_Conversations" type="DECIMAL" />
			<column name="Conversation Date" type="DATE" />
			<column name="_clientid" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
		</view>
		<view name="vw_pbi_chatbotinteractions" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ci`.`story_id` AS `_story_id`,`ci`.`chtbtint_type` AS `Interaction Type`,`ci`.`chtbtint_name` AS `Interaction Name`,`ci`.`chtbtint_usage` AS `_InteractionUsage`,`ci`.`chtbtint_value` AS `_InteractionValue`,`ci`.`chtbtint_version` AS `Interaction Version`,`ci`.`reportingmonth` AS `reportingmonth`,coalesce(`dw`.`c`.`client_id`,'999') AS `_clientid`,concat(coalesce(`dw`.`c`.`client_id`,'999'),coalesce(`dw`.`c`.`client_description`,'999 - Unknown')) AS `Client Key` from ((`dw`.`chatbot_interactions` `ci` join `dw`.`chatbot_stories` `cs` on((`ci`.`story_id` = `cs`.`id`))) left join `dw`.`vw_client` `c` on((`dw`.`c`.`client_id` = left(`cs`.`name`,3))))]]></view_script>
			<column name="_story_id" type="VARCHAR" />
			<column name="Interaction Type" type="VARCHAR" />
			<column name="Interaction Name" type="VARCHAR" />
			<column name="_InteractionUsage" type="INT" />
			<column name="_InteractionValue" type="INT" />
			<column name="Interaction Version" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="_clientid" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
		</view>
		<view name="vw_pbi_chatbotstories" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cs`.`id` AS `Story Id`,`cs`.`name` AS `Story Name`,`cs`.`description` AS `Story Description`,`cs`.`version` AS `Story Version`,`cs`.`published` AS `Story Published`,coalesce(`dw`.`c`.`client_id`,'999') AS `_clientid`,concat(coalesce(`dw`.`c`.`client_id`,'999'),coalesce(`dw`.`c`.`client_description`,'999 - Unknown')) AS `Client Key` from (`dw`.`chatbot_stories` `cs` left join `dw`.`vw_client` `c` on((`dw`.`c`.`client_id` = left(`cs`.`name`,3))))]]></view_script>
			<column name="Story Id" type="VARCHAR" />
			<column name="Story Name" type="VARCHAR" />
			<column name="Story Description" type="VARCHAR" />
			<column name="Story Version" type="INT" />
			<column name="Story Published" type="VARCHAR" />
			<column name="_clientid" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
		</view>
		<view name="vw_pbi_client_providers" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `mb`.`client_id` AS `client_id`,`mb`.`reportingmonth` AS `reportingmonth`,`mb`.`providers` AS `providers`,concat(`mb`.`client_id`,convert(date_format(`mb`.`reportingmonth`,'%Y-%m-01') using utf8mb4)) AS `clientmonthkey` from (`dw`.`client_rg_mnthly_bdgt` `mb` left join `dw`.`vw_client` `c` on((`mb`.`client_id` = convert(`c`.`client_id` using utf8mb4)))) where ((`mb`.`reportingmonth` >= '2018-01-01') and (`mb`.`reportinggroup` = convert(`c`.`client_description` using utf8mb4)))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="providers" type="INT" />
			<column name="clientmonthkey" type="VARCHAR" />
		</view>
		<view name="vw_pbi_clientbudget" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`cmb`.`client_id`,`cmb`.`reportinggroup`) AS `Client Key`,`cmb`.`client_id` AS `_clientid`,`cmb`.`reportingmonth` AS `reportingmonth`,`cmb`.`monthlybudget` AS `_monthlybudget`,`cmb`.`providers` AS `_providers` from `dw`.`client_rg_mnthly_bdgt` `cmb`]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="_clientid" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="_monthlybudget" type="DECIMAL" />
			<column name="_providers" type="INT" />
		</view>
		<view name="vw_pbi_clientpersonnel" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cp`.`client_id` AS `client_id`,concat(`cp`.`client_id`,convert(`dw`.`c`.`client_description` using utf8mb4)) AS `Client Key`,`cp`.`npi` AS `NPI` from (`dw`.`client_personnel` `cp` left join `dw`.`vw_client` `c` on((`cp`.`client_id` = convert(`dw`.`c`.`client_id` using utf8mb4))))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
		</view>
		<view name="vw_pbi_clients" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select distinct concat(`dw`.`c`.`client_id`,`dw`.`rg`.`rg_reportinggroup`) AS `Client Key`,`dw`.`c`.`client_id` AS `Client Id`,`dw`.`c`.`client_name` AS `Client Name`,`dw`.`c`.`client_int_description` AS `Client Description`,`dw`.`rg`.`rg_reportinggroup` AS `Client Reporting Group`,`dw`.`rg`.`rg_reportinggroupid` AS `rg_reportinggroupid`,`dw`.`rg`.`rg_startdate` AS `Client Start Date`,`dw`.`c`.`client_status` AS `Client Status`,(case when (coalesce(`p`.`prctc_active`,0) = 1) then 'Yes' else 'No' end) AS `Client Text Messaging`,concat(`u`.`u_firstname`,' ',`u`.`u_lastname`) AS `Client Account Planner`,`dw`.`rg`.`rg_monthlybudget` AS `Monthly Budget`,`dw`.`rg`.`rg_practicereceipts` AS `Practice Receipts`,`dw`.`rg`.`rg_uniquepatients` AS `Unique Patients`,`dw`.`rg`.`rg_valueofnewpatient` AS `Value of New Patient`,(case when (coalesce(`p`.`prctc_active`,0) = 1) then `p`.`prctc_connection_type` else 'Not Connected' end) AS `EMR Connection Type` from ((((`dw`.`vw_client` `c` left join (select distinct `dw`.`campaign_summary`.`client_id` AS `client_id`,`dw`.`campaign_summary`.`reporting_group` AS `reporting_group` from `dw`.`campaign_summary`) `cs` on((`cs`.`client_id` = `dw`.`c`.`client_id`))) left join `dw`.`vw_reporting_group` `rg` on((coalesce(`cs`.`reporting_group`,`dw`.`c`.`client_description`) = `dw`.`rg`.`rg_reportinggroup`))) left join `shr_yr_xprnc`.`practice` `p` on(((`p`.`prctc_client_id` = `dw`.`c`.`client_id`) and (`p`.`prctc_active` = '1')))) left join `dw`.`user` `u` on((`dw`.`c`.`client_account_planner` = `u`.`u_email`)))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="Client Id" type="VARCHAR" />
			<column name="Client Name" type="VARCHAR" />
			<column name="Client Description" type="VARCHAR" />
			<column name="Client Reporting Group" type="VARCHAR" />
			<column name="rg_reportinggroupid" type="VARCHAR" />
			<column name="Client Start Date" type="DATE" />
			<column name="Client Status" type="VARCHAR" />
			<column name="Client Text Messaging" type="VARCHAR" />
			<column name="Client Account Planner" type="VARCHAR" />
			<column name="Monthly Budget" type="INT" />
			<column name="Practice Receipts" type="DECIMAL" />
			<column name="Unique Patients" type="INT" />
			<column name="Value of New Patient" type="INT" />
			<column name="EMR Connection Type" type="VARCHAR" />
		</view>
		<view name="vw_pbi_clientzipcodes" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `cz`.`client_id` AS `client_id`,concat(`cz`.`client_id`,convert(`c`.`client_description` using utf8mb4)) AS `Client Key`,`cz`.`zipcode` AS `zipcode` from (`dw`.`client_zipcodes` `cz` left join `dw`.`vw_client` `c` on((`cz`.`client_id` = convert(`c`.`client_id` using utf8mb4))))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="zipcode" type="VARCHAR" />
		</view>
		<view name="vw_pbi_dh_providers" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `PO`.`NPI` AS `NPI`,(case when (`cp`.`location` is not null) then `cp`.`location` when (`dw`.`c`.`client_id` is not null) then `dw`.`c`.`client_name` when (`dw`.`c2`.`client_id` is not null) then `dw`.`c2`.`client_name` when (coalesce(trim(`ppl`.`LOCATION`),'') = '') then 'Unknown' else `ppl`.`LOCATION` end) AS `Location`,concat(`PO`.`LAST_NAME`,', ',`PO`.`FIRST_NAME`,(case when (`PO`.`MIDDLE_NAME` <> '') then concat(' ',`PO`.`MIDDLE_NAME`) else '' end)) AS `Name`,`PO`.`SPECIALTY_PRIMARY` AS `Specialty Primary`,`PO`.`SPECIALTY_SECONDARY` AS `Specialty Secondary`,`PO`.`HQ_ADDRESS` AS `Address`,`PO`.`HQ_ADDRESS1` AS `Address2`,`PO`.`HQ_CITY` AS `City`,`PO`.`HQ_STATE` AS `State`,`PO`.`HQ_ZIP_CODE` AS `ZipCode`,`PO`.`HQ_LATITUDE` AS `Latitude`,`PO`.`HQ_LONGITUDE` AS `Longitude`,(case when (`RP`.`rfrrng_prvdr_npinumber` is not null) then 'Yes' else 'No' end) AS `Has Referred`,`PE`.`email` AS `Email`,`PO`.`HQ_PHONE` AS `Phone`,`PO`.`DO_NOT_CALL_PHONE` AS `Do Not Call`,`PO`.`HQ_FAX_NUMBER` AS `Fax`,(case when (`dw`.`c`.`client_id` is not null) then 'Yes' when (`dw`.`P`.`provider_npi` is not null) then 'Yes' else 'No' end) AS `Is Client`,`RP`.`rfrrng_prvdr_npinumber` AS `rfrrng_prvdr_npinumber` from (((((((`dh`.`Physicians_Overview` `PO` join `dh`.`Physicians_Practice_Locations` `ppl` on(((`PO`.`NPI` = `ppl`.`NPI`) and (`ppl`.`PRIMARY_LOCATION` = 'Yes')))) left join (select distinct `shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_npinumber` AS `rfrrng_prvdr_npinumber` from `shr_yr_xprnc`.`referring_provider`) `RP` on((`PO`.`NPI` = `RP`.`rfrrng_prvdr_npinumber`))) left join `dh`.`Physicians_Email` `PE` on((`PO`.`NPI` = `PE`.`NPI`))) left join `dw`.`client_personnel` `cp` on((`PO`.`NPI` = `cp`.`npi`))) left join `dw`.`vw_client` `c` on(((`cp`.`client_id` = `dw`.`c`.`client_id`) and (`dw`.`c`.`client_status` = 'Active')))) left join `dw`.`vw_provider` `P` on((`PO`.`NPI` = `dw`.`P`.`provider_npi`))) left join `dw`.`vw_client` `c2` on(((`dw`.`P`.`_client_id` = `dw`.`c2`.`client_id`) and (`dw`.`c`.`client_status` = 'Active')))) where ((left(`PO`.`HQ_ZIP_CODE`,5) in (select `dw`.`client_zipcodes`.`zipcode` from `dw`.`client_zipcodes`) and (`PO`.`SPECIALTY_PRIMARY_GROUP` in ('Surgery','Sports Medicine','Preventive Medicine','Physician Assistant','Physical Medicine and Rehabilitation','Pediatric Medicine','Pain Management','Other','Occupational Medicine','Hospitalist','Family Practice','Emergency Medicine','Chiropractic','Adult Medicine','Adolescent Medicine'))) or (`RP`.`rfrrng_prvdr_npinumber` is not null) or (`cp`.`npi` is not null))]]></view_script>
			<column name="NPI" type="INT" />
			<column name="Location" type="VARCHAR" />
			<column name="Name" type="TEXT" />
			<column name="Specialty Primary" type="VARCHAR" />
			<column name="Specialty Secondary" type="VARCHAR" />
			<column name="Address" type="VARCHAR" />
			<column name="Address2" type="VARCHAR" />
			<column name="City" type="VARCHAR" />
			<column name="State" type="VARCHAR" />
			<column name="ZipCode" type="VARCHAR" />
			<column name="Latitude" type="FLOAT" />
			<column name="Longitude" type="FLOAT" />
			<column name="Has Referred" type="VARCHAR" />
			<column name="Email" type="VARCHAR" />
			<column name="Phone" type="VARCHAR" />
			<column name="Do Not Call" type="VARCHAR" />
			<column name="Fax" type="VARCHAR" />
			<column name="Is Client" type="VARCHAR" />
			<column name="rfrrng_prvdr_npinumber" type="VARCHAR" />
		</view>
		<view name="vw_pbi_fbpages" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`facebook_page`.`fbpg_id` AS `Page Id`,`dw`.`facebook_page`.`fbpg_name` AS `Page Name`,`dw`.`facebook_page`.`fbpg_clientid` AS `_clientid`,concat(coalesce(`dw`.`facebook_page`.`fbpg_clientid`,'999'),coalesce(`dw`.`facebook_page`.`fbpg_reportinggroup`,'999 - Unknown')) AS `Client Key`,1 AS `pagecount` from `dw`.`facebook_page`]]></view_script>
			<column name="Page Id" type="VARCHAR" />
			<column name="Page Name" type="VARCHAR" />
			<column name="_clientid" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="pagecount" type="INT" />
		</view>
		<view name="vw_pbi_fbpglikes" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`facebook_page_likes`.`fbpglks_pageid` AS `_pageid`,`dw`.`facebook_page_likes`.`fbpglks_reportingmonth` AS `_reportingmonth`,`dw`.`facebook_page_likes`.`fbpglks_likes` AS `_pagelikes` from `dw`.`facebook_page_likes`]]></view_script>
			<column name="_pageid" type="VARCHAR" />
			<column name="_reportingmonth" type="DATE" />
			<column name="_pagelikes" type="INT" />
		</view>
		<view name="vw_pbi_fbposts" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,convert(`dw`.`c`.`client_description` using utf8mb4)) AS `Client Key`,`pg`.`fbpg_reportinggroup` AS `reportinggroup`,cast(`pst`.`fbpst_created_time` as date) AS `createdate`,date_format(`pst`.`fbpst_created_time`,'%Y-%m-01') AS `reporting_month`,1 AS `_post_count`,`pst`.`fbpst_message` AS `Message`,`pst`.`fbpst_created_time` AS `Created Time`,`pst`.`fbpst_likes` AS `_Likes`,`pst`.`fbpst_comments` AS `_Comments`,`pst`.`fbpst_reactions` AS `_Reactions`,`pst`.`fbpst_shares` AS `_Shares`,`pst`.`fbpst_impressions_organic` AS `_Impressions-Organic`,`pst`.`fbpst_impressions_paid` AS `_Impressions-Paid`,(`pst`.`fbpst_impressions_organic` + `pst`.`fbpst_impressions_paid`) AS `_Impressions-Total`,`pst`.`fbpst_reach_organic` AS `_Reach-Organic`,`pst`.`fbpst_reach_paid` AS `_Reach-Paid`,(`pst`.`fbpst_reach_organic` + `pst`.`fbpst_reach_paid`) AS `_Reach-Total`,`pst`.`fbpst_clicks` AS `_Clicks`,`pst`.`fbpst_picture_url` AS `Picture` from ((`dw`.`facebook_post` `pst` left join `dw`.`facebook_page` `pg` on((`pst`.`fbpst_pageid` = `pg`.`fbpg_id`))) left join `dw`.`vw_client` `c` on((`pg`.`fbpg_clientid` = `dw`.`c`.`client_id`))) where ((`pst`.`fbpst_message` is not null) and (`pst`.`fbpst_picture_url` is not null) and (`pst`.`fbpst_created_time` > '2000-01-01'))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="createdate" type="DATE" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="_post_count" type="INT" />
			<column name="Message" type="TEXT" />
			<column name="Created Time" type="DATETIME" />
			<column name="_Likes" type="INT" />
			<column name="_Comments" type="INT" />
			<column name="_Reactions" type="INT" />
			<column name="_Shares" type="INT" />
			<column name="_Impressions-Organic" type="INT" />
			<column name="_Impressions-Paid" type="INT" />
			<column name="_Impressions-Total" type="BIGINT" />
			<column name="_Reach-Organic" type="INT" />
			<column name="_Reach-Paid" type="INT" />
			<column name="_Reach-Total" type="BIGINT" />
			<column name="_Clicks" type="INT" />
			<column name="Picture" type="VARCHAR" />
		</view>
		<view name="vw_pbi_flatfee" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select coalesce(`c`.`display_name`,left(`i`.`customer_name`,3)) AS `client_id`,`il`.`amount` AS `Amount`,`i`.`doc_number` AS `Invoice Number`,`i`.`txn_date` AS `Invoice Date`,date_format(`i`.`txn_date`,'%Y-%m-01') AS `reporting_month`,concat(coalesce(`c`.`display_name`,left(`i`.`customer_name`,3)),date_format(`i`.`txn_date`,'%Y-%m-01')) AS `clientmonthkey` from ((((`dw`.`qb_invoice` `i` left join `dw`.`qb_customer` `c` on((`i`.`customer_id` = `c`.`id`))) left join `dw`.`qb_term` `t` on((`i`.`sales_term_id` = `t`.`id`))) left join `dw`.`qb_invoice_line` `il` on((`i`.`doc_number` = `il`.`doc_number`))) left join `dw`.`qb_item` `item` on((`item`.`id` = `il`.`item_id`))) where ((`item`.`name` like 'Flat Fee%') and (date_format(`i`.`txn_date`,'%Y-%m-01') >= (date_format(curdate(),'%y-%m-01') + interval -(2) year)))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="Amount" type="DECIMAL" />
			<column name="Invoice Number" type="INT" />
			<column name="Invoice Date" type="DATE" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="clientmonthkey" type="VARCHAR" />
		</view>
		<view name="vw_pbi_googleanalytics" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`google_analytics`.`client_id` AS `client_id`,`dw`.`google_analytics`.`reportinggroup` AS `reportinggroup`,concat(`dw`.`google_analytics`.`client_id`,`dw`.`google_analytics`.`reportinggroup`) AS `Client Key`,`dw`.`google_analytics`.`reportingmonth` AS `reportingmonth`,`dw`.`google_analytics`.`ga_campaign` AS `GA Campaign`,`dw`.`google_analytics`.`ga_pagepath` AS `Page Path`,`dw`.`google_analytics`.`ga_city` AS `City`,`dw`.`google_analytics`.`ga_region` AS `State`,concat(`dw`.`google_analytics`.`ga_city`,', ',`dw`.`google_analytics`.`ga_region`) AS `Location`,`dw`.`google_analytics`.`ga_sourcemedium` AS `Source\Medium`,`dw`.`google_analytics`.`ga_devicecategory` AS `Device Category`,`dw`.`google_analytics`.`ga_pageviews` AS `Page Views`,`dw`.`google_analytics`.`ga_uniquepageviews` AS `Unique Page Views`,`dw`.`google_analytics`.`ga_newusers` AS `New Users`,`dw`.`google_analytics`.`ga_users` AS `Users`,`dw`.`google_analytics`.`ga_sessions` AS `Sessions`,`dw`.`google_analytics`.`ga_bounces` AS `Bounces`,`dw`.`google_analytics`.`ga_bouncerate` AS `Bounce Rate`,`dw`.`google_analytics`.`ga_avgsessionduration` AS `Avg Session Duration` from `dw`.`google_analytics` where (`dw`.`google_analytics`.`reportingmonth` >= (date_format(curdate(),'%y-%m-01') + interval -(2) year))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="GA Campaign" type="VARCHAR" />
			<column name="Page Path" type="VARCHAR" />
			<column name="City" type="VARCHAR" />
			<column name="State" type="VARCHAR" />
			<column name="Location" type="VARCHAR" />
			<column name="Source\Medium" type="VARCHAR" />
			<column name="Device Category" type="VARCHAR" />
			<column name="Page Views" type="INT" />
			<column name="Unique Page Views" type="INT" />
			<column name="New Users" type="INT" />
			<column name="Users" type="INT" />
			<column name="Sessions" type="INT" />
			<column name="Bounces" type="INT" />
			<column name="Bounce Rate" type="INT" />
			<column name="Avg Session Duration" type="INT" />
		</view>
		<view name="vw_pbi_googleanalytics_org" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`google_analytics`.`client_id` AS `client_id`,`dw`.`google_analytics`.`reportinggroup` AS `reportinggroup`,concat(`dw`.`google_analytics`.`client_id`,`dw`.`google_analytics`.`reportinggroup`) AS `Client Key`,`dw`.`google_analytics`.`reportingmonth` AS `reportingmonth`,`dw`.`google_analytics`.`ga_campaign` AS `GA Campaign`,`dw`.`google_analytics`.`ga_pagepath` AS `Page Path`,`dw`.`google_analytics`.`ga_city` AS `City`,`dw`.`google_analytics`.`ga_region` AS `State`,concat(`dw`.`google_analytics`.`ga_city`,', ',`dw`.`google_analytics`.`ga_region`) AS `Location`,`dw`.`google_analytics`.`ga_sourcemedium` AS `Source\Medium`,`dw`.`google_analytics`.`ga_devicecategory` AS `Device Category`,sum(`dw`.`google_analytics`.`ga_pageviews`) AS `Page Views`,sum(`dw`.`google_analytics`.`ga_uniquepageviews`) AS `Unique Page Views`,sum(`dw`.`google_analytics`.`ga_newusers`) AS `New Users`,sum(`dw`.`google_analytics`.`ga_users`) AS `Users`,sum(`dw`.`google_analytics`.`ga_sessions`) AS `Sessions`,sum(`dw`.`google_analytics`.`ga_bounces`) AS `Bounces`,sum(`dw`.`google_analytics`.`ga_bouncerate`) AS `Bounce Rate`,sum(`dw`.`google_analytics`.`ga_avgsessionduration`) AS `Avg Session Duration` from `dw`.`google_analytics` group by `dw`.`google_analytics`.`client_id`,`dw`.`google_analytics`.`reportinggroup`,concat(`dw`.`google_analytics`.`client_id`,`dw`.`google_analytics`.`reportinggroup`),`dw`.`google_analytics`.`reportingmonth`,`dw`.`google_analytics`.`ga_campaign`,`dw`.`google_analytics`.`ga_pagepath`,`dw`.`google_analytics`.`ga_city`,`dw`.`google_analytics`.`ga_region`,`dw`.`google_analytics`.`ga_sourcemedium`,`dw`.`google_analytics`.`ga_devicecategory`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="reportingmonth" type="DATE" />
			<column name="GA Campaign" type="VARCHAR" />
			<column name="Page Path" type="VARCHAR" />
			<column name="City" type="VARCHAR" />
			<column name="State" type="VARCHAR" />
			<column name="Location" type="VARCHAR" />
			<column name="Source\Medium" type="VARCHAR" />
			<column name="Device Category" type="VARCHAR" />
			<column name="Page Views" type="DECIMAL" />
			<column name="Unique Page Views" type="DECIMAL" />
			<column name="New Users" type="DECIMAL" />
			<column name="Users" type="DECIMAL" />
			<column name="Sessions" type="DECIMAL" />
			<column name="Bounces" type="DECIMAL" />
			<column name="Bounce Rate" type="DECIMAL" />
			<column name="Avg Session Duration" type="DECIMAL" />
		</view>
		<view name="vw_pbi_googlepages" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`vw_google_locations`.`Client Id`,`vw_google_locations`.`Reporting Group`) AS `Client Key`,`vw_google_locations`.`Client Id` AS `Client Id`,`vw_google_locations`.`Reporting Group` AS `Reporting Group`,`vw_google_locations`.`Location Name` AS `Location Name`,`vw_google_locations`.`Store Code` AS `Store Code`,`vw_google_locations`.`Place Id` AS `Place Id`,`vw_google_locations`.`Primary Phone` AS `Primary Phone`,`vw_google_locations`.`Category Name` AS `Category Name`,`vw_google_locations`.`Address Line 1` AS `Address Line 1`,`vw_google_locations`.`Address Line 2` AS `Address Line 2`,`vw_google_locations`.`City` AS `City`,`vw_google_locations`.`State` AS `State`,`vw_google_locations`.`ZIP` AS `Zip`,`vw_google_locations`.`Label` AS `Label`,`vw_google_locations`.`Maps URL` AS `Maps URL`,`vw_google_locations`.`Search URL` AS `Search URL`,`vw_google_locations`.`GMB Location Id` AS `GMB Location Id` from `dw`.`vw_google_locations`]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="Client Id" type="VARCHAR" />
			<column name="Reporting Group" type="VARCHAR" />
			<column name="Location Name" type="LONGTEXT" />
			<column name="Store Code" type="LONGTEXT" />
			<column name="Place Id" type="LONGTEXT" />
			<column name="Primary Phone" type="LONGTEXT" />
			<column name="Category Name" type="LONGTEXT" />
			<column name="Address Line 1" type="LONGTEXT" />
			<column name="Address Line 2" type="LONGTEXT" />
			<column name="City" type="LONGTEXT" />
			<column name="State" type="LONGTEXT" />
			<column name="Zip" type="LONGTEXT" />
			<column name="Label" type="LONGTEXT" />
			<column name="Maps URL" type="LONGTEXT" />
			<column name="Search URL" type="LONGTEXT" />
			<column name="GMB Location Id" type="VARCHAR" />
		</view>
		<view name="vw_pbi_googlereviews" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `vw_google_reviews`.`reviewId` AS `reviewId`,concat(`vw_google_reviews`.`client_id`,convert(`vw_google_reviews`.`reporting_group` using utf8mb4)) AS `Client Key`,`vw_google_reviews`.`client_id` AS `Client Id`,`vw_google_reviews`.`gmb_location_id` AS `GMB Location Id`,`vw_google_reviews`.`reviewer_displayname` AS `Reviewer`,`vw_google_reviews`.`reviewer_profilephotourl` AS `Reviewer Profile Photo`,`vw_google_reviews`.`comment` AS `Review`,`vw_google_reviews`.`starRating` AS `Star Rating`,`vw_google_reviews`.`Venel Assisted` AS `Venel Assisted`,`vw_google_reviews`.`createTime` AS `Review Date`,`vw_google_reviews`.`updateTime` AS `Review Update`,`vw_google_reviews`.`reply_comment` AS `Reply Comment`,`vw_google_reviews`.`reply_updateTime` AS `Reply Date` from `dw`.`vw_google_reviews`]]></view_script>
			<column name="reviewId" type="VARCHAR" />
			<column name="Client Key" type="VARCHAR" />
			<column name="Client Id" type="VARCHAR" />
			<column name="GMB Location Id" type="VARCHAR" />
			<column name="Reviewer" type="VARCHAR" />
			<column name="Reviewer Profile Photo" type="VARCHAR" />
			<column name="Review" type="LONGTEXT" />
			<column name="Star Rating" type="BIGINT" />
			<column name="Venel Assisted" type="VARCHAR" />
			<column name="Review Date" type="DATETIME" />
			<column name="Review Update" type="DATETIME" />
			<column name="Reply Comment" type="LONGTEXT" />
			<column name="Reply Date" type="DATETIME" />
		</view>
		<view name="vw_pbi_invoices" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`i`.`client_id`,convert(`dw`.`c`.`client_description` using utf8mb4)) AS `Client Key`,`dw`.`i`.`Inv_Number` AS `Inv Number`,`dw`.`i`.`Inv_Date` AS `Inv_Date`,`dw`.`i`.`client_id` AS `client_id`,`dw`.`i`.`due_date` AS `Due Date`,`dw`.`i`.`sales_term` AS `sales_term`,`dw`.`i`.`line_num` AS `Line Number`,`dw`.`i`.`line_description` AS `Line Description`,`dw`.`i`.`line_amount` AS `Line_Amount`,`dw`.`i`.`line_item_description` AS `Line Item Description`,`dw`.`i`.`channel_line_item_description` AS `channel_line_item_description`,`dw`.`i`.`reporting_month` AS `reporting_month` from (`dw`.`vw_invoices` `i` left join `dw`.`vw_client` `c` on((`dw`.`i`.`client_id` = convert(`dw`.`c`.`client_id` using utf8mb4))))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="Inv Number" type="INT" />
			<column name="Inv_Date" type="DATE" />
			<column name="client_id" type="VARCHAR" />
			<column name="Due Date" type="DATE" />
			<column name="sales_term" type="VARCHAR" />
			<column name="Line Number" type="INT" />
			<column name="Line Description" type="VARCHAR" />
			<column name="Line_Amount" type="DECIMAL" />
			<column name="Line Item Description" type="VARCHAR" />
			<column name="channel_line_item_description" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
		</view>
		<view name="vw_pbi_onlineapptsrefs" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`o`.`client_id`,`dw`.`o`.`reporting_group`) AS `Client Key`,`dw`.`o`.`client_id` AS `client_id`,`dw`.`o`.`reporting_month` AS `reporting_month`,`dw`.`o`.`reporting_group` AS `reporting_group`,`dw`.`o`.`appointment_count` AS `appointment_count`,`dw`.`o`.`referral_count` AS `referral_count`,`dw`.`o`.`cancel_count` AS `cancel_count`,`dw`.`o`.`reschedule_count` AS `reschedule_count` from `dw`.`vw_online_mor` `o`]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="appointment_count" type="DECIMAL" />
			<column name="referral_count" type="DECIMAL" />
			<column name="cancel_count" type="DECIMAL" />
			<column name="reschedule_count" type="DECIMAL" />
		</view>
		<view name="vw_pbi_patientactivity" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`prctc`.`prctc_client_id`,convert(`dw`.`c`.`client_description` using utf8mb4)) AS `Client Key`,`prctc`.`prctc_client_id` AS `client_id`,`a`.`apptmnt_id` AS `apptmnt_id`,`p`.`prvdr_npi` AS `npi`,`pa`.`ptnt_actvty_ptnt_id` AS `ptnt_actvty_ptnt_id`,`pa`.`ptnt_actvty_type` AS `Patient Activity Type`,`pa`.`ptnt_actvty_date` AS `Patient Activity Date`,1 AS `Messaging Count` from ((((`shr_yr_xprnc`.`patient_activity` `pa` join `shr_yr_xprnc`.`appointment` `a` on((`pa`.`ptnt_actvty_apptmnt_id` = `a`.`apptmnt_id`))) join `shr_yr_xprnc`.`provider` `p` on((`a`.`apptmnt_prvdr_id` = `p`.`prvdr_id`))) join `shr_yr_xprnc`.`practice` `prctc` on((`prctc`.`prctc_id` = `p`.`prvdr_prctc_id`))) left join `dw`.`vw_client` `c` on((`prctc`.`prctc_client_id` = `dw`.`c`.`client_id`)))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="apptmnt_id" type="INT" />
			<column name="npi" type="VARCHAR" />
			<column name="ptnt_actvty_ptnt_id" type="INT" />
			<column name="Patient Activity Type" type="VARCHAR" />
			<column name="Patient Activity Date" type="DATETIME" />
			<column name="Messaging Count" type="INT" />
		</view>
		<view name="vw_pbi_patientemail" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `ClientKey`,`dw`.`c`.`client_id` AS `client_id`,`dw`.`c`.`client_description` AS `client_description`,`dw`.`c`.`client_description` AS `reporting_group`,date_format(cast(`e`.`e_sentdatetime` as date),'%Y-%m-01') AS `reporting_month`,date_format(cast(`e`.`e_sentdatetime` as date),'%Y-%m-%d') AS `Sent Date`,(case when (substr(`e`.`e_name`,3,1) = '-') then replace(replace(replace(substr(`e`.`e_name`,13,200),'_APPROVED',''),'-APPROVED',''),'APPROVED','') else `e`.`e_name` end) AS `Patient Email Campaign`,`e`.`e_name` AS `Patient Email Name`,`e`.`e_recipients` AS `ecomm_recipients`,`e`.`e_opened_unique` AS `ecomm_opened_unique`,`e`.`e_clicks` AS `ecomm_clicks`,`e`.`e_bounced` AS `ecomm_bounced` from (`dw`.`ecommunications` `e` left join `dw`.`vw_client` `c` on((`e`.`e_clientid` = convert(`dw`.`c`.`client_id` using utf8mb4)))) where ((case when (substr(`e`.`e_name`,3,1) = '-') then replace(replace(replace(substr(`e`.`e_name`,13,200),'_APPROVED',''),'-APPROVED',''),'APPROVED','') else `e`.`e_name` end) <> 'Dr. Tyndall PE Distribution April 2021')]]></view_script>
			<column name="ClientKey" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="Sent Date" type="VARCHAR" />
			<column name="Patient Email Campaign" type="VARCHAR" />
			<column name="Patient Email Name" type="VARCHAR" />
			<column name="ecomm_recipients" type="INT" />
			<column name="ecomm_opened_unique" type="INT" />
			<column name="ecomm_clicks" type="INT" />
			<column name="ecomm_bounced" type="INT" />
		</view>
		<view name="vw_pbi_providers" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,concat('',`p`.`npi`) AS `NPI`,`p`.`provider_name` AS `Provider`,`p`.`provider_last_name` AS `Provider Last Name`,concat(`p`.`provider_last_name`,', ',`p`.`provider_first_name`,(case when (trim(coalesce(`p`.`provider_name_suffix_text`,'')) <> '') then ((' ' + trim(`p`.`provider_name_suffix_text`)) + ' ') else ' ' end),`p`.`provider_credential_text`) AS `Provider Name`,`p`.`provider_credential_text` AS `Provider Credentials`,`p`.`provider_website_url` AS `Provider Site URL`,`p`.`image` AS `Provider Photo`,`p`.`provider_review_url` AS `provider_review_url`,(case when ((`p`.`provider_review_url` like '%search.google.com%') and (`p`.`provider_path` = 4)) then '(G)' when (`p`.`provider_path` = 1) then '(VP)' when ((`p`.`provider_path` = 4) and (`p`.`provider_review_url` like '%vitals%')) then '(V)' when ((`p`.`provider_path` = 4) and (`p`.`provider_review_url` like '%healthgrades%')) then '(H)' when ((`p`.`provider_path` = 4) and (`p`.`provider_review_url` like '%yelp%')) then '(Y)' when (`p`.`provider_path` = 2) then '(P)' else '(U)' end) AS `Provider Path`,substr(`p`.`provider_review_url`,(locate('?placeid=',`p`.`provider_review_url`) + 9)) AS `placeid`,`dw`.`gl`.`Location Name` AS `Provider Location Name`,`dw`.`gl`.`Store Code` AS `Provider Store Code`,(case when (`p`.`is_active` = 1) then 'Active' else 'Inactive' end) AS `Active Status` from ((`dw`.`provider` `p` left join `dw`.`vw_client` `c` on((`dw`.`c`.`client_id` = `p`.`client_id`))) left join `dw`.`vw_google_locations` `gl` on((substr(`p`.`provider_review_url`,(locate('?placeid=',`p`.`provider_review_url`) + 9)) = `dw`.`gl`.`Place Id`))) where (`p`.`client_id` <> '1')]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
			<column name="Provider" type="VARCHAR" />
			<column name="Provider Last Name" type="VARCHAR" />
			<column name="Provider Name" type="TEXT" />
			<column name="Provider Credentials" type="VARCHAR" />
			<column name="Provider Site URL" type="VARCHAR" />
			<column name="Provider Photo" type="VARCHAR" />
			<column name="provider_review_url" type="VARCHAR" />
			<column name="Provider Path" type="VARCHAR" />
			<column name="placeid" type="VARCHAR" />
			<column name="Provider Location Name" type="LONGTEXT" />
			<column name="Provider Store Code" type="LONGTEXT" />
			<column name="Active Status" type="VARCHAR" />
		</view>
		<view name="vw_pbi_referringproviders" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_prctc_id`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_referringproviderid`) AS `_rpkey`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_referringproviderid` AS `Ref Provider EMR Id`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_npinumber` AS `Ref Provider NPI`,concat(`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_lastname`,(case when (`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_firstname` is null) then '' else concat(', ',`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_firstname`) end)) AS `Ref Provider Name`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_lastname` AS `Ref Provider Last Name`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_specialty` AS `Ref Provider Specialty`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_email` AS `Ref Provider Email`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_fax` AS `Ref Provider Fax`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_address` AS `Ref Provider Address`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_address2` AS `Ref Provider Address2`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_city` AS `Ref Provider City`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_state` AS `Ref Provider State`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_zip` AS `Ref Provider Zip`,`shr_yr_xprnc`.`referring_provider`.`rfrrng_prvdr_phone` AS `Ref Provider Phone` from `shr_yr_xprnc`.`referring_provider`]]></view_script>
			<column name="_rpkey" type="VARCHAR" />
			<column name="Ref Provider EMR Id" type="VARCHAR" />
			<column name="Ref Provider NPI" type="VARCHAR" />
			<column name="Ref Provider Name" type="VARCHAR" />
			<column name="Ref Provider Last Name" type="VARCHAR" />
			<column name="Ref Provider Specialty" type="VARCHAR" />
			<column name="Ref Provider Email" type="VARCHAR" />
			<column name="Ref Provider Fax" type="VARCHAR" />
			<column name="Ref Provider Address" type="VARCHAR" />
			<column name="Ref Provider Address2" type="VARCHAR" />
			<column name="Ref Provider City" type="VARCHAR" />
			<column name="Ref Provider State" type="VARCHAR" />
			<column name="Ref Provider Zip" type="VARCHAR" />
			<column name="Ref Provider Phone" type="VARCHAR" />
		</view>
		<view name="vw_pbi_reviews" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(convert(`c`.`client_id` using utf8mb4),convert(`c`.`client_description` using utf8mb4)) AS `Client Key`,date_format(`t`.`creation_date`,'%Y-%m-01') AS `reporting_month`,concat(`p`.`provider_name`,convert((case when (`p`.`publish_to` like '%SurgeonReviews.com%') then '' else ' (No SR)' end) using utf8)) AS `Provider`,`p`.`provider_last_name` AS `Provider Last Name`,coalesce(`pcs`.`provider_rating`,0) AS `Provider Rating`,cast(coalesce(`pcs`.`provider_rating_count`,0) as unsigned) AS `Provider Rating Count`,`p`.`provider_path` AS `Provider Path`,`p`.`image` AS `Provider Image`,`t`.`npi` AS `NPI`,`ts`.`source` AS `Rating Source`,`ts`.`source_ext_description` AS `Rating Source Description`,`ts`.`source_order` AS `Rating Source Order`,count(0) AS `Testimonial Count`,sum((case when (`t`.`review_rating` > 0) then 1 else 0 end)) AS `Rating Count`,sum(coalesce(`t`.`review_rating`,0)) AS `Rating Total`,(sum(coalesce(`t`.`review_rating`,0)) / sum((case when (`t`.`review_rating` > 0) then 1 else 0 end))) AS `Rating` from ((((`dw`.`testimonial` `t` join `dw`.`provider` `p` on((`t`.`npi` = `p`.`npi`))) left join `dw`.`provider_clientsite` `pcs` on((`t`.`npi` = `pcs`.`npi`))) join `dw`.`vw_client` `c` on((`t`.`practice_id` = `c`.`client_id`))) join `dw`.`testimonial_source` `ts` on((convert(`t`.`source` using utf8mb4) = `ts`.`source`))) where (`t`.`source` <> 'Patient Encounter') group by concat(convert(`c`.`client_id` using utf8mb4),convert(`c`.`client_description` using utf8mb4)),date_format(`t`.`creation_date`,'%Y-%m-01'),concat(`p`.`provider_name`,convert((case when (`p`.`publish_to` like '%SurgeonReviews.com%') then '' else ' (No SR)' end) using utf8)),`p`.`provider_last_name`,coalesce(`pcs`.`provider_rating`,0),cast(coalesce(`pcs`.`provider_rating_count`,0) as unsigned),`p`.`provider_path`,`p`.`image`,`t`.`npi`,`ts`.`source`,`ts`.`source_ext_description`,`ts`.`source_order`]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="Provider" type="VARCHAR" />
			<column name="Provider Last Name" type="VARCHAR" />
			<column name="Provider Rating" type="DECIMAL" />
			<column name="Provider Rating Count" type="BIGINT" />
			<column name="Provider Path" type="VARCHAR" />
			<column name="Provider Image" type="VARCHAR" />
			<column name="NPI" type="VARCHAR" />
			<column name="Rating Source" type="VARCHAR" />
			<column name="Rating Source Description" type="VARCHAR" />
			<column name="Rating Source Order" type="INT" />
			<column name="Testimonial Count" type="BIGINT" />
			<column name="Rating Count" type="DECIMAL" />
			<column name="Rating Total" type="DECIMAL" />
			<column name="Rating" type="DECIMAL" />
		</view>
		<view name="vw_pbi_vrm_accounts" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,`a`.`id` AS `Account Id`,`a`.`name` AS `Account Name`,`a`.`ispartner` AS `Is Partner`,`a`.`type` AS `Segment`,`a`.`sub_segment__c` AS `Sub Segment`,(case when (`a`.`recordtypeid` = '0121U000000LsGaQAK') then 'Client' else 'Client Account' end) AS `Account Type`,`a`.`billingstreet` AS `Billing Street`,`a`.`billingcity` AS `Billing City`,`a`.`billingstate` AS `Billing State`,`a`.`billingpostalcode` AS `Billing PostalCode`,`a`.`email__c` AS `Email`,1 AS `_acct_count` from (`dw`.`sf_account` `a` join `dw`.`vw_client` `c` on((`a`.`client_id__c` = `dw`.`c`.`client_id`)))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="Account Id" type="VARCHAR" />
			<column name="Account Name" type="VARCHAR" />
			<column name="Is Partner" type="TINYINT" />
			<column name="Segment" type="VARCHAR" />
			<column name="Sub Segment" type="VARCHAR" />
			<column name="Account Type" type="VARCHAR" />
			<column name="Billing Street" type="VARCHAR" />
			<column name="Billing City" type="VARCHAR" />
			<column name="Billing State" type="VARCHAR" />
			<column name="Billing PostalCode" type="VARCHAR" />
			<column name="Email" type="VARCHAR" />
			<column name="_acct_count" type="INT" />
		</view>
		<view name="vw_pbi_vrm_campaignmembers" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`sf_campaignmember`.`campaignid` AS `_campaignid`,`dw`.`sf_campaignmember`.`contactid` AS `_contactid`,`dw`.`sf_campaignmember`.`fax` AS `Fax`,`dw`.`sf_campaignmember`.`hasoptedoutoffax` AS `Opted out of fax`,`dw`.`sf_campaignmember`.`status` AS `Status`,`dw`.`sf_campaignmember`.`lastmodifieddate` AS `Last Modified` from `dw`.`sf_campaignmember`]]></view_script>
			<column name="_campaignid" type="VARCHAR" />
			<column name="_contactid" type="VARCHAR" />
			<column name="Fax" type="VARCHAR" />
			<column name="Opted out of fax" type="VARCHAR" />
			<column name="Status" type="VARCHAR" />
			<column name="Last Modified" type="DATETIME" />
		</view>
		<view name="vw_pbi_vrm_campaigns" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`c`.`client_id`,`dw`.`c`.`client_description`) AS `Client Key`,`cmpgn`.`id` AS `Campaign Id`,`cmpgn`.`name` AS `Campaign Name`,`cmpgn`.`description` AS `Campaign Description`,`cmpgn`.`type` AS `Campaign Type`,cast(`cmpgn`.`createddate` as date) AS `Created Date`,`cmpgn`.`lastmodifieddate` AS `Last Modified`,`cmpgn`.`total_fax_sheets_sent__c` AS `_total_fax_sheets_sent`,`cmpgn`.`numbersent` AS `_number_sent`,1 AS `_campaign_count` from (`dw`.`sf_campaign` `cmpgn` join `dw`.`vw_client` `c` on((`cmpgn`.`client_id__c` = `dw`.`c`.`client_id`)))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="Campaign Id" type="VARCHAR" />
			<column name="Campaign Name" type="VARCHAR" />
			<column name="Campaign Description" type="VARCHAR" />
			<column name="Campaign Type" type="VARCHAR" />
			<column name="Created Date" type="DATE" />
			<column name="Last Modified" type="DATETIME" />
			<column name="_total_fax_sheets_sent" type="INT" />
			<column name="_number_sent" type="INT" />
			<column name="_campaign_count" type="INT" />
		</view>
		<view name="vw_pbi_vrm_contacts" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`dw`.`clnt`.`client_id`,`dw`.`clnt`.`client_description`) AS `Client Key`,`c`.`id` AS `Contact Id`,`c`.`name` AS `Contact Name`,`c`.`fax` AS `Contact Fax`,`c`.`hasoptedoutoffax` AS `Contact Fax Opt Out`,`c`.`accountid` AS `_account_id`,`c`.`fax_last_sent_date__c` AS `Contact Fax Last Sent Date`,`c`.`fax_last_status` AS `Contact Fax Last Status`,`c`.`Primary_Segment__c` AS `Contact Primary Segment`,`c`.`mailingstreet` AS `Mailing Street`,`c`.`mailingcity` AS `Mailing City`,`c`.`mailingstate` AS `Mailing State`,`c`.`mailingpostalcode` AS `Mailing PostalCode`,`c`.`email` AS `Email`,`c`.`lastmodifieddate` AS `Contact Last Modified`,`c`.`active` AS `Contact Active`,1 AS `_contact_count` from (`dw`.`sf_contact` `c` join `dw`.`vw_client` `clnt` on((`c`.`client_id__c` = `dw`.`clnt`.`client_id`)))]]></view_script>
			<column name="Client Key" type="VARCHAR" />
			<column name="Contact Id" type="VARCHAR" />
			<column name="Contact Name" type="VARCHAR" />
			<column name="Contact Fax" type="VARCHAR" />
			<column name="Contact Fax Opt Out" type="VARCHAR" />
			<column name="_account_id" type="VARCHAR" />
			<column name="Contact Fax Last Sent Date" type="DATETIME" />
			<column name="Contact Fax Last Status" type="VARCHAR" />
			<column name="Contact Primary Segment" type="VARCHAR" />
			<column name="Mailing Street" type="VARCHAR" />
			<column name="Mailing City" type="VARCHAR" />
			<column name="Mailing State" type="VARCHAR" />
			<column name="Mailing PostalCode" type="VARCHAR" />
			<column name="Email" type="VARCHAR" />
			<column name="Contact Last Modified" type="DATETIME" />
			<column name="Contact Active" type="TINYINT" />
			<column name="_contact_count" type="INT" />
		</view>
		<view name="vw_pbi_vrm_tasks" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `t`.`id` AS `Task Id`,`t`.`subject` AS `Task Subject`,`t`.`description` AS `Task Description`,`t`.`whoid` AS `_contact_id`,`t`.`status` AS `Task Status`,`t`.`type` AS `Task Type`,`t`.`activitydate` AS `Task Activity Date`,`t`.`lastmodifieddate` AS `Task Last Modified`,`cmpgn`.`id` AS `_campaign_id`,1 AS `_task_count` from (`dw`.`sf_task` `t` left join `dw`.`sf_campaign` `cmpgn` on((`t`.`description` like concat('%',`cmpgn`.`id`,'%'))))]]></view_script>
			<column name="Task Id" type="VARCHAR" />
			<column name="Task Subject" type="VARCHAR" />
			<column name="Task Description" type="VARCHAR" />
			<column name="_contact_id" type="VARCHAR" />
			<column name="Task Status" type="VARCHAR" />
			<column name="Task Type" type="VARCHAR" />
			<column name="Task Activity Date" type="DATE" />
			<column name="Task Last Modified" type="DATETIME" />
			<column name="_campaign_id" type="VARCHAR" />
			<column name="_task_count" type="INT" />
		</view>
		<view name="vw_pbi_workamajig" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`wp`.`prjct_clientid`,convert(`dw`.`c`.`client_description` using utf8mb4)) AS `_clientkey`,`wp`.`prjct_clientid` AS `_clientid`,`wp`.`prjct_number` AS `Project Number`,`wp`.`prjct_name` AS `Project Name`,`wp`.`prjct_startdate` AS `Project Start Date`,(case when (`wp`.`prjct_active` = 'NO') then coalesce(`wp`.`prjct_lasttaskduedate`,`wp`.`prjct_dateupdated`) else NULL end) AS `Project Complete Date`,`wp`.`prjct_status` AS `Project Status`,`wp`.`prjct_type` AS `Project Type`,`wp`.`prjct_classification` AS `Project Classification`,`wp`.`prjct_dateupdated` AS `Project Date Updated`,`wp`.`prjct_active` AS `Project Active`,`wp`.`prjct_percentcomplete` AS `Project Percent Complete`,(`wp`.`prjct_startdate` + interval -(weekday(`wp`.`prjct_startdate`)) day) AS `Project Week`,date_format(`wp`.`prjct_startdate`,'%Y-%m-01') AS `_reportingmonth`,concat(`wp`.`prjct_clientid`,convert(date_format(`wp`.`prjct_startdate`,'%Y-%m-01') using utf8mb4)) AS `_clientmonthkey` from (`dw`.`workamajig_projects` `wp` left join `dw`.`vw_client` `c` on((`wp`.`prjct_clientid` = `dw`.`c`.`client_id`))) where ((`wp`.`prjct_startdate` > '2021-01-01') and (`wp`.`prjct_classification` is not null))]]></view_script>
			<column name="_clientkey" type="VARCHAR" />
			<column name="_clientid" type="VARCHAR" />
			<column name="Project Number" type="VARCHAR" />
			<column name="Project Name" type="VARCHAR" />
			<column name="Project Start Date" type="DATE" />
			<column name="Project Complete Date" type="DATE" />
			<column name="Project Status" type="VARCHAR" />
			<column name="Project Type" type="VARCHAR" />
			<column name="Project Classification" type="VARCHAR" />
			<column name="Project Date Updated" type="DATE" />
			<column name="Project Active" type="VARCHAR" />
			<column name="Project Percent Complete" type="VARCHAR" />
			<column name="Project Week" type="DATE" />
			<column name="_reportingmonth" type="VARCHAR" />
			<column name="_clientmonthkey" type="VARCHAR" />
		</view>
		<view name="vw_provider" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `p`.`client_id` AS `_client_id`,`p`.`title` AS `provider_title`,`p`.`provider_last_name` AS `provider_last_name`,`p`.`provider_name` AS `provider_name`,`p`.`provider_first_name` AS `provider_first_name`,(case when (`p`.`provider_first_name` = 'Other') then 'Other' else concat(`p`.`provider_last_name`,', ',`p`.`provider_first_name`,convert(convert((case when (`p`.`provider_name_suffix_text` <> '') then ' ' else '' end) using utf8mb3) using utf8mb4),`p`.`provider_name_suffix_text`,convert(convert((case when (`pc`.`npi` is null) then '*' else '' end) using utf8mb3) using utf8mb4)) end) AS `provider_short_name`,`p`.`npi` AS `provider_npi`,coalesce(`p`.`image`,'https://www.patientencounter.com/sites/patientencounter.com/files/styles/thumbnail/public/default_images/no-photo_4.png') AS `provider_image_url`,`p`.`address1` AS `provider_address1`,`p`.`address2` AS `provider_address2`,`p`.`city` AS `provider_city`,`p`.`state` AS `provider_state`,`p`.`postal_code` AS `provider_postal_code`,`p`.`office_address_country` AS `provider_office_address_country`,`p`.`office_address_geofield` AS `provider_office_address_geofield`,`p`.`office_phone` AS `provider_office_phone`,`p`.`office_fax` AS `provider_office_fax`,`p`.`specialty_text` AS `provider_specialty_text`,`p`.`field_medical_specialty` AS `provider_field_medical_specialty`,`p`.`gender` AS `provider_gender`,`p`.`provider_path` AS `provider_path`,`p`.`provider_website_url` AS `provider_website_url`,`p`.`is_active` AS `is_active` from (`dw`.`provider` `p` left join `dw`.`provider_clientsite` `pc` on((`p`.`npi` = convert(`pc`.`npi` using utf8mb4))))]]></view_script>
			<column name="_client_id" type="VARCHAR" />
			<column name="provider_title" type="VARCHAR" />
			<column name="provider_last_name" type="VARCHAR" />
			<column name="provider_name" type="VARCHAR" />
			<column name="provider_first_name" type="VARCHAR" />
			<column name="provider_short_name" type="TEXT" />
			<column name="provider_npi" type="VARCHAR" />
			<column name="provider_image_url" type="VARCHAR" />
			<column name="provider_address1" type="VARCHAR" />
			<column name="provider_address2" type="VARCHAR" />
			<column name="provider_city" type="VARCHAR" />
			<column name="provider_state" type="VARCHAR" />
			<column name="provider_postal_code" type="VARCHAR" />
			<column name="provider_office_address_country" type="VARCHAR" />
			<column name="provider_office_address_geofield" type="VARCHAR" />
			<column name="provider_office_phone" type="VARCHAR" />
			<column name="provider_office_fax" type="VARCHAR" />
			<column name="provider_specialty_text" type="VARCHAR" />
			<column name="provider_field_medical_specialty" type="VARCHAR" />
			<column name="provider_gender" type="VARCHAR" />
			<column name="provider_path" type="VARCHAR" />
			<column name="provider_website_url" type="VARCHAR" />
			<column name="is_active" type="TINYINT" />
		</view>
		<view name="vw_reporting" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `rg`.`rg_clientid` AS `client_id`,coalesce(`clnt`.`client_description`,'999 - Unknown') AS `client_description`,`rg`.`rg_reportinggroup` AS `reporting_group`,`c`.`cal_reporting_month` AS `reporting_month`,`c`.`cal_reporting_month_py` AS `reporting_month_py`,`rg`.`rg_monthlybudget` AS `Monthly Budget`,`rg`.`rg_startdate` AS `Start Date`,`rg`.`rg_enddate` AS `End Date`,`rg`.`rg_practicereceipts` AS `Practice Receipts`,`rg`.`rg_valueofnewpatient` AS `Value of New Patient`,`rg`.`rg_uniquepatients` AS `Unique Patients` from ((`dw`.`reporting_group` `rg` join `dw`.`vw_calendar_reporting_month` `c`) left join `dw`.`vw_client` `clnt` on((`rg`.`rg_clientid` = `clnt`.`client_id`))) order by `rg`.`rg_clientid`,`rg`.`rg_reportinggroup`,`c`.`cal_reporting_month`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="reporting_month_py" type="DATE" />
			<column name="Monthly Budget" type="INT" />
			<column name="Start Date" type="DATE" />
			<column name="End Date" type="DATE" />
			<column name="Practice Receipts" type="DECIMAL" />
			<column name="Value of New Patient" type="INT" />
			<column name="Unique Patients" type="INT" />
		</view>
		<view name="vw_reporting_group" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `rg`.`rg_clientid` AS `rg_clientid`,`rg`.`rg_reportinggroup` AS `rg_reportinggroup`,rtrim(ltrim(concat(`dw`.`c`.`client_int_description`,convert((case when (coalesce(`rg`.`rg_reportinggroupid`,'') = '') then '' else concat(' (',`rg`.`rg_reportinggroupid`,')') end) using utf8mb4)))) AS `rg_int_reportinggroup`,`rg`.`rg_monthlybudget` AS `rg_monthlybudget`,`rg`.`rg_startdate` AS `rg_startdate`,`rg`.`rg_enddate` AS `rg_enddate`,`rg`.`rg_practicereceipts` AS `rg_practicereceipts`,`rg`.`rg_uniquepatients` AS `rg_uniquepatients`,`rg`.`rg_valueofnewpatient` AS `rg_valueofnewpatient`,`rg`.`rg_crt_date` AS `rg_crt_date`,`rg`.`rg_mdfd_date` AS `rg_mdfd_date`,`rg`.`rg_path` AS `rg_path`,`dw`.`c`.`client_generate_mor` AS `rg_generate_mor`,`dw`.`c`.`client_reporting_periods` AS `rg_reporting_periods`,`rg`.`rg_reportinggroupid` AS `rg_reportinggroupid`,`rg`.`rg_reporting_startdate` AS `rg_reporting_startdate`,`dw`.`c`.`client_id` AS `client_id`,`dw`.`c`.`client_status` AS `client_status` from (`dw`.`reporting_group` `rg` left join `dw`.`vw_client` `c` on((`rg`.`rg_clientid` = `dw`.`c`.`client_id`)))]]></view_script>
			<column name="rg_clientid" type="VARCHAR" />
			<column name="rg_reportinggroup" type="VARCHAR" />
			<column name="rg_int_reportinggroup" type="VARCHAR" />
			<column name="rg_monthlybudget" type="INT" />
			<column name="rg_startdate" type="DATE" />
			<column name="rg_enddate" type="DATE" />
			<column name="rg_practicereceipts" type="DECIMAL" />
			<column name="rg_uniquepatients" type="INT" />
			<column name="rg_valueofnewpatient" type="INT" />
			<column name="rg_crt_date" type="DATETIME" />
			<column name="rg_mdfd_date" type="DATETIME" />
			<column name="rg_path" type="VARCHAR" />
			<column name="rg_generate_mor" type="VARCHAR" />
			<column name="rg_reporting_periods" type="INT" />
			<column name="rg_reportinggroupid" type="VARCHAR" />
			<column name="rg_reporting_startdate" type="DATE" />
			<column name="client_id" type="VARCHAR" />
			<column name="client_status" type="VARCHAR" />
		</view>
		<view name="vw_reviews" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `dw`.`c`.`client_id` AS `clientid`,(case when (`dw`.`gl`.`Store Code` like '%-Practice%') then concat(`dw`.`c`.`client_id`,'001') else coalesce(`p`.`npi`,concat(`dw`.`c`.`client_id`,'001')) end) AS `npi`,trim(`dw`.`gl`.`Location Name`) AS `listing`,`dw`.`gl`.`GMB Location Id` AS `listingid`,`dw`.`gl`.`Search URL` AS `listing_url`,'Google' AS `platform`,coalesce(`dw`.`gl`.`Store Code`,'No StoreCode') AS `source`,cast(coalesce(`gr`.`createTime`,'1900-01-01') as date) AS `review_date`,cast(coalesce(`gr`.`starRating`,0) as signed) AS `starrating`,`gr`.`reviewer_displayname` AS `reviewer`,`gr`.`comment` AS `comment` from (((`dw`.`vw_google_locations` `gl` join `dw`.`vw_client` `c` on((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`))) left join `dw`.`google_review` `gr` on((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`))) left join `dw`.`provider` `p` on((`p`.`provider_name` = `dw`.`gl`.`Location Name`))) union select `dw`.`c`.`client_id` AS `clientid`,`dw`.`t`.`testimonial_npi` AS `npi`,trim(`dw`.`p`.`provider_name`) AS `listing`,`dw`.`t`.`testimonial_npi` AS `listingid`,(case when (`ts`.`source_sitepathurl` is null) then `dw`.`p`.`provider_website_url` else concat(`ts`.`source_url`,`sp`.`path`) end) AS `listing_url`,(case when (`ts`.`source` = 'Practice Site') then `dw`.`c`.`client_name` else `ts`.`source_ext_description` end) AS `platform`,`ts`.`source` AS `source`,cast(`dw`.`t`.`testimonial_creation_date` as date) AS `review_date`,`dw`.`t`.`testimonial_rating` AS `starrating`,`dw`.`t`.`testimonial_reviewer_name` AS `reviewer`,`dw`.`t`.`testimonial_body` AS `comment` from (((((`dw`.`vw_testimonial` `t` join `dw`.`vw_client` `c` on((`dw`.`t`.`testimonial_client_id` = `dw`.`c`.`client_id`))) join `dw`.`vw_provider` `p` on((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`))) left join `dw`.`testimonial_source` `ts` on((`dw`.`t`.`testimonial_source` = `ts`.`source`))) left join `dw`.`provider_clientsite` `pc` on((`dw`.`p`.`provider_npi` = `pc`.`npi`))) left join `dw`.`provider_sitepath` `sp` on(((`sp`.`source` = `ts`.`source_abbreviation`) and (`sp`.`npi` = `dw`.`t`.`testimonial_npi`)))) where ((`dw`.`t`.`testimonial_client_id` like '%') and (`dw`.`t`.`testimonial_published` = 'Yes') and (`dw`.`p`.`provider_gender` is null))]]></view_script>
			<column name="clientid" type="VARCHAR" />
			<column name="npi" type="VARCHAR" />
			<column name="listing" type="LONGTEXT" />
			<column name="listingid" type="VARCHAR" />
			<column name="listing_url" type="LONGTEXT" />
			<column name="platform" type="VARCHAR" />
			<column name="source" type="LONGTEXT" />
			<column name="review_date" type="DATE" />
			<column name="starrating" type="BIGINT" />
			<column name="reviewer" type="VARCHAR" />
			<column name="comment" type="LONGTEXT" />
		</view>
		<view name="vw_testimonial" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ft`.`testimonial_body` AS `testimonial_body`,`ft`.`testimonial_rating` AS `testimonial_rating`,`ft`.`testimonial_permission_to_share` AS `testimonial_permission_to_share`,`ft`.`testimonial_reviewer_name` AS `testimonial_reviewer_name`,`ft`.`testimonial_reviewer_email` AS `testimonial_reviewer_email`,`ft`.`testimonial_message_tone` AS `testimonial_message_tone`,`ft`.`testimonial_sentiment_score` AS `testimonial_sentiment_score`,`ft`.`testimonial_client_id` AS `testimonial_client_id`,`ft`.`testimonial_reporting_group` AS `testimonial_reporting_group`,`ft`.`testimonial_npi` AS `testimonial_npi`,`ft`.`testimonial_creation_date` AS `testimonial_creation_date`,`ft`.`testimonial_reporting_month` AS `testimonial_reporting_month`,`ft`.`testimonial_published` AS `testimonial_published`,`ft`.`testimonial_unique_review_id` AS `testimonial_unique_review_id`,`ft`.`testimonial_source` AS `testimonial_source`,`ft`.`testimonial_published_to` AS `testimonial_published_to`,`ft`.`testimonial_title` AS `testimonial_title`,`ft`.`testimonial_url` AS `testimonial_url`,`ft`.`testimonial_count` AS `testimonial_count`,`ft`.`testimonial_rating_count` AS `testimonial_rating_count`,`p`.`specialty_text` AS `specialty_text`,`p`.`rating` AS `rating`,`p`.`provider_middle_name` AS `provider_middle_name`,`p`.`provider_credential_text` AS `provider_credential_text`,`p`.`image` AS `image`,`p`.`provider_name_prefix` AS `provider_name_prefix`,`p`.`postal_code` AS `postal_code`,`p`.`city` AS `city`,`p`.`title` AS `title`,`p`.`office_address_country` AS `office_address_country`,`p`.`state` AS `state`,`p`.`provider_last_name` AS `provider_last_name`,`p`.`provider_name` AS `provider_name`,`p`.`provider_first_name` AS `provider_first_name`,`p`.`office_fax` AS `office_fax`,`p`.`npi` AS `npi`,`p`.`office_address_geofield` AS `office_address_geofield`,`p`.`address1` AS `address1`,`p`.`address2` AS `address2`,`p`.`nid` AS `nid`,`p`.`provider_name_suffix_text` AS `provider_name_suffix_text`,`p`.`client_id` AS `client_id`,`p`.`field_medical_specialty` AS `field_medical_specialty`,`p`.`gender` AS `gender`,`p`.`publish_to` AS `publish_to`,`p`.`parent_practice_nid` AS `parent_practice_nid`,`p`.`office_phone` AS `office_phone`,`p`.`parent_practice` AS `parent_practice`,`p`.`provider_path` AS `provider_path` from ((select `t`.`body` AS `testimonial_body`,`t`.`review_rating` AS `testimonial_rating`,`t`.`permission_to_share` AS `testimonial_permission_to_share`,`t`.`reviewer_name` AS `testimonial_reviewer_name`,`t`.`reviewer_email` AS `testimonial_reviewer_email`,`t`.`message_tone` AS `testimonial_message_tone`,`t`.`sentiment_score` AS `testimonial_sentiment_score`,`t`.`practice_id` AS `testimonial_client_id`,`dw`.`c`.`client_description` AS `testimonial_reporting_group`,`t`.`npi` AS `testimonial_npi`,`t`.`creation_date` AS `testimonial_creation_date`,date_format(cast(`t`.`creation_date` as date),'%Y-%m-01') AS `testimonial_reporting_month`,`t`.`published` AS `testimonial_published`,`t`.`unique_review_id` AS `testimonial_unique_review_id`,`ts`.`source` AS `testimonial_source`,`t`.`published_to` AS `testimonial_published_to`,`t`.`source_title` AS `testimonial_title`,concat('https://www.patientencounter.com/admin/reviews/all?field_unique_review_id_value=',`t`.`unique_review_id`) AS `testimonial_url`,1 AS `testimonial_count`,(case when (`t`.`review_rating` = 0) then 0 else 1 end) AS `testimonial_rating_count` from ((((`dw`.`testimonial` `t` join json_table(`t`.`published_to`, '$.sites[*]' columns (`source` varchar(500) character set utf8mb4 path '$')) `ps`) left join `dw`.`testimonial_source` `ts` on((`ts`.`source_abbreviation` = `ps`.`source`))) left join `dw`.`vw_client` `c` on((`t`.`practice_id` = `dw`.`c`.`client_id`))) left join `dw`.`provider` `b` on(((`b`.`client_id` = `t`.`practice_id`) and (`b`.`npi` = `t`.`npi`)))) where ((`t`.`source` = 'Patient Encounter') and (`ps`.`source` <> 'external'))) `ft` join `dw`.`provider` `p` on((`ft`.`testimonial_npi` = `p`.`npi`)))]]></view_script>
			<column name="testimonial_body" type="LONGTEXT" />
			<column name="testimonial_rating" type="INT" />
			<column name="testimonial_permission_to_share" type="VARCHAR" />
			<column name="testimonial_reviewer_name" type="VARCHAR" />
			<column name="testimonial_reviewer_email" type="VARCHAR" />
			<column name="testimonial_message_tone" type="VARCHAR" />
			<column name="testimonial_sentiment_score" type="VARCHAR" />
			<column name="testimonial_client_id" type="VARCHAR" />
			<column name="testimonial_reporting_group" type="VARCHAR" />
			<column name="testimonial_npi" type="VARCHAR" />
			<column name="testimonial_creation_date" type="DATETIME" />
			<column name="testimonial_reporting_month" type="VARCHAR" />
			<column name="testimonial_published" type="VARCHAR" />
			<column name="testimonial_unique_review_id" type="VARCHAR" />
			<column name="testimonial_source" type="VARCHAR" />
			<column name="testimonial_published_to" type="JSON" />
			<column name="testimonial_title" type="VARCHAR" />
			<column name="testimonial_url" type="VARCHAR" />
			<column name="testimonial_count" type="INT" />
			<column name="testimonial_rating_count" type="INT" />
			<column name="specialty_text" type="VARCHAR" />
			<column name="rating" type="VARCHAR" />
			<column name="provider_middle_name" type="VARCHAR" />
			<column name="provider_credential_text" type="VARCHAR" />
			<column name="image" type="VARCHAR" />
			<column name="provider_name_prefix" type="VARCHAR" />
			<column name="postal_code" type="VARCHAR" />
			<column name="city" type="VARCHAR" />
			<column name="title" type="VARCHAR" />
			<column name="office_address_country" type="VARCHAR" />
			<column name="state" type="VARCHAR" />
			<column name="provider_last_name" type="VARCHAR" />
			<column name="provider_name" type="VARCHAR" />
			<column name="provider_first_name" type="VARCHAR" />
			<column name="office_fax" type="VARCHAR" />
			<column name="npi" type="VARCHAR" />
			<column name="office_address_geofield" type="VARCHAR" />
			<column name="address1" type="VARCHAR" />
			<column name="address2" type="VARCHAR" />
			<column name="nid" type="VARCHAR" />
			<column name="provider_name_suffix_text" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="field_medical_specialty" type="VARCHAR" />
			<column name="gender" type="VARCHAR" />
			<column name="publish_to" type="JSON" />
			<column name="parent_practice_nid" type="VARCHAR" />
			<column name="office_phone" type="VARCHAR" />
			<column name="parent_practice" type="VARCHAR" />
			<column name="provider_path" type="VARCHAR" />
		</view>
		<view name="vw_testimonial_org" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ft`.`testimonial_body` AS `testimonial_body`,`ft`.`testimonial_rating` AS `testimonial_rating`,`ft`.`testimonial_permission_to_share` AS `testimonial_permission_to_share`,`ft`.`testimonial_reviewer_name` AS `testimonial_reviewer_name`,`ft`.`testimonial_reviewer_email` AS `testimonial_reviewer_email`,`ft`.`testimonial_message_tone` AS `testimonial_message_tone`,`ft`.`testimonial_sentiment_score` AS `testimonial_sentiment_score`,`ft`.`testimonial_client_id` AS `testimonial_client_id`,`ft`.`testimonial_reporting_group` AS `testimonial_reporting_group`,`ft`.`testimonial_npi` AS `testimonial_npi`,`ft`.`testimonial_creation_date` AS `testimonial_creation_date`,`ft`.`testimonial_reporting_month` AS `testimonial_reporting_month`,`ft`.`testimonial_published` AS `testimonial_published`,`ft`.`testimonial_unique_review_id` AS `testimonial_unique_review_id`,`ft`.`testimonial_source` AS `testimonial_source`,`ft`.`testimonial_published_to` AS `testimonial_published_to`,`ft`.`testimonial_title` AS `testimonial_title`,`ft`.`testimonial_url` AS `testimonial_url`,`ft`.`testimonial_count` AS `testimonial_count`,`ft`.`testimonial_rating_count` AS `testimonial_rating_count`,`p`.`specialty_text` AS `specialty_text`,`p`.`rating` AS `rating`,`p`.`provider_middle_name` AS `provider_middle_name`,`p`.`provider_credential_text` AS `provider_credential_text`,`p`.`image` AS `image`,`p`.`provider_name_prefix` AS `provider_name_prefix`,`p`.`postal_code` AS `postal_code`,`p`.`city` AS `city`,`p`.`title` AS `title`,`p`.`office_address_country` AS `office_address_country`,`p`.`state` AS `state`,`p`.`provider_last_name` AS `provider_last_name`,`p`.`provider_name` AS `provider_name`,`p`.`provider_first_name` AS `provider_first_name`,`p`.`office_fax` AS `office_fax`,`p`.`npi` AS `npi`,`p`.`office_address_geofield` AS `office_address_geofield`,`p`.`address1` AS `address1`,`p`.`address2` AS `address2`,`p`.`nid` AS `nid`,`p`.`provider_name_suffix_text` AS `provider_name_suffix_text`,`p`.`client_id` AS `client_id`,`p`.`field_medical_specialty` AS `field_medical_specialty`,`p`.`gender` AS `gender`,`p`.`publish_to` AS `publish_to`,`p`.`parent_practice_nid` AS `parent_practice_nid`,`p`.`office_phone` AS `office_phone`,`p`.`parent_practice` AS `parent_practice`,`p`.`provider_path` AS `provider_path` from ((select `t`.`body` AS `testimonial_body`,`t`.`review_rating` AS `testimonial_rating`,`t`.`permission_to_share` AS `testimonial_permission_to_share`,`t`.`reviewer_name` AS `testimonial_reviewer_name`,`t`.`reviewer_email` AS `testimonial_reviewer_email`,`t`.`message_tone` AS `testimonial_message_tone`,`t`.`sentiment_score` AS `testimonial_sentiment_score`,`t`.`practice_id` AS `testimonial_client_id`,`dw`.`c`.`client_description` AS `testimonial_reporting_group`,`t`.`npi` AS `testimonial_npi`,`t`.`creation_date` AS `testimonial_creation_date`,date_format(cast(`t`.`creation_date` as date),'%Y-%m-01') AS `testimonial_reporting_month`,`t`.`published` AS `testimonial_published`,`t`.`unique_review_id` AS `testimonial_unique_review_id`,`t`.`source` AS `testimonial_source`,`t`.`published_to` AS `testimonial_published_to`,`t`.`source_title` AS `testimonial_title`,(case when (`t`.`source` = 'Patient Encounter') then concat('https://www.patientencounter.com/admin/reviews/completed?field_unique_review_id_value=',`t`.`unique_review_id`) when (`t`.`source` = 'Ortho Reviews') then concat('https://www.orthopedicreviews.com/admin/reviews?field_patient_encounter_id_value=',`t`.`unique_review_id`) when (`t`.`source` = 'Doctor Reviews') then concat('https://www.doctorreviews.com/admin/reviews?field_patient_encounter_id_value=',`t`.`unique_review_id`) else '' end) AS `testimonial_url`,1 AS `testimonial_count`,(case when (coalesce(`t`.`review_rating`,0) = 0) then 0 else 1 end) AS `testimonial_rating_count` from (`dw`.`testimonial` `t` left join `dw`.`vw_client` `c` on((`t`.`practice_id` = `dw`.`c`.`client_id`))) where (`t`.`source` <> 'Patient Encounter') union all select `t`.`body` AS `testimonial_body`,`t`.`review_rating` AS `testimonial_rating`,`t`.`permission_to_share` AS `testimonial_permission_to_share`,`t`.`reviewer_name` AS `testimonial_reviewer_name`,`t`.`reviewer_email` AS `testimonial_reviewer_email`,`t`.`message_tone` AS `testimonial_message_tone`,`t`.`sentiment_score` AS `testimonial_sentiment_score`,`t`.`practice_id` AS `_client_id`,`dw`.`c`.`client_description` AS `reporting_group`,`t`.`npi` AS `testimonial_npi`,`t`.`creation_date` AS `testimonial_creation_date`,date_format(cast(`t`.`creation_date` as date),'%Y-%m-01') AS `testimonial_reporting_month`,`t`.`published` AS `testimonial_published`,`t`.`unique_review_id` AS `testimonial_unique_review_id`,(case when ((`t`.`source` = 'Patient Encounter') and (json_search(`t`.`published_to`,'one','exp') is not null)) then 'Experience' when ((`t`.`source` = 'Patient Encounter') and (json_search(`t`.`published_to`,'one','practice') is not null) and (`dw`.`c`.`client_reviews_pe` = 'Yes') and (json_extract(`b`.`publish_to`,'$.publish_to') like '%Practice Site%')) then 'Practice Site' else `t`.`source` end) AS `testimonial_source`,`t`.`published_to` AS `testimonial_published_to`,`t`.`source_title` AS `testimonial_title`,(case when (`t`.`source` = 'Patient Encounter') then concat('https://www.patientencounter.com/admin/reviews/completed?field_unique_review_id_value=',`t`.`unique_review_id`) when (`t`.`source` = 'Ortho Reviews') then concat('https://www.orthopedicreviews.com/admin/reviews?field_patient_encounter_id_value=',`t`.`unique_review_id`) when (`t`.`source` = 'Doctor Reviews') then concat('https://www.doctorreviews.com/admin/reviews?field_patient_encounter_id_value=',`t`.`unique_review_id`) else '' end) AS `testimonial_url`,1 AS `testimonial_count`,(case when (`t`.`review_rating` = 0) then 0 else 1 end) AS `testimonial_rating_count` from ((`dw`.`testimonial` `t` left join `dw`.`vw_client` `c` on((`t`.`practice_id` = `dw`.`c`.`client_id`))) left join `dw`.`provider` `b` on(((`b`.`client_id` = `t`.`practice_id`) and (`b`.`npi` = `t`.`npi`)))) where ((`t`.`source` = 'Patient Encounter') and ((select count(0) from `dw`.`testimonial` `a` where (`a`.`unique_review_id` = `t`.`unique_review_id`)) <= 1) and ((json_search(`t`.`published_to`,'one','practice') is not null) or (json_search(`t`.`published_to`,'one','exp') is not null) or (json_length(json_extract(`t`.`published_to`,'$.sites')) = 0)) and ((case when ((`t`.`source` = 'Patient Encounter') and (json_search(`t`.`published_to`,'one','exp') is not null)) then 'Experience' when ((`t`.`source` = 'Patient Encounter') and (json_search(`t`.`published_to`,'one','practice') is not null) and (`dw`.`c`.`client_reviews_pe` = 'Yes') and (json_extract(`b`.`publish_to`,'$.publish_to') like '%Practice Site%')) then 'Practice Site' else `t`.`source` end) <> 'Patient Encounter'))) `ft` join `dw`.`provider` `p` on((`ft`.`testimonial_npi` = `p`.`npi`)))]]></view_script>
			<column name="testimonial_body" type="LONGTEXT" />
			<column name="testimonial_rating" type="INT" />
			<column name="testimonial_permission_to_share" type="VARCHAR" />
			<column name="testimonial_reviewer_name" type="VARCHAR" />
			<column name="testimonial_reviewer_email" type="VARCHAR" />
			<column name="testimonial_message_tone" type="VARCHAR" />
			<column name="testimonial_sentiment_score" type="VARCHAR" />
			<column name="testimonial_client_id" type="VARCHAR" />
			<column name="testimonial_reporting_group" type="VARCHAR" />
			<column name="testimonial_npi" type="VARCHAR" />
			<column name="testimonial_creation_date" type="DATETIME" />
			<column name="testimonial_reporting_month" type="VARCHAR" />
			<column name="testimonial_published" type="VARCHAR" />
			<column name="testimonial_unique_review_id" type="VARCHAR" />
			<column name="testimonial_source" type="VARCHAR" />
			<column name="testimonial_published_to" type="JSON" />
			<column name="testimonial_title" type="VARCHAR" />
			<column name="testimonial_url" type="VARCHAR" />
			<column name="testimonial_count" type="BIGINT" />
			<column name="testimonial_rating_count" type="BIGINT" />
			<column name="specialty_text" type="VARCHAR" />
			<column name="rating" type="VARCHAR" />
			<column name="provider_middle_name" type="VARCHAR" />
			<column name="provider_credential_text" type="VARCHAR" />
			<column name="image" type="VARCHAR" />
			<column name="provider_name_prefix" type="VARCHAR" />
			<column name="postal_code" type="VARCHAR" />
			<column name="city" type="VARCHAR" />
			<column name="title" type="VARCHAR" />
			<column name="office_address_country" type="VARCHAR" />
			<column name="state" type="VARCHAR" />
			<column name="provider_last_name" type="VARCHAR" />
			<column name="provider_name" type="VARCHAR" />
			<column name="provider_first_name" type="VARCHAR" />
			<column name="office_fax" type="VARCHAR" />
			<column name="npi" type="VARCHAR" />
			<column name="office_address_geofield" type="VARCHAR" />
			<column name="address1" type="VARCHAR" />
			<column name="address2" type="VARCHAR" />
			<column name="nid" type="VARCHAR" />
			<column name="provider_name_suffix_text" type="VARCHAR" />
			<column name="client_id" type="VARCHAR" />
			<column name="field_medical_specialty" type="VARCHAR" />
			<column name="gender" type="VARCHAR" />
			<column name="publish_to" type="JSON" />
			<column name="parent_practice_nid" type="VARCHAR" />
			<column name="office_phone" type="VARCHAR" />
			<column name="parent_practice" type="VARCHAR" />
			<column name="provider_path" type="VARCHAR" />
		</view>
		<view name="vw_user" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select concat(`u`.`u_firstname`,' ',`u`.`u_lastname`) AS `u_fullname`,`u`.`u_username` AS `u_username`,`u`.`u_email` AS `u_email`,`u`.`u_firstname` AS `u_firstname`,`u`.`u_lastname` AS `u_lastname`,`u`.`u_roles` AS `u_roles`,`u`.`u_crt_date` AS `u_crt_date`,`u`.`u_mdfd_date` AS `u_mdfd_date`,`u`.`u_status` AS `u_status` from `dw`.`user` `u`]]></view_script>
			<column name="u_fullname" type="VARCHAR" />
			<column name="u_username" type="VARCHAR" />
			<column name="u_email" type="VARCHAR" />
			<column name="u_firstname" type="VARCHAR" />
			<column name="u_lastname" type="VARCHAR" />
			<column name="u_roles" type="VARCHAR" />
			<column name="u_crt_date" type="DATETIME" />
			<column name="u_mdfd_date" type="DATETIME" />
			<column name="u_status" type="VARCHAR" />
		</view>
		<view name="vw_workamajig" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `p`.`prjct_number` AS `Project Number`,`p`.`prjct_name` AS `Project Name`,`p`.`prjct_startdate` AS `Start Date`,`p`.`prjct_status` AS `Status`,(case when (`p`.`prjct_type` = '') then 'Not Assigned' else `p`.`prjct_type` end) AS `Type`,`p`.`prjct_active` AS `Active`,`p`.`prjct_percentcomplete` AS `Percent Complete`,`p`.`prjct_clientid` AS `Client ID`,`c`.`client_int_description` AS `Client Int Description`,cast((`p`.`prjct_startdate` + interval (1 - dayofweek(`p`.`prjct_startdate`)) day) as date) AS `Project Week`,1 AS `Project Count` from (`dw`.`workamajig_projects` `p` join `dw`.`vw_client` `c` on((`p`.`prjct_clientid` = convert(`c`.`client_id` using utf8mb4))))]]></view_script>
			<column name="Project Number" type="VARCHAR" />
			<column name="Project Name" type="VARCHAR" />
			<column name="Start Date" type="DATE" />
			<column name="Status" type="VARCHAR" />
			<column name="Type" type="VARCHAR" />
			<column name="Active" type="VARCHAR" />
			<column name="Percent Complete" type="VARCHAR" />
			<column name="Client ID" type="VARCHAR" />
			<column name="Client Int Description" type="VARCHAR" />
			<column name="Project Week" type="DATE" />
			<column name="Project Count" type="INT" />
		</view>
		<view name="xxxvw_call_mor" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`client_id` AS `client_id`,`c`.`reporting_group` AS `reporting_group`,`c`.`reporting_month` AS `reporting_month`,coalesce(`c`.`call_category`,'Uncategorized') AS `call_category`,sum(coalesce(`c`.`call_count`,0)) AS `call_count`,sum((coalesce(`c`.`call_count`,0) * `rg`.`rg_valueofnewpatient`)) AS `call_value` from (`dw`.`vw_call` `c` left join `dw`.`reporting_group` `rg` on(((`c`.`client_id` = `rg`.`rg_clientid`) and (`c`.`reporting_group` = convert(`rg`.`rg_reportinggroup` using utf8mb4))))) group by `c`.`client_id`,`c`.`reporting_group`,`c`.`reporting_month`,coalesce(`c`.`call_category`,'Uncategorized')]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="DATE" />
			<column name="call_category" type="VARCHAR" />
			<column name="call_count" type="DECIMAL" />
			<column name="call_value" type="DECIMAL" />
		</view>
		<view name="xxxvw_facebook_ad" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `c`.`client_id` AS `client_id`,`c`.`client_description` AS `client_description`,coalesce(`rgw`.`rgw_reportinggroup`,`c`.`client_description`) AS `reporting_group`,date_format(cast(`fa`.`fbad_date_start` as date),'%Y-%m-01') AS `reporting_month`,`fa`.`fbad_campaign_name` AS `facebook_campaign`,`fa`.`fbad_age` AS `facebook_demo_age_group`,`fa`.`fbad_gender` AS `facebook_demo_gender`,`fa`.`fbad_date_start` AS `fbad_date_start`,`fa`.`fbad_like` AS `facebook_likes`,`fa`.`fbad_impressions` AS `facebook_impressions`,`fa`.`fbad_reach` AS `facebook_reach`,`fa`.`fbad_spend` AS `facebook_spend`,`fa`.`fbad_clicks` AS `facebook_clicks`,`fa`.`fbad_unique_clicks` AS `fbad_unique_clicks`,`fa`.`fbad_page_engagement` AS `fbad_page_engagement`,`fa`.`fbad_post_engagement` AS `fbad_post_engagement` from (((`dw`.`xxxfacebook_ad` `fa` left join `dw`.`vw_client` `cl` on((`fa`.`fbad_campaign_name` like convert(concat('%',`cl`.`client_id`,'-','%') using utf8mb4)))) left join `dw`.`vw_client` `c` on((coalesce(`cl`.`client_id`,'999') = `c`.`client_id`))) left join `dw`.`reporting_group_web` `rgw` on(((coalesce(`c`.`client_id`,'999') = `rgw`.`rgw_clientid`) and (`fa`.`fbad_campaign_name` like convert(`rgw`.`rgw_campaign` using utf8mb4)) and (`rgw`.`rgw_websystem` = 'Facebook'))))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="client_description" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="facebook_campaign" type="VARCHAR" />
			<column name="facebook_demo_age_group" type="VARCHAR" />
			<column name="facebook_demo_gender" type="VARCHAR" />
			<column name="fbad_date_start" type="DATE" />
			<column name="facebook_likes" type="INT" />
			<column name="facebook_impressions" type="BIGINT" />
			<column name="facebook_reach" type="INT" />
			<column name="facebook_spend" type="DECIMAL" />
			<column name="facebook_clicks" type="BIGINT" />
			<column name="fbad_unique_clicks" type="BIGINT" />
			<column name="fbad_page_engagement" type="INT" />
			<column name="fbad_post_engagement" type="INT" />
		</view>
		<view name="xxxvw_facebook_demographics" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `ads`.`client_id` AS `client_id`,`ads`.`reportinggroup` AS `reportinggroup`,`ag`.`fbad_reporting_month` AS `fbad_reporting_month`,`ag`.`fbad_age` AS `facebook_demo_age_group`,`ag`.`fbad_gender` AS `facebook_demo_gender`,`ag`.`fbad_like` AS `facebook_likes` from (`dw`.`facebook_ads` `ads` join `dw`.`facebook_metrics_agegender` `ag` on(((`ads`.`fbad_ad_id` = `ag`.`fbad_ad_id`) and (`ads`.`fbad_adset_id` = `ag`.`fbad_adset_id`) and (`ads`.`fbad_campaign_id` = `ag`.`fbad_campaign_id`))))]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reportinggroup" type="VARCHAR" />
			<column name="fbad_reporting_month" type="DATE" />
			<column name="facebook_demo_age_group" type="VARCHAR" />
			<column name="facebook_demo_gender" type="VARCHAR" />
			<column name="facebook_likes" type="INT" />
		</view>
		<view name="xxxvw_web_mor" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${fullName} AS select `vw_campaign`.`client_id` AS `client_id`,`vw_campaign`.`reporting_group` AS `reporting_group`,`vw_campaign`.`reporting_month` AS `reporting_month`,sum(`vw_campaign`.`Clicks`) AS `clicks`,sum(`vw_campaign`.`Cost`) AS `cost`,sum(`vw_campaign`.`Impressions`) AS `impressions`,sum(`vw_campaign`.`Likes`) AS `likes` from `dw`.`vw_campaign` where (`vw_campaign`.`Venel Paid` = 'No') group by `vw_campaign`.`client_id`,`vw_campaign`.`reporting_group`,`vw_campaign`.`reporting_month`]]></view_script>
			<column name="client_id" type="VARCHAR" />
			<column name="reporting_group" type="VARCHAR" />
			<column name="reporting_month" type="VARCHAR" />
			<column name="clicks" type="DECIMAL" />
			<column name="cost" type="DECIMAL" />
			<column name="impressions" type="DECIMAL" />
			<column name="likes" type="DECIMAL" />
		</view>
		<procedure name="PopulateDateDimension" id="Procedure-166d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `PopulateDateDimension`(BeginDate DATE, EndDate DATE)
BEGIN

 # =============================================
 # Description: http://arcanecode.com/2009/11/18/populating-a-kimball-date-dimension/
 # =============================================

 # A few notes, this code does nothing to the existing table, no deletes
 # are triggered before hand. Because the DateKey is uniquely indexed,
 # it will simply produce errors if you attempt to insert duplicates.
 # You can however adjust the Begin/End dates and rerun to safely add
 # new dates to the table every year.
 #
 # If the begin date is after the end date, no errors occur but nothing
 # happens as the while loop never executes.

 # Holds a flag so we can determine if the date is the last day of month
 DECLARE LastDayOfMon CHAR(1);

 # This is the counter used in our loop.
 DECLARE DateCounter DATE;    #Current date in loop
 # Start the counter at the begin date
 SET DateCounter = BeginDate;

 WHILE DateCounter <= EndDate DO
            # Set value for IsLastDayOfMonth
            IF MONTH(DateCounter) = MONTH(DATE_ADD(DateCounter, INTERVAL 1 DAY)) THEN
               SET LastDayOfMon = 'N';
            ELSE
               SET LastDayOfMon = 'Y';
			END IF;

            # add a record into the date dimension table for this date
            INSERT  INTO dim_date
					(date_key
					,full_date
					,date_name
					,date_name_us
					,date_name_eu
					,day_of_week
					,day_name_of_week
                    ,day_abbr_of_week
					,day_of_month
					,day_of_year
					,weekday_weekend
					,week_of_year
					,month_name
                    ,month_abbr
					,month_of_year
					,is_last_day_of_month
					,calendar_quarter
					,calendar_year
					,calendar_year_month
					,calendar_year_qtr
					,calendar_date_year_start
					,calendar_date_year_end
					,calendar_date_month_start 
					,calendar_date_month_end 
					,calendar_year_prev
					,calendar_year_prev_2
					,calendar_year_prev_3
					,calendar_year_prev_4
					,calendar_date_prev_full_year
					,calendar_date_prev_2_full_years
					,calendar_date_prev_3_full_years
					,calendar_date_prev_4_full_years
					,calendar_date_prev_13_full_months
 				   )
            VALUES  (
                      ( YEAR(DateCounter) * 10000 ) + ( MONTH(DateCounter)
                                                         * 100 )
                      + DAY(DateCounter)  #DateKey
                    , DateCounter # FullDate
                    , CONCAT(CAST(YEAR(DateCounter) AS CHAR(4)),'/',DATE_FORMAT(DateCounter,'%m'),'/',DATE_FORMAT(DateCounter,'%d')) #DateName
                    , CONCAT(DATE_FORMAT(DateCounter,'%m'),'/',DATE_FORMAT(DateCounter,'%d'),'/',CAST(YEAR(DateCounter) AS CHAR(4)))#DateNameUS
                    , CONCAT(DATE_FORMAT(DateCounter,'%d'),'/',DATE_FORMAT(DateCounter,'%m'),'/',CAST(YEAR(DateCounter) AS CHAR(4)))#DateNameEU
                    , DAYOFWEEK(DateCounter) #DayOfWeek
                    , DAYNAME(DateCounter) #DayNameOfWeek
                    , Date_format(DateCounter, '%a') #DayAbbrOfWeek
                    , DAYOFMONTH(DateCounter) #DayOfMonth
                    , DAYOFYEAR(DateCounter) #DayOfYear
                    , CASE DAYNAME(DateCounter)
                        WHEN 'Saturday' THEN 'Weekend'
                        WHEN 'Sunday' THEN 'Weekend'
                        ELSE 'Weekday'
                      END #WeekdayWeekend
                    , WEEKOFYEAR(DateCounter) #WeekOfYear
                    , MONTHNAME(DateCounter) #MonthName
                    , date_format(DateCounter, '%b') #MonthAbbr
                    , MONTH(DateCounter) #MonthOfYear
                    , LastDayOfMon #IsLastDayOfMonth
                    , QUARTER(DateCounter) #CalendarQuarter
                    , YEAR(DateCounter) #CalendarYear
                    , CONCAT(CAST(YEAR(DateCounter) AS CHAR(4)),'-',DATE_FORMAT(DateCounter,'%m')) #CalendarYearMonth
                    , CONCAT(CAST(YEAR(DateCounter) AS CHAR(4)),'Q',QUARTER(DateCounter)) #CalendarYearQtr
                    , adddate(DateCounter,INTERVAL -(dayofyear(DateCounter) )+1 DAY) #calendar_date_year_start
                    , adddate(adddate(DateCounter,INTERVAL -(dayofyear(DateCounter) ) DAY),INTERVAL 1 YEAR) #calendar_date_year_end
                    , adddate(DateCounter,INTERVAL -(dayofmonth(DateCounter) )+1 DAY) #calendar_date_month_start
                    , adddate(adddate(DateCounter,INTERVAL -(dayofmonth(DateCounter)) DAY), INTERVAL 1 MONTH) #calendar_date_month_end
                    , adddate(datecounter,INTERVAL -1 YEAR) #CalendarYear_prev
                    , adddate(datecounter,INTERVAL -2 YEAR) #CalendarYear_prev2
                    , adddate(datecounter,INTERVAL -3 YEAR) #CalendarYear_prev3
                    , adddate(datecounter,INTERVAL -4 YEAR) #CalendarYear_prev4
                    , adddate(adddate(DateCounter,INTERVAL -(dayofyear(DateCounter) )+1 DAY),INTERVAL -1 YEAR) #CalendarDate_prev
                    , adddate(adddate(DateCounter,INTERVAL -(dayofyear(DateCounter) )+1 DAY),INTERVAL -2 YEAR) #CalendarDate_prev2
                    , adddate(adddate(DateCounter,INTERVAL -(dayofyear(DateCounter) )+1 DAY),INTERVAL -3 YEAR) #CalendarDate_prev3
                    , adddate(adddate(DateCounter,INTERVAL -(dayofyear(DateCounter) )+1 DAY),INTERVAL -4 YEAR) #CalendarDate_prev4
                    , adddate(adddate(DateCounter,INTERVAL -(dayofmonth(DateCounter))+1 DAY),INTERVAL -13 MONTH) #CalendarDate_prev13_mon
                    );

            # Increment the date counter for next pass thru the loop
            SET DateCounter = DATE_ADD(DateCounter, INTERVAL 1 DAY);
      END WHILE;

END]]></string>
		</procedure>
		<procedure name="calendar_build" id="Procedure-1805" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `calendar_build`()
BEGIN
    DECLARE v_date date;
    declare v_edate date;
    
    SET v_date = '2010-01-01';
    WHILE v_date <= DATE(CONCAT(YEAR(CURDATE()),"-12-31")) DO
		SELECT cal_date INTO v_edate FROM calendar AS c	WHERE c.cal_date = v_date;
		if v_edate is null then
			INSERT INTO calendar (cal_date, cal_year, cal_month, cal_day, cal_startofmonth, cal_quarter, cal_monthabbr, cal_monthname, cal_dayname) 
			VALUES (v_date, year(v_date), month(v_date), day(v_date), DATE_FORMAT(v_date,'%Y-%m-01'), quarter(v_date), ucase(left(monthname(v_date),3)),monthname(v_date),dayname(v_date));
		end if;
        SET v_edate = null;
        SET v_date = DATE_ADD(v_date, INTERVAL 1 DAY);
    END WHILE;
END]]></string>
		</procedure>
		<procedure name="get_PaidExposure" id="Procedure-230c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_PaidExposure`(iv_clientid VARCHAR(5), iv_reportingmonth DATE)
BEGIN
	SELECT
		client.client_id,
		CASE WHEN instr(`Campaign`, 'Geoplacement')>0 or instr(`Campaign`, 'GeoTargeting')>0 THEN 'Geoplacement ™' ELSE c.`Channel_category` END Channel_Category,
		SUM(Impressions) Impressions,
		SUM(Reach) Reach,
		SUM(Clicks) Clicks,
        MIN(inv.inv_amount) as invoice_amount,
		SUM(planned_spend)/MIN(client.client_spend_pct) as budget_amount,
        SUM(planned_spend) as planned_spend,
		SUM(cc.`actual_spend`) AS `actual_spend`,
		SUM((CASE WHEN (cc.`campaign` LIKE '%venel%') THEN cc.`actual_spend` ELSE 0	END)) AS `venel_spend`,
		SUM((CASE WHEN (cc.`campaign` LIKE '%venel%') THEN 0	ELSE cc.`actual_spend`	END)) AS `client_spend`,
		(SUM(cc.`planned_spend`) - SUM((CASE	WHEN (cc.`campaign` LIKE '%venel%') THEN 0 ELSE cc.`actual_spend` END))) AS `variance`    
	FROM client_rg_cmpgn_config cc
    join client 
		on cc.client_id = client.client_id
	left join channel c
		on cc.channel = c.channel
	left join channel_category cctgry
		on cctgry.channel_category = CASE WHEN instr(`Campaign`, 'Geoplacement')>0 or  instr(`Campaign`, 'GeoTargeting')>0 THEN 'Geoplacement ™' ELSE c.`Channel_category` END
    left join (
					select
						c.channel_category,
						sum(line_amount) inv_amount
					from vw_invoices i
					join (select distinct channel_line_item_description, channel_category from channel) c
						on i.line_item_description = c.channel_line_item_description
					where i.inv_date =  iv_reportingmonth
						and i.client_id like iv_clientid
					group by
						c.channel_category
    ) inv
     on inv.channel_category = cctgry.channel_category
	WHERE reportinggroup like  iv_clientid
		AND reportingmonth =  iv_reportingmonth
		and (impressions >0 or planned_spend >0)
	GROUP BY
		client.client_id,
		CASE WHEN instr(`Campaign`, 'Geoplacement')>0 or instr(`Campaign`, 'GeoTargeting')>0 THEN 'Geoplacement ™' ELSE c.`Channel_category` END;
END]]></string>
		</procedure>
		<procedure name="get_campaign_amounts" id="Procedure-220c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_campaign_amounts`(
iv_client_id varchar(5),
iv_reportinggroup varchar(100),
iv_reportingmonth date
)
BEGIN
declare v_daysinmonth decimal(6,2);
declare v_dayspast decimal(6,2);
-- declare v_pctcomplete decimal(13,10);

if iv_reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01') then
	-- Get the number of days in the month
	 set v_daysinmonth = day(last_day(curdate()));
	-- Get the previous day
	 set v_dayspast = day(curdate())-1;
else
	-- Get the number of days in the month
	 set v_daysinmonth = day(last_day(iv_reportingmonth));
	-- Get the previous day
	 set v_dayspast = day(last_day(iv_reportingmonth));
end if;

-- select v_daysinmonth, v_dayspast;

	SELECT 
    c.client_id
    ,c.client_int_description
    , rg.rg_int_reportinggroup
    , b.channel
    , b.reportinggroup
    , b.reportingmonth
    , sum(actuals) actuals
    , sum(monthlybudget) monthlybudget
    , sum(plannedspend) plannedspend
    , sum(allocatedactuals) allocatedactuals
    , sum(abs(actuals))/v_dayspast avgdailyactspend
    , sum(plannedspend)/v_daysinmonth avgdailyplndspend
    ,(sum(abs(actuals))/v_dayspast) - (sum(plannedspend)/v_daysinmonth) spend_var
    ,((sum(abs(actuals))/v_dayspast) - (sum(plannedspend)/v_daysinmonth))/(sum(plannedspend)/v_daysinmonth) spend_var_pct
		, (sum(actuals)/v_dayspast)*v_daysinmonth projmonthlyspend    
FROM
    (SELECT 
        cs.channel,
            cs.client_id,
            cs.reporting_group reportinggroup,
            cs.reporting_month reportingmonth,
            - SUM(cs.cost) AS actuals,
            cast(0 as decimal(10,4)) as monthlybudget,
            cast(0 as decimal(10,4)) as plannedspend,
            cast(0 as decimal(10,4)) as allocatedactuals
    FROM
        dw.campaign_summary cs
	join dw.reporting_group rg
		on cs.reporting_month between rg.rg_startdate and rg.rg_enddate
		and rg.rg_clientid = cs.client_id
		and rg.rg_reportinggroup = cs.reporting_group
    WHERE
        cs.client_id LIKE iv_client_id
            AND cs.reporting_group LIKE iv_reportinggroup
            AND cs.reporting_month LIKE IF(iv_reportingmonth = '1900-01-01', cs.reporting_month, iv_reportingmonth)
    GROUP BY cs.client_id , cs.reporting_group , cs.reporting_month , cs.channel 
    UNION ALL 
    SELECT 
        'none',
            cb.client_id,
            cb.reportinggroup,
            cb.reportingmonth,
            0 as actuals,
            SUM(cb.monthlybudget) AS monthlybudget,
            0,
            0
    FROM
        dw.client_rg_mnthly_bdgt cb
	join dw.reporting_group rg
		on cb.reportingmonth between rg.rg_startdate and rg.rg_enddate        
        and rg.rg_clientid = cb.client_id
		and rg.rg_reportinggroup = cb.reportinggroup
	WHERE
        cb.client_id LIKE iv_client_id
            AND cb.reportinggroup LIKE iv_reportinggroup
            AND cb.reportingmonth LIKE IF(iv_reportingmonth = '1900-01-01', cb.reportingmonth, iv_reportingmonth)
    GROUP BY cb.client_id , cb.reportinggroup , cb.reportingmonth 
    UNION ALL 
    SELECT 
        channel,
            cs.client_id,
            cs.reportinggroup,
            cs.reportingmonth,
            0,
            0,
            SUM(cs.planned_spend) AS plannedspend,
            SUM(cs.actual_spend) as allocatedactuals
    FROM
        dw.vw_campaign_planned_spend cs
	join dw.reporting_group rg
		on cs.reportingmonth between rg.rg_startdate and rg.rg_enddate
		and rg.rg_clientid = cs.client_id
		and rg.rg_reportinggroup = cs.reportinggroup
    WHERE
        cs.client_id LIKE iv_client_id
            AND cs.reportinggroup LIKE iv_reportinggroup
            AND cs.reportingmonth LIKE IF(iv_reportingmonth = '1900-01-01', reportingmonth, iv_reportingmonth)
    GROUP BY cs.client_id , cs.reportinggroup , cs.reportingmonth , channel) b
        JOIN
    vw_client c ON b.client_id = c.client_id
        JOIN
    vw_reporting_group rg ON b.reportinggroup = rg.rg_reportinggroup
        AND b.client_id = rg.rg_clientid
	GROUP BY c.client_int_description, rg.rg_int_reportinggroup, b.channel, b.reportinggroup, b.reportingmonth
   HAVING sum(coalesce(plannedspend,0)) > 0 or sum(coalesce(actuals,0)) <> 0 or sum(coalesce(monthlybudget,0)) <> 0
  ;


END]]></string>
		</procedure>
		<procedure name="get_client_spend" id="Procedure-d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_client_spend`(iv_client_id varchar(5))
BEGIN
DROP TEMPORARY TABLE IF EXISTS _summary;
DROP TEMPORARY TABLE IF EXISTS _cc;
-- DROP TEMPORARY TABLE IF EXISTS _s;

create temporary table _cc as
select
	client_id
	,reportingmonth
	,sum(planned_spend) as planned_spend
    ,sum(case when campaign like '%venel%' then actual_spend else 0 end) as venel_spend
    ,sum(case when campaign like '%venel%' then 0 else actual_spend end) as client_spend
	,sum(actual_spend) as actual_spend
from client_rg_cmpgn_config 
where client_id = iv_client_id
group by 
	client_id
    ,reportingmonth;

create temporary table _summary as 
Select
	i.client_id
	,i.reporting_month reportingmonth
	,sum(i.line_amount) invoice_amount
    ,coalesce(c.planned_spend,0.00) as planned_spend
    ,coalesce(c.actual_spend,0.00) as actual_spend
    ,coalesce(c.client_spend,0.00) as client_spend
    ,coalesce(c.venel_spend,0.00) as venel_spend
from vw_invoices i
join _cc c 
	on i.client_id = c.client_id
    and i.reporting_month = c.reportingmonth
where i.client_id = iv_client_id
group by
i.client_id
,i.reporting_month;

-- update _summary s
-- join _cc c
-- 	on s.client_id = c.client_id
--     and s.reportingmonth = c.reportingmonth
-- set s.planned_spend = c.planned_spend
-- ,s.actual_spend = c.actual_spend;

-- Remove records that are already in _Summary
DELETE c
FROM _cc c join _summary s
on c.client_id = s.client_id
and c.reportingmonth = s.reportingmonth;

-- Insert records that are not in _Summary
INSERT INTO _summary
select 
	c.client_id
    ,c.reportingmonth
    ,0 as invoice_amount
    ,c.planned_spend
    ,c.actual_spend
    ,c.client_spend
    ,c.venel_spend
from _cc c;
																
select 
	s.client_id
    ,s.reportingmonth
    ,s.invoice_amount
    ,s.planned_spend
    ,actual_spend
    ,venel_spend
    ,client_spend
    ,s.invoice_amount * .85 as std_planned_spend
    ,coalesce(s.planned_spend,0) -  coalesce(s.invoice_amount * .85, 0) planned_spend_var
    ,coalesce(s.planned_spend,0) - s.client_spend act_planned_spend_var
    ,coalesce(s.invoice_amount * .85, 0) - s.client_spend std_act_planned_spend_var
from _summary s
join (select rg_clientid client_id, min(rg_startdate) startdate from reporting_group group by rg_clientid) rg
	on s.client_id = rg.client_id
where s.reportingmonth >= rg.startdate
and s.client_id = iv_client_id;
END]]></string>
		</procedure>
		<procedure name="get_client_spendv2" id="Procedure-598" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_client_spendv2`(
iv_client_id varchar(5),
iv_reportingmonth date)
BEGIN

DROP TEMPORARY TABLE IF EXISTS _s;
DROP TEMPORARY TABLE IF EXISTS _c;
-- Invoice
create temporary table _s
(
client_id varchar(5)
,reportinggroup varchar(255)
,reporting_month date
,description varchar(255)
,amount decimal(6,2)
,`type` varchar(20)
,`Invoice` decimal(6,2)
,`Budget` decimal(6,2)
,`Planned Spend` decimal(6,2)
,`Actual Spend` decimal(6,2)
,multiplier int
);

create temporary table _c
(
client_id varchar(5)
,reporting_month date
);

insert into _s
SELECT 
client_id
,'' reportinggroup
,reporting_month as reportingmonth
,line_description as description
,case when line_amount is null then 0 else line_amount end as amount
,'1 - Invoice' as `Type`
,case when line_amount is null then 0 else line_amount end
,0
,0
,0
,1
FROM dw.vw_invoices
where (reporting_month = iv_reportingmonth or iv_reportingmonth is null)
and client_id like iv_client_id and length(client_id) = 3;

-- Budget
insert into _s
SELECT 
    client_id
    ,reportinggroup
    ,reportingmonth
    ,'Budget Amount' AS description
    ,monthlybudget AS amount
    ,'2 - Budget' AS `Type`
,0
,monthlybudget
,0
,0    
    ,0
FROM
    client_rg_mnthly_bdgt
WHERE
    (reportingmonth = iv_reportingmonth or iv_reportingmonth is null)
and client_id like iv_client_id;

-- Planned Spend
insert into _s
SELECT 
    client_id
    ,reportinggroup
    ,reportingmonth
    ,CONCAT(channel, ' - ', campaign) AS description
    ,planned_spend AS amount
    ,'3 - Planned Spend' AS `Type`
,0
,0
,planned_spend
,0    
    ,0
FROM
    client_rg_cmpgn_config
WHERE
    (reportingmonth = iv_reportingmonth or iv_reportingmonth is null)
and client_id like iv_client_id;

-- Actual Spend
insert into _s
SELECT 
    client_id
    ,reportinggroup
    ,reportingmonth
    ,CONCAT(channel, ' - ', campaign) AS description
    ,CASE
        WHEN actual_spend IS NULL THEN 0
        ELSE actual_spend
    END AS amount
    ,'4 - Actual Spend' AS `Type`
,0
,0
,0
,CASE
        WHEN actual_spend IS NULL THEN 0
        ELSE actual_spend
    END   
 ,   -1
FROM
    client_rg_cmpgn_config
WHERE
    (reportingmonth = iv_reportingmonth or iv_reportingmonth is null)
and client_id like iv_client_id;

-- Remove clients that don't have invoice or actuals for a given month
insert into _c
select client_id, reporting_month from _s where type in('1 - Invoice', '4 - Actual Spend') group by client_id, reporting_month having sum(amount)<>0;

SELECT 
    _s.*, c.client_int_description
FROM
    _s
        JOIN
    vw_client c ON _s.client_id = c.client_id
        JOIN
    _c ON _c.client_id = _s.client_id and _c.reporting_month = _s.reporting_month;
    
    

drop temporary table _s;
drop temporary table _c;

END]]></string>
		</procedure>
		<procedure name="get_feedback_list_v7" id="Procedure-1c21" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_feedback_list_v7`(
IN iv_apptdatetime datetime
)
BEGIN
if iv_apptdatetime is null then
	set iv_apptdatetime = current_timestamp();
end if;
SELECT DISTINCT
    ptnt_id AS `patient_id`,
    CONCAT('+1',
            CASE
                WHEN ptnt_phone1_type = 'CP' THEN ptnt_phone1
                WHEN ptnt_phone2_type = 'CP' THEN ptnt_phone2
                WHEN ptnt_phone1_type = 'HM' THEN ptnt_phone1
                WHEN ptnt_phone2_type = 'HM' THEN ptnt_phone2
                ELSE NULL
            END) AS `to`,
    prctc.prctc_name AS `practice_name`,
    prvdr_url AS `provider_url`,
    CONCAT('Dr. ', prvdr_lastname) AS `provider_name`,
    prctc_from_phone AS `practice_from`,
    ptnt_firstname,
    ptnt_lastname,
    a.apptmnt_id,
    -- a.apptmnt_date,
    prctc.prctc_sye_url
FROM
    appointment a
        INNER JOIN
    appointment_activity aa ON a.apptmnt_id = aa.apptmnt_actvty_apptmnt_id    
        INNER JOIN
    provider p ON a.apptmnt_prvdr_id = p.prvdr_id
        INNER JOIN
    patient patient ON a.apptmnt_ptnt_id = patient.ptnt_id
        INNER JOIN
    department d ON a.apptmnt_dprtmnt_id = d.dprtmnt_id
        INNER JOIN
    practice prctc ON d.dprtmnt_prctc_id = prctc.prctc_id
  
        LEFT OUTER JOIN
    patient_activity pa ON pa.ptnt_actvty_ptnt_id = patient.ptnt_id
        LEFT OUTER JOIN
    patient_activity pa2 ON pa2.ptnt_actvty_ptnt_id = patient.ptnt_id and pa2.ptnt_actvty_apptmnt_id = a.apptmnt_id
        LEFT OUTER JOIN
    patient_activity pa3 ON pa3.ptnt_actvty_ptnt_id = patient.ptnt_id and pa3.ptnt_actvty_date >=(curdate() + interval -60 day)
WHERE
    apptmnt_date BETWEEN DATE(iv_apptdatetime) AND (DATE(iv_apptdatetime) + INTERVAL 1 DAY)
    -- This has been added for testing with Slocum
    AND ((prctc.prctc_id = 44 and ptnt_lastname = 'NextMD')  OR prctc.prctc_id != 44)
        AND prctc.prctc_active = 1
        AND d.dprtmnt_active = 1
        AND patient.ptnt_consenttotext in('U','true')
        and patient.ptnt_optout =0
        AND hour(date_add(now(), interval prctc.prctc_sye_tzo HOUR))>=8
        and CONCAT('+1',
            CASE
                WHEN ptnt_phone1_type = 'CP' THEN trim(ptnt_phone1)
                WHEN ptnt_phone1_type = 'HM' THEN trim(ptnt_phone1)
                WHEN ptnt_phone2_type = 'CP' THEN trim(ptnt_phone2)
                WHEN ptnt_phone2_type = 'HM' THEN trim(ptnt_phone2)
                ELSE NULL
            END) != '+10000000000'
		and length(CONCAT('+1',
            CASE
                WHEN ptnt_phone1_type = 'CP' THEN ptnt_phone1
                WHEN ptnt_phone2_type = 'CP' THEN ptnt_phone2
                WHEN ptnt_phone1_type = 'HM' THEN ptnt_phone1
                WHEN ptnt_phone2_type = 'HM' THEN ptnt_phone2
                ELSE NULL
            END)) =12
        -- and prctc.prctc_client_id ='431'
        AND 
        (
			UCASE(aa.apptmnt_actvty_type) = 'ARRIVED'
			OR UCASE(aa.apptmnt_actvty_type) = 'STARTED'
			OR UCASE(aa.apptmnt_actvty_type) = 'CHECKEDOUT'
			OR UCASE(aa.apptmnt_actvty_type) = 'KEPT'
			OR UCASE(aa.apptmnt_actvty_type) = 'OCCURRED'
            OR UCASE(aa.apptmnt_actvty_type) = 'CHECK-IN'
            OR UCASE(aa.apptmnt_actvty_type) = 'Inferred Complete'
            OR UCASE(aa.apptmnt_actvty_type) = 'CHECKED OUT'
            OR UCASE(aa.apptmnt_actvty_type) = 'CHECK OUT'
            OR UCASE(aa.apptmnt_actvty_type) ='Billed - Ready to Lock'
            OR UCASE(aa.apptmnt_actvty_type) = 'A'            
            OR UCASE(aa.apptmnt_actvty_type) = 'CHK'            
            OR UCASE(aa.apptmnt_actvty_type) = 'COMPLETED'            
            OR UCASE(aa.apptmnt_actvty_type) = 'COMPLETE'            
           --  OR UCASE(aa.apptmnt_actvty_type) = 'Pending'
		)
        AND prvdr_url IS NOT NULL
        AND prvdr_active = 1
        AND ptnt_consenttotext IN ('true' , 'U')
        AND (ptnt_phone1_type = 'CP'
        OR ptnt_phone1_type = 'HM'
        OR ptnt_phone2_type = 'HM'
        OR ptnt_phone2_type = 'CP')
        -- AND (pa.ptnt_actvty_ptnt_id IS NULL or (p.prvdr_id = '431' and pa2.ptnt_actvty_ptnt_id IS NULL  ))
        AND (pa.ptnt_actvty_ptnt_id IS NULL or 
        ((p.prvdr_textfrequency = 1 or prctc.prctc_textfrequency =1) and pa2.ptnt_actvty_ptnt_id IS NULL and pa3.ptnt_actvty_ptnt_id is null)
        ) and
         (apptmnt_date < (iv_apptdatetime - INTERVAL prctc.prctc_sye_lag HOUR + INTERVAL prctc.prctc_sye_tzo HOUR)
         and iv_apptdatetime <  addtime(cast(curdate() as datetime), PRCTC_SYE_ENDTIME - INTERVAL PRCTC_SYE_TZO HOUR)  )
;
    end]]></string>
		</procedure>
		<procedure name="get_google_contactme" id="Procedure-1458" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_google_contactme`(iv_review_id varchar(255))
BEGIN   
select 
	gr.reviewId,
	gr.`comment`,
	gr.reply_comment,
	`gcm`.`patient_first_name` AS `patient_first_name`,
	`gcm`.`patient_last_name` AS `patient_last_name`,
	`gcm`.`patient_dob` AS `patient_dob`,
	`gcm`.`patient_phone` AS `patient_phone`,
	`gcm`.`ggl_cntctme_id` AS `ggl_cntctme_id`,
    replace(gr.patientfeedback_nodeId,'*','') patientfeedback_nodeId
from vw_google_reviews gr
join google_contactme gcm on gr.reviewId = gcm.reviewId where gcm.reviewId = iv_review_id;
END]]></string>
		</procedure>
		<procedure name="get_mor_summary" id="Procedure-20b9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_mor_summary`(
IN iv_reporting_group varchar(255),
IN iv_reporting_month DATE,
IN iv_reporting_periods INT(11)
)
BEGIN
SELECT 
    cal.cal_reporting_month reporting_month,
    rg_reportinggroup reporting_group,
    SUM(coalesce(c_doc.call_count,0)) doc_count,
    SUM(coalesce(cpy_doc.call_count,0)) doc_py_count,
    SUM(coalesce(c_lky.call_count,0)) lky_count,
    SUM(coalesce(cpy_lky.call_count,0)) lky_py_count,
    SUM(coalesce(c_lst.call_count,0)) lst_count,
    SUM(coalesce(cpy_lst.call_count,0)) lst_py_count,
    SUM(coalesce(c_ttl.call_count,0)) ttl_count,
    SUM(coalesce(cpy_ttl.call_count,0)) ttl_py_count,
    
    SUM(coalesce(o.appointment_count,0)) appt_count,
    SUM(coalesce(opy.appointment_count,0)) appt_py_count,
    SUM(coalesce(o.referral_count,0)) ref_count,
    SUM(coalesce(opy.referral_count,0)) ref_py_count,
    SUM(coalesce(w.clicks,0)) web_clicks,
    SUM(coalesce(wpy.clicks,0)) web_py_clicks,
    SUM(coalesce(w.impressions,0)) web_impressions,
    SUM(coalesce(wpy.impressions,0)) web_py_impressions,
    
    
    SUM(COALESCE(c_doc.call_value, 0)) doc_value,
    SUM(coalesce(o.appointment_value,0)+coalesce(c_lky.call_value,0)) pot_value,
    SUM(COALESCE(cpy_doc.call_value, 0)) doc_py_value,
    SUM(coalesce(opy.appointment_value,0)+coalesce(cpy_lky.call_value,0)) pot_py_value,
    
    -- SUM(COALESCE(fp.fbpg_likes, 0)) facebook_pagelikes_count,
    
    SUM(COALESCE(ecom.recipients_count, 0)) ecomm_recipients_count,
    SUM(COALESCE(ecom.unique_opens_count, 0)) ecomm_opened_unique_count,
    SUM(COALESCE(ecom.clicks_count, 0)) ecomm_clicks_count,
    SUM(COALESCE(ecom.campaign_count,0)) ecomm_campaigns_count,
    SUM(COALESCE(ecom.open_rate,0)) ecomm_open_rate,

    SUM(COALESCE(ecompy.recipients_count, 0)) ecomm_py_recipients_count,
    SUM(COALESCE(ecompy.unique_opens_count, 0)) ecomm_py_opened_unique_count,
    SUM(COALESCE(ecompy.clicks_count, 0)) ecomm_py_clicks_count,
    SUM(COALESCE(ecompy.campaign_count,0)) ecomm_py_campaigns_count,
    SUM(COALESCE(ecompy.open_rate,0)) ecomm_py_open_rate,

    SUM(COALESCE(fbpst.post_count, 0)) fbpst_post_count,
    SUM(COALESCE(fbpst.likes_count, 0)) fbpst_likes_count,

    SUM(COALESCE(fbpstpy.post_count, 0)) fbpst_py_post_count,
    SUM(COALESCE(fbpstpy.likes_count, 0)) fbpst_py_likes_count,

    SUM(COALESCE(pg.likes, 0)) fbpg_likes_count,
    SUM(COALESCE(pg.start_likes, 0)) fbpg_start_likes_count

FROM
    vw_calendar_reporting_month cal
        JOIN
    vw_reporting_group rg
        LEFT OUTER JOIN
    call_mor c_doc ON c_doc.reporting_month = cal.cal_reporting_month
		AND c_doc.reporting_month >= rg.rg_reporting_startdate
        AND c_doc.reporting_group = rg.rg_reportinggroup
        AND c_doc.call_category = 'Documented Appointment'
        LEFT OUTER JOIN
    call_mor cpy_doc ON cpy_doc.reporting_month = cal.cal_reporting_month_py
		AND cpy_doc.reporting_month >= rg.rg_reporting_startdate
        AND cpy_doc.reporting_group = rg.rg_reportinggroup
        AND cpy_doc.call_category = 'Documented Appointment'
        LEFT OUTER JOIN
    call_mor c_lky ON c_lky.reporting_month = cal.cal_reporting_month
 		AND c_lky.reporting_month >= rg.rg_reporting_startdate
       AND c_lky.reporting_group = rg.rg_reportinggroup
        AND c_lky.call_category = 'Likely Appointment'
        LEFT OUTER JOIN
    call_mor cpy_lky ON cpy_lky.reporting_month = cal.cal_reporting_month_py
 		AND cpy_lky.reporting_month >= rg.rg_reporting_startdate    
        AND cpy_lky.reporting_group = rg.rg_reportinggroup
        AND cpy_lky.call_category = 'Likely Appointment'
        LEFT OUTER JOIN
    call_mor c_lst ON c_lst.reporting_month = cal.cal_reporting_month
 		AND c_lst.reporting_month >= rg.rg_reporting_startdate    
        AND c_lst.reporting_group = rg.rg_reportinggroup
        AND c_lst.call_category = 'Lost Prospective Appointment'
        LEFT OUTER JOIN
    call_mor cpy_lst ON cpy_lst.reporting_month = cal.cal_reporting_month_py
 		AND cpy_lst.reporting_month >= rg.rg_reporting_startdate    
        AND cpy_lst.reporting_group = rg.rg_reportinggroup
        AND cpy_lst.call_category = 'Lost Prospective Appointment'
        LEFT OUTER JOIN
        (select client_id, reporting_group, reporting_month, sum(call_count) call_count from call_mor where call_category != 'Not Valid' group by client_id, reporting_group, reporting_month)
     c_ttl ON c_ttl.reporting_month = cal.cal_reporting_month
 		AND c_ttl.reporting_month >= rg.rg_reporting_startdate    
     
        AND c_ttl.reporting_group = rg.rg_reportinggroup
        -- AND c_ttl.call_category != 'Not Valid'
        LEFT OUTER JOIN
        (select client_id, reporting_group, reporting_month, sum(call_count) call_count from call_mor where call_category != 'Not Valid' group by client_id, reporting_group, reporting_month)
     cpy_ttl ON cpy_ttl.reporting_month = cal.cal_reporting_month_py
 		AND cpy_ttl.reporting_month >= rg.rg_reporting_startdate         
        AND cpy_ttl.reporting_group = rg.rg_reportinggroup
        -- AND cpy_ttl.call_category != 'Not Valid'
        LEFT OUTER JOIN
    vw_online_mor o ON o.reporting_group = rg_reportinggroup
     		AND o.reporting_month >= rg.rg_reporting_startdate    
        AND o.reporting_month = cal.cal_reporting_month
        LEFT OUTER JOIN
    vw_online_mor opy ON opy.reporting_group = rg_reportinggroup
        AND opy.reporting_month = cal.cal_reporting_month_py
 		AND opy.reporting_month >= rg.rg_reporting_startdate    
        
        LEFT OUTER JOIN
    web_mor w ON w.reporting_group = rg_reportinggroup
        AND w.reporting_month = cal.cal_reporting_month
 		AND w.reporting_month >= rg.rg_reporting_startdate    
        LEFT OUTER JOIN
    web_mor wpy ON wpy.reporting_group = rg_reportinggroup
        AND wpy.reporting_month = cal.cal_reporting_month_py
 		AND wpy.reporting_month >= rg.rg_reporting_startdate    
        LEFT OUTER JOIN
        vw_ecommunication_mor ecom ON ecom.client_id = rg.rg_clientid
        AND ecom.reporting_group = rg.rg_reportinggroup
        AND ecom.reporting_month = cal.cal_reporting_month
 		AND ecom.reporting_month >= rg.rg_reporting_startdate            
        LEFT OUTER JOIN
        vw_ecommunication_mor ecompy ON ecompy.client_id = rg.rg_clientid
        AND ecompy.reporting_group = rg.rg_reportinggroup
        AND ecompy.reporting_month = cal.cal_reporting_month_py
 		AND ecompy.reporting_month >= rg.rg_reporting_startdate    
        
        LEFT OUTER JOIN
        vw_facebook_post_mor fbpst ON fbpst.clientid = rg.rg_clientid
        AND fbpst.reportinggroup = rg.rg_reportinggroup
        AND fbpst.reportingmonth = cal.cal_reporting_month
 		AND fbpst.reportingmonth >= rg.rg_reporting_startdate            
        LEFT OUTER JOIN
        vw_facebook_post_mor fbpstpy ON fbpstpy.clientid = rg.rg_clientid
        AND fbpstpy.reportinggroup = rg.rg_reportinggroup
        AND fbpstpy.reportingmonth = cal.cal_reporting_month_py
 		AND fbpstpy.reportingmonth >= rg.rg_reporting_startdate            
        LEFT OUTER JOIN
        vw_facebook_page_likes pg
        on pg.clientid = rg.rg_clientid
        and pg.reportingmonth = iv_reporting_month
        -- (select fbpg_clientid, fbpg_reportinggroup, sum(fbpg_likes) fbpg_likes, sum(fbpg_start_likes) fbpg_start_likes from facebook_page group by fbpg_clientid,fbpg_reportinggroup) pg on pg.fbpg_clientid = rg.rg_clientid
        -- AND pg.fbpg_reportinggroup = rg.rg_reportinggroup       
WHERE
    rg.rg_reportinggroup like iv_reporting_group
  AND cal.cal_reporting_month >= DATE_ADD(iv_reporting_month,INTERVAL -iv_reporting_periods MONTH)
 AND cal.cal_reporting_month <= iv_reporting_month
GROUP BY cal.cal_reporting_month , rg_reportinggroup
ORDER BY 1 DESC;
END]]></string>
		</procedure>
		<procedure name="get_providerreviewsummary" id="Procedure-1be5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_providerreviewsummary`(IN iv_clientid varchar(5))
BEGIN

DROP TEMPORARY TABLE IF EXISTS _prs;

create temporary table _prs (
testimonial_npi varchar(45),
provider_short_name varchar(100),
provider_order varchar(100),
ts varchar(100),
testimonial_source varchar(100),
testimonial_rating_count int,
rating decimal(10,5),
rating_total decimal(10,5),
is_public int
);

insert into _prs
select 
testimonial_npi,
provider_short_name,
case when provider_short_name = 'Other' then 'ZZZZZ' else provider_short_name end provider_order,
t.testimonial_source ts,
ts.source_ext_description testimonial_source,
sum(testimonial_rating_count) testimonial_rating_count,
sum(testimonial_rating_count * testimonial_rating)/sum(testimonial_rating_count) as rating,
sum(testimonial_rating_count * testimonial_rating) rating_total,
ts.source_ispublic
-- case when t.testimonial_source = 'Experience' or t.testimonial_source = 'External' then 0 else 1 end as is_public
from vw_testimonial t
join vw_provider p
on t.testimonial_npi = p.provider_npi
left join dw.testimonial_source ts
on t.testimonial_source = ts.source
left join provider_clientsite pc
on p.provider_npi = pc.npi
where testimonial_client_id = iv_clientid
and testimonial_published = 'Yes'
and provider_gender is null
-- and t.testimonial_source != 'Surgeon Reviews'
group by
testimonial_npi,
provider_short_name,
t.testimonial_source,
ts.source_ext_description,
ts.source_ispublic;
-- case when t.testimonial_source = 'Experience' or t.testimonial_source = 'External' then 0 else 1 end;

insert into _prs
select 
npi,
provider_short_name,
case when provider_short_name = 'Other' then 'ZZZZZ' else provider_short_name end provider_order,
'External' ts,
'External' testimonial_source,
sum(CAST(external_reviews AS decimal(10,0))) testimonial_rating_count,
sum(CAST((external_reviews * external_rating)/external_reviews AS DECIMAL(10,5))) as rating,
sum(external_reviews * external_rating) as total_rating,
0 as is_public
from vw_client_ext_reviews t
join vw_provider p
on t.npi = p.provider_npi
where t.client_id = iv_clientid
and provider_gender is null
group by npi, provider_short_name;

select * from _prs;

END]]></string>
		</procedure>
		<procedure name="get_review_summary" id="Procedure-1749" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_review_summary`(iv_clientid varchar(5))
BEGIN
-- set @iv_clientid = '482';


-- DROP TEMPORARY TABLE IF EXISTS _prs;
DROP TEMPORARY TABLE IF EXISTS _pr;

create temporary table _pr (
client_id varchar(5)
,listingid varchar(100)
,npi varchar(20)
,listing varchar(500)
,listing_order varchar(100)
,platform varchar(500)
-- ,client_startdate date
,listing_url varchar(500)
,latestreview date
,total_starrating int
,total_reviews int
,prevenel_starrating int
,prevenel_reviews int
,venel_starrating int
,venel_reviews int
,organic_starrating int
,organic_reviews int
);


insert into _pr
select 
	`client id` client_id
	,`GMB Location Id` listingid
    ,case when `Store Code` like '%-Practice%' then concat(`client_id`,'001') else p.provider_npi end npi
	,`Location Name` listing
    ,p.provider_last_name listing_order
	,concat('Google-',coalesce(`Store Code`,'No StoreCode')) platform
    -- ,client_startdate
	,`Search URL` listing_url
    ,MAX(cast(createTime as date)) latestreview
	,SUM(CAST(starRating as SIGNED)) total_starRating
	,COUNT(reviewId) total_reviews
    ,SUM((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate`) THEN null
            ELSE CAST(starRating as SIGNED)
        END)) AS prevenel_starrating
    ,COUNT((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate`) THEN null
            ELSE starRating
        END)) AS prevenel_reviews
    ,SUM((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating=5) THEN CAST(starRating as SIGNED)
	    ELSE null
        END)) AS venel_starrating
    ,COUNT((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating=5) THEN starRating
	    ELSE null
        END)) AS venel_reviews
    ,SUM((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating<5) THEN CAST(starRating as SIGNED)
	    ELSE null
        END)) AS organic_starrating
    ,COUNT((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating<5) THEN starRating
	    ELSE null
        END)) AS organic_reviews
from vw_google_locations gl
join vw_client c
on `client id` = c.client_id
left join google_review gr
on gl.`GMB Location Id` = gr.locationid
left join vw_provider p
	on p.provider_name = `Location Name`
where `client id` like iv_clientid
GROUP BY	
	client_id
	,`GMB Location Id`
    ,case when `Store Code` like '%-Practice%' then concat(`client_id`,'001') else p.provider_npi end
	,`Location Name`
	,`Store Code`
	,`Search URL`;

insert into _pr
select 
testimonial_client_id client_id
,testimonial_npi listingid
,testimonial_npi npi
,p.provider_name listing
,p.provider_last_name listing_order
-- case when provider_short_name = 'Other' then 'ZZZZZ' else provider_short_name end provider_order
-- t.testimonial_source ,
,ts.source platform
-- ,'2019-01-01' client_startdate
,concat('https://www.patientencounter.com/admin/reviews/all?field_provider_npi_value=',testimonial_npi ,'&field_publish_site_value=',ts.source_abbreviation) listing_url
,max(testimonial_creation_date) latestreview
,sum(case when ts.source_ext_description = 'Negative Reviews (Internal Only)' then 0 else testimonial_rating end) total_starrating
,sum(case when ts.source_ext_description = 'Negative Reviews (Internal Only)' then 0 else testimonial_rating_count end) total_reviews
,0 as prevenel_starrating
,0 as prevenel_reviews
,sum(testimonial_rating) venel_starrating
,sum(testimonial_rating_count) venel_reviews
,0 as organic_starrating
,0 as organic_reviews
from vw_testimonial t
join vw_provider p
on t.testimonial_npi = p.provider_npi
left join dw.testimonial_source ts
on t.testimonial_source = ts.source
left join provider_clientsite pc
on p.provider_npi = pc.npi
where testimonial_client_id like iv_clientid
and testimonial_published = 'Yes'
and provider_gender is null
and ts.source_ext_description != 'Patient Encounter (Internal Only)'
group by
testimonial_npi,
provider_short_name,
t.testimonial_source,
ts.source_ext_description,
ts.source_ispublic;


select 
_pr.* 
, CONCAT(CONVERT( `c`.`client_id` USING UTF8MB4),
    CONVERT( `c`.`client_description` USING UTF8MB4)) AS `Client Key`
, c.client_int_description
, c.client_description
, c.client_startdate
from _pr
left join vw_client c
on c.client_id = _pr.client_id
order by c.client_int_description, listing, platform ;
END]]></string>
		</procedure>
		<procedure name="get_reviews" id="Procedure-1f0e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_reviews`(iv_clientid varchar(5))
BEGIN
-- set @iv_clientid = '482';


-- DROP TEMPORARY TABLE IF EXISTS _prs;
DROP TEMPORARY TABLE IF EXISTS _pr;

create temporary table _pr (
client_id varchar(5)
,listingid varchar(100)
,npi varchar(20)
,listing varchar(500)
,listing_order varchar(100)
,platform varchar(500)
-- ,client_startdate date
,listing_url varchar(500)
,reviewdate date
,total_starrating int
,total_reviews int
,prevenel_starrating int
,prevenel_reviews int
,venel_starrating int
,venel_reviews int
,organic_starrating int
,organic_reviews int
);


insert into _pr
select 
	`client id` client_id
	,`GMB Location Id` listingid
    ,case when `Store Code` like '%-Practice%' then concat(`client_id`,'001') else p.provider_npi end npi
	,`Location Name` listing
    ,p.provider_last_name listing_order
	,concat('Google-',coalesce(`Store Code`,'No StoreCode')) platform
    -- ,client_startdate
	,`Search URL` listing_url
    ,cast(createTime as date) review_date
	,SUM(CAST(starRating as SIGNED)) total_starRating
	,COUNT(reviewId) total_reviews
    ,SUM((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate`) THEN null
            ELSE CAST(starRating as SIGNED)
        END)) AS prevenel_starrating
    ,COUNT((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate`) THEN null
            ELSE starRating
        END)) AS prevenel_reviews
    ,SUM((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating=5) THEN CAST(starRating as SIGNED)
	    ELSE null
        END)) AS venel_starrating
    ,COUNT((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating=5) THEN starRating
	    ELSE null
        END)) AS venel_reviews
    ,SUM((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating<5) THEN CAST(starRating as SIGNED)
	    ELSE null
        END)) AS organic_starrating
    ,COUNT((CASE
            WHEN (`gr`.`createTime` >= `c`.`client_startdate` and starRating<5) THEN starRating
	    ELSE null
        END)) AS organic_reviews
from vw_google_locations gl
join vw_client c
on `client id` = c.client_id
left join google_review gr
on gl.`GMB Location Id` = gr.locationid
left join vw_provider p
	on p.provider_name = `Location Name`
where `client id` like iv_clientid
GROUP BY	
	client_id
	,`GMB Location Id`
    ,case when `Store Code` like '%-Practice%' then concat(`client_id`,'001') else p.provider_npi end
    ,cast(createTime as date)
	,`Location Name`
	,`Store Code`
	,`Search URL`;

insert into _pr
select 
testimonial_client_id client_id
,testimonial_npi listingid
,testimonial_npi npi
,p.provider_name listing
,p.provider_last_name listing_order
-- case when provider_short_name = 'Other' then 'ZZZZZ' else provider_short_name end provider_order
-- t.testimonial_source ,
,ts.source platform
-- ,'2019-01-01' client_startdate
,concat('https://www.patientencounter.com/admin/reviews/all?field_provider_npi_value=',testimonial_npi ,'&field_publish_site_value=',ts.source_abbreviation) listing_url
,testimonial_creation_date review_date
,sum(case when ts.source_ext_description = 'Negative Reviews (Internal Only)' then 0 else testimonial_rating end) total_starrating
,sum(case when ts.source_ext_description = 'Negative Reviews (Internal Only)' then 0 else testimonial_rating_count end) total_reviews
,0 as prevenel_starrating
,0 as prevenel_reviews
,sum(testimonial_rating) venel_starrating
,sum(testimonial_rating_count) venel_reviews
,0 as organic_starrating
,0 as organic_reviews
from vw_testimonial t
join vw_provider p
on t.testimonial_npi = p.provider_npi
left join dw.testimonial_source ts
on t.testimonial_source = ts.source
left join provider_clientsite pc
on p.provider_npi = pc.npi
where testimonial_client_id like iv_clientid
and testimonial_published = 'Yes'
and provider_gender is null
and ts.source_ext_description != 'Patient Encounter (Internal Only)'
group by
testimonial_npi,
testimonial_creation_date,
provider_short_name,
t.testimonial_source,
ts.source_ext_description,
ts.source_ispublic;


select 
_pr.* 
, CONCAT(CONVERT( `c`.`client_id` USING UTF8MB4),
    CONVERT( `c`.`client_description` USING UTF8MB4)) AS `Client Key`
, c.client_int_description
, c.client_description
, c.client_startdate
from _pr
left join vw_client c
on c.client_id = _pr.client_id
order by c.client_int_description, listing, platform ;
END]]></string>
		</procedure>
		<procedure name="get_reviews_by_criteria" id="Procedure-96f" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_reviews_by_criteria`(
	iv_clientid varchar(5)
    , iv_npi varchar(20)
    , iv_startdate date
    , iv_enddate date)
BEGIN

declare v_clientid varchar(5);
declare v_npi varchar(20);
declare v_startdate date;
declare v_enddate date;

declare v_clientnpi varchar(20);
declare v_providerlastname varchar(100);
declare v_listing varchar(255);

set v_clientid = coalesce(iv_clientid,'%');
set v_npi = coalesce(iv_npi,'%');
set v_startdate = coalesce(iv_startdate,'1900-01-01');
set v_enddate = coalesce(iv_enddate,curdate());

-- This is used to lookup facebook reviews that include the providers name
if right(v_npi,3) = '001' THEN
	set v_clientid = left(v_npi,3);
	set v_clientnpi = v_npi;
    set v_providerlastname = '';
    set v_listing = '';
else
	select
		_client_id,
		concat(_client_id,'001'),
        provider_last_name,
        provider_name
	into
		v_clientid, v_clientnpi, v_providerlastname, v_listing
	from vw_provider
    where provider_npi = v_npi;
end if;

-- select v_clientnpi, v_providerlastname;

DROP TEMPORARY TABLE IF EXISTS _r;
DROP TEMPORARY TABLE IF EXISTS _ps;
DROP TEMPORARY TABLE IF EXISTS _rs;

create temporary table _r (
review_id int NOT NULL AUTO_INCREMENT
,clientid varchar(5)
,npi varchar(20)
,listing varchar(500)
,listingid varchar(100)
,listing_url varchar(500)
,platform varchar(50)
,source varchar(50)
,review_date date
,starrating int
,reviewer varchar(100)
,comment text
,  PRIMARY KEY (`review_id`)
);

create temporary table _ps (
clientid varchar(5)
,platform varchar(50)
,review_count int
,average_rating decimal(5,2)
);

create temporary table _rs (
clientid varchar(5)
,rating int
,review_count int
);

-- Get summary of client information           
	SELECT 
		client_name name
		,client_url URL
		,client_appointment_url Appointment_URL
		,client_review_url Review_URL
        ,client_logo_url Logo_URL
	 FROM dw.vw_client
	 WHERE client_id like v_clientid;

-- Capture Google Reviews
insert into _r
(
clientid
,npi
,listing
,listingid
,listing_url
,platform
,source
,review_date
,starrating
,reviewer
,comment
)
 SELECT 
        `dw`.`c`.`client_id` AS `clientid`,
        (CASE
            WHEN (`dw`.`gl`.`Store Code` LIKE '%-Practice%') THEN CONCAT(`dw`.`c`.`client_id`, '001')
            ELSE COALESCE(`p`.`npi`,
                    CONCAT(`dw`.`c`.`client_id`, '001'))
        END) AS `npi`,
        TRIM(`dw`.`gl`.`Location Name`) AS `listing`,
        `dw`.`gl`.`GMB Location Id` AS `listingid`,
        `dw`.`gl`.`Search URL` AS `listing_url`,
        'Google' AS `platform`,
        COALESCE(`dw`.`gl`.`Store Code`, 'No StoreCode') AS `source`,
        CAST(COALESCE(`gr`.`createTime`, '1900-01-01')
            AS DATE) AS `review_date`,
        CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `starrating`,
        `gr`.`reviewer_displayname` AS `reviewer`,
        `gr`.`comment` AS `comment`
    FROM
        (((`dw`.`vw_google_locations` `gl`
        JOIN `dw`.`vw_client` `c` ON ((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`)))
        LEFT JOIN `dw`.`google_review` `gr` ON ((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`)))
        LEFT JOIN `dw`.`provider` `p` ON ((`p`.`provider_name` = `dw`.`gl`.`Location Name`)))
	WHERE
    `dw`.`c`.`client_id` like v_clientid
    and (CASE
            WHEN (`dw`.`gl`.`Store Code` LIKE '%-Practice%') THEN CONCAT(`dw`.`c`.`client_id`, '001')
            ELSE COALESCE(`p`.`npi`,
                    CONCAT(`dw`.`c`.`client_id`, '001'))
        END) like v_npi
	and CAST(COALESCE(`gr`.`createTime`, '1900-01-01')
            AS DATE) between v_startdate and v_enddate;

-- Capture internal review
insert into _r
(
clientid
,npi
,listing
,listingid
,listing_url
,platform
,source
,review_date
,starrating
,reviewer
,comment
)
SELECT 
        `dw`.`c`.`client_id` AS `clientid`,
        `dw`.`t`.`testimonial_npi` AS `npi`,
        TRIM(`dw`.`p`.`provider_name`) AS `listing`,
        `dw`.`t`.`testimonial_npi` AS `listingid`,
        (CASE
            WHEN (`ts`.`source_sitepathurl` IS NULL) THEN `dw`.`p`.`provider_website_url`
            ELSE CONCAT(`ts`.`source_url`, `sp`.`path`)
        END) AS `listing_url`,
        (CASE
            WHEN (`ts`.`source` = 'Practice Site') THEN `dw`.`c`.`client_name`
            ELSE `ts`.`source_ext_description`
        END) AS `platform`,
        `ts`.`source` AS `source`,
        CAST(`dw`.`t`.`testimonial_creation_date` AS DATE) AS `review_date`,
        `dw`.`t`.`testimonial_rating` AS `starrating`,
        `dw`.`t`.`testimonial_reviewer_name` AS `reviewer`,
        `dw`.`t`.`testimonial_body` AS `comment`
    FROM
        (((((`dw`.`vw_testimonial` `t`
        JOIN `dw`.`vw_client` `c` ON ((`dw`.`t`.`testimonial_client_id` = `dw`.`c`.`client_id`)))
        JOIN `dw`.`vw_provider` `p` ON ((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`)))
        LEFT JOIN `dw`.`testimonial_source` `ts` ON ((`dw`.`t`.`testimonial_source` = `ts`.`source`)))
        LEFT JOIN `dw`.`provider_clientsite` `pc` ON ((`dw`.`p`.`provider_npi` = `pc`.`npi`)))
        LEFT JOIN `dw`.`provider_sitepath` `sp` ON (((`sp`.`source` = `ts`.`source_abbreviation`)
            AND (`sp`.`npi` = `dw`.`t`.`testimonial_npi`))))
    WHERE
        ((`dw`.`t`.`testimonial_client_id` LIKE '%')
            AND (`dw`.`t`.`testimonial_published` = 'Yes')
            AND (`dw`.`p`.`provider_gender` IS NULL)
            AND (`dw`.`t`.`testimonial_npi` like v_npi)
            and c.client_id like v_clientid
            and CAST(`dw`.`t`.`testimonial_creation_date` AS DATE) between v_startdate and v_enddate);

-- Create summary for internal reviews
insert into _ps
	SELECT
		clientid
		,platform
        ,COUNT(*)
        ,SUM(starrating * 1)/count(*)
    FROM _r
    GROUP BY
		platform;
        
insert into _r
(
clientid
,npi
,listing
,listingid
,listing_url
,platform
,source
,review_date
,starrating
,reviewer
,comment
)
	SELECT 
		prvdr._client_id client_id,
		p.npi,
		prvdr.provider_name as listing,
		p.npi as listingid,
		jr.source_url as listing_url,
		jr.source_name as platform,
		jr.source_name as source,
		r.date as review_date,
		r.rating_value as starrating,
		r.name as reviewer,
		r.review_text as comment
	FROM datashake.profile p
	join datashake.job_results jr
		on p.url = jr.source_url
	join datashake.reviews r
		on jr.job_id = r.job_id
	left join dw.vw_provider prvdr
		on p.npi = prvdr.provider_npi
	where prvdr._client_id like v_clientid
		and p.npi like v_npi
		and r.date between v_startdate and v_enddate
        and jr.last_crawl >= '2022-07-30';

-- Insert Facebook reviews        
insert into _r
(
clientid
,npi
,listing
,listingid
,listing_url
,platform
,source
,review_date
,starrating
,reviewer
,comment
)
	SELECT 
		coalesce(prvdr._client_id,left(v_clientnpi,3)) client_id,
		p.npi,
		coalesce(prvdr.provider_name, v_listing) as listing,
		p.npi as listingid,
		jr.source_url as listing_url,
		jr.source_name as platform,
		jr.source_name as source,
		r.date as review_date,
		r.rating_value as starrating,
		r.name as reviewer,
		r.review_text as comment
	FROM datashake.profile p
	join datashake.job_results jr
		on p.url = jr.source_url
	join datashake.reviews r
		on jr.job_id = r.job_id
	left join dw.vw_provider prvdr
		on p.npi = prvdr.provider_npi
	where p.npi like v_clientnpi
        and jr.source_name like'facebook' and r.review_text like concat('%',v_providerlastname,'%')
		and r.date between v_startdate and v_enddate;

insert into _ps
	SELECT
		v_clientid
		,source_name
        ,sum(latest_review_count)
        ,sum(latest_review_count * latest_average_rating)/sum(latest_review_count)
    FROM datashake.profile p
    WHERE p.url in(select listing_url from _r)
    GROUP BY
		source_name;
        
insert into _rs
	SELECT
		clientid
		,starrating
        ,COUNT(*)
    FROM _r
    where starrating >0
    GROUP BY
		starrating;             

select * from _ps;
select * from _r where coalesce(comment,'External Review') != 'External Review' and starrating >0;
select * from _rs;


DROP TEMPORARY TABLE IF EXISTS _r;
DROP TEMPORARY TABLE IF EXISTS _ps;
DROP TEMPORARY TABLE IF EXISTS _rs;


END]]></string>
		</procedure>
		<procedure name="get_testimonial_audit" id="Procedure-25f2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `get_testimonial_audit`(iv_client_id varchar(5), iv_npi varchar(20))
BEGIN

drop temporary table if exists _testimonial_audit;

-- Build for output
CREATE TEMPORARY TABLE _testimonial_audit
(client_id varchar(5)
,unique_review_id varchar(15)
,reviewer_email varchar(200)
,reviewer_name varchar(500)
,creation_date DATETIME
,npi varchar(50)
,issue varchar(500)
);

-- Exists on Practice Site but not on Patient Encounter
insert into _testimonial_audit 
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Practice site not found in Patient Encounter' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
and b.source = 'Patient Encounter'
and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Practice Site'
and b.unique_review_id is null;

-- Exists on Doctor Reviews but not on Patient Encounter
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Doctor Reviews site not found in Patient Encounter' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
and b.source = 'Patient Encounter'
and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Doctor Reviews'
and b.unique_review_id is null;

-- Exists on Ortho Reviews but not on Patient Encounter
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Ortho Reviews site not found in Patient Encounter' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
and b.source = 'Patient Encounter'
and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Ortho Reviews'
and b.unique_review_id is null;

-- Exists on Ortho Reviews but not on Patient Encounter
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Surgeon Reviews site not found in Patient Encounter' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
and b.source = 'Patient Encounter'
and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Surgeon Reviews'
and b.unique_review_id is null;

-- Exists on Ortho Reviews but not on Patient Encounter
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Regenerative Medicine Doctor Reviews site not found in Patient Encounter' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
and b.source = 'Patient Encounter'
and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Regenerative Medicine Doctor Reviews'
and b.unique_review_id is null;

-- select distinct source from testimonial;

-- Exists on Patient Encounter does not exist on Practice Site
insert into _testimonial_audit
SELECT a.practice_id as client_id,a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Patient Encounter not found on Practice Site' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
	and b.source = 'Practice Site'
    and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.source = 'Patient Encounter'
and a.npi like iv_npi
and JSON_SEARCH(`a`.`published_to`, 'one', 'practice') IS NOT NULL
and b.unique_review_id is null;

-- Exists on Patient Encounter does not exist on Doctor Reviews
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Patient Encounter not found on Doctor Reviews' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
	and b.source = 'Doctor Reviews'
    and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Patient Encounter'
and JSON_SEARCH(`a`.`published_to`, 'one', 'dr') IS NOT NULL
and b.unique_review_id is null;

-- Exists on Patient Encounter does not exist on Ortho Reviews
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Patient Encounter not found on Ortho Reviews' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
	and b.source = 'Ortho Reviews'
    and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Patient Encounter'
and JSON_SEARCH(`a`.`published_to`, 'one', 'or') IS NOT NULL
and b.unique_review_id is null;

-- Exists on Patient Encounter does not exist on Surgeon Reviews
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Patient Encounter not found on Surgeon Reviews' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
	and b.source = 'Surgeon Reviews'
    and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Patient Encounter'
and JSON_SEARCH(`a`.`published_to`, 'one', 'sr') IS NOT NULL
and b.unique_review_id is null;

-- Exists on Patient Encounter does not exist on Regenerative Medicine Doctor Reviews
insert into _testimonial_audit
SELECT a.practice_id as client_id, a.unique_review_id, a.reviewer_email, a.reviewer_name, a.creation_date, a.npi
, 'On Patient Encounter not found on Regenerative Medicine Doctor Reviews' as issue
FROM dw.testimonial a
left join dw.testimonial b
on a.unique_review_id = b.unique_review_id
	and b.source = 'Regenerative Medicine Doctor Reviews'
    and b.practice_id = a.practice_id
where a.practice_id like iv_client_id
and a.npi like iv_npi
and a.source = 'Patient Encounter'
and JSON_SEARCH(`a`.`published_to`, 'one', 'rm') IS NOT NULL
and b.unique_review_id is null;



-- Regenerative Medicine Doctor Reviews

SELECT 
    ta.*,c.client_int_description, p.provider_short_name as `provider(PE)`,pc.full_name_including_credentials as `provider(CS)`
FROM
    _testimonial_audit ta
    left join vw_provider p
    on ta.npi = p.provider_npi
    left join provider_clientsite pc
    on ta.npi = pc.npi
    left join vw_client c
    on ta.client_id = c.client_id;

drop temporary table _testimonial_audit;

END]]></string>
		</procedure>
		<procedure name="insert_testimonials" id="Procedure-c30" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `insert_testimonials`(
IN iv_body text,
IN iv_review_rating varchar(45),
IN iv_permission_to_share varchar(45),
IN iv_reviewer_name varchar(500),
IN iv_reviewer_email varchar(500),
IN iv_message_tone varchar(45),
IN iv_sentiment_score varchar(45),
IN iv_practice_id varchar(45),
IN iv_npi varchar(45),
IN iv_creation_date varchar(45),
IN iv_published varchar(45),
IN iv_unique_review_id varchar(250),
IN iv_source varchar(45)
)
BEGIN
INSERT INTO testimonials
(
body,
review_rating,
permission_to_share,
reviewer_name,
reviewer_email,
message_tone,
sentiment_score,
practice_id,
npi,
creation_date,
published,
unique_review_id,
`source`
)
values
(
iv_body,
iv_review_rating,
iv_permission_to_share,
iv_reviewer_name,
iv_reviewer_email,
iv_message_tone,
iv_sentiment_score,
iv_practice_id,
iv_npi,
iv_creation_date,
iv_published,
iv_unique_review_id,
iv_source
);
END]]></string>
		</procedure>
		<procedure name="sp_pbi_calls" id="Procedure-730" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `sp_pbi_calls`()
BEGIN
	CREATE TABLE dm.tbl_pbi_calls
    SELECT 
        CONCAT(`c`.`client_id`, `c`.`reporting_group`) AS `Client Key`,
        `c`.`client_id` AS `client_id`,
        `c`.`reporting_group` AS `reporting_group`,
        `c`.`reporting_month` AS `reporting_month`,
        `c`.`call_category` AS `Call Category`,
        `c`.`call_subcategory` AS `Call Subcategory`,
        `c`.`channel` AS `channel`,
        `c`.`call_source` AS `Call Source`,
        SUM(`c`.`call_count`) AS `call_count`
    FROM
        `vw_call` `c`
    WHERE
        (`c`.`reporting_month` >= (DATE_FORMAT(CURDATE(), '%y-%m-01') + INTERVAL -(2) YEAR))
    GROUP BY CONCAT(`c`.`client_id`, `c`.`reporting_group`) , `c`.`client_id` , `c`.`reporting_group` , `c`.`reporting_month` , `c`.`call_category` , `c`.`call_subcategory` , `c`.`channel` , `c`.`call_source`;
END]]></string>
		</procedure>
		<procedure name="update_appointments_email" id="Procedure-16a6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_appointments_email`(IN iv_reportingmonth DATE)
BEGIN
	-- declare v_reportingmonth date;
    if iv_reportingmonth is null then
		set iv_reportingmonth = DATE_ADD(DATE_FORMAT(curdate(), '%Y-%m-01'), INTERVAL -1 MONTH);
	end if;

	select iv_reportingmonth;

	DROP TEMPORARY TABLE IF EXISTS appts;
	DROP TEMPORARY TABLE IF EXISTS refs;
	DROP TEMPORARY TABLE IF EXISTS cancels;
	DROP TEMPORARY TABLE IF EXISTS rescheds;
    
	-- Summarize appointments
	CREATE TEMPORARY TABLE appts AS (
	select
	c.client_id client_id,
	DATE_FORMAT(ae_appt.receivedDateTime, '%Y-%m-01') reportingmonth,
	count(ae_appt.id) appointments
	from `client` c
	left join appointment_email ae_appt
	on ae_appt.subject like concat(c.client_id, ' Patient Appointment%')
		or ae_appt.subject like c.`Email Subject - Appt Request`
	where c.client_status = 'Active'
	and DATE_FORMAT(ae_appt.receivedDateTime, '%Y-%m-01') = iv_reportingmonth
	group by c.client_id
	having count(ae_appt.id)>0);

	select * from appts;
    
	-- Summarize Referrals
	CREATE TEMPORARY TABLE refs AS (
	select
	c.client_id client_id,
	DATE_FORMAT(ae_ref.receivedDateTime, '%Y-%m-01') reportingmonth,
	count(ae_ref.id) referrals
	from `client` c
	left join appointment_email ae_ref
	on ae_ref.subject like concat(c.client_id, ' Patient Referral')
		or ae_ref.subject like c.`Email Subject - Referral Request`    
	where c.client_status = 'Active'
	and DATE_FORMAT(ae_ref.receivedDateTime, '%Y-%m-01') = iv_reportingmonth
	group by c.client_id
	having count(ae_ref.id)>0);
    
    select * from refs;
    
	-- Summarize cancelations
	CREATE TEMPORARY TABLE cancels AS (
	select
	c.client_id client_id,
	DATE_FORMAT(ae_ref.receivedDateTime, '%Y-%m-01') reportingmonth,
	count(ae_ref.id) cancels
	from `client` c
	left join appointment_email ae_ref
	on ae_ref.subject like concat(c.client_id, '%cancel%')
		-- or ae_ref.subject like c.`Email Subject - Referral Request`    
	where c.client_status = 'Active'
	and DATE_FORMAT(ae_ref.receivedDateTime, '%Y-%m-01') = iv_reportingmonth
	group by c.client_id
	having count(ae_ref.id)>0);
    
    select * from cancels;
    
	-- Summarize reschedules
	CREATE TEMPORARY TABLE rescheds AS (
	select
	c.client_id client_id,
	DATE_FORMAT(ae_ref.receivedDateTime, '%Y-%m-01') reportingmonth,
	count(ae_ref.id) rescheds
	from `client` c
	left join appointment_email ae_ref
	on ae_ref.subject like concat(c.client_id, '%reschedule%')
		-- or ae_ref.subject like c.`Email Subject - Referral Request`    
	where c.client_status = 'Active'
	and DATE_FORMAT(ae_ref.receivedDateTime, '%Y-%m-01') = iv_reportingmonth
	group by c.client_id
	having count(ae_ref.id)>0);    
    
    select * from rescheds;

	delete from online_appointment_email where oae_date = iv_reportingmonth and oae_source = 'Email';

	insert into online_appointment_email
	(oae_clientid, oae_date, oae_appointment, oae_referral, oae_source)
	select
		c.client_id,
		iv_reportingmonth,
		0,
		0,
		'Email'
	from client c
	where c.client_status = 'Active';
    
	-- Update Appointment count
	update online_appointment_email oae 
	join appts a 
		on oae.oae_clientid = a.client_id 
		and oae_date = a.reportingmonth
	set oae.oae_appointment = a.appointments
    where oae_source = 'Email';
    
	-- Update referral count
	update online_appointment_email oae 
	join refs a 
		on oae.oae_clientid = a.client_id 
		and oae_date = a.reportingmonth
	set oae.oae_referral = a.referrals
    where oae_source = 'Email';
    
    -- Update cancel count
	update online_appointment_email oae 
	join cancels a 
		on oae.oae_clientid = a.client_id 
		and oae_date = a.reportingmonth
	set oae.oae_cancel = a.cancels
    where oae_source = 'Email';

    -- Update reschedule count
	update online_appointment_email oae 
	join rescheds a 
		on oae.oae_clientid = a.client_id 
		and oae_date = a.reportingmonth
	set oae.oae_reschedule = a.rescheds
    where oae_source = 'Email';


	DROP TEMPORARY TABLE IF EXISTS appts;
	DROP TEMPORARY TABLE IF EXISTS refs;
	DROP TEMPORARY TABLE IF EXISTS cancels;
	DROP TEMPORARY TABLE IF EXISTS rescheds;

END]]></string>
		</procedure>
		<procedure name="update_call_mor" id="Procedure-b86" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_call_mor`(IN iv_reportingmonth date, IN iv_client_id varchar(5))
BEGIN
	declare v_reportingmonth DATE;
    declare v_client_id varchar(5);
    
	/*** This will set the reportingmonth ***/
	IF iv_reportingmonth is null THEN
		set v_reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01');
	ELSE
		set v_reportingmonth = DATE_FORMAT(iv_reportingmonth, '%Y-%m-01');			
	END IF;
        
    IF iv_client_id is null then
		set v_client_id = '%';
	ELSE
		set v_client_id = iv_client_id;
	END IF;

	DELETE FROM dw.call_mor WHERE client_id like v_client_id and reporting_month = v_reportingmonth;
	INSERT INTO dw.call_mor
    SELECT 
        `c`.`client_id` AS `client_id`,
        `c`.`reporting_group` AS `reporting_group`,
        `c`.`reporting_month` AS `reporting_month`,
        COALESCE(`c`.`call_category`, 'Uncategorized') AS `call_category`,
        SUM(COALESCE(`c`.`call_count`, 0)) AS `call_count`,
        SUM((COALESCE(`c`.`call_count`, 0) * `rg`.`rg_valueofnewpatient`)) AS `call_value`
FROM dw.vw_call c 
left join dw.reporting_group rg
	on c.client_id = rg.rg_clientid
	and c.reporting_group = rg.rg_reportinggroup
where client_id like  v_client_id and reporting_month = v_reportingmonth
group by
	`c`.`client_id`,
        `c`.`reporting_group`,
        `c`.`reporting_month`,
        COALESCE(`c`.`call_category`, 'Uncategorized');
-- 	SELECT * FROM dw.vw_call_mor WHERE client_id like v_client_id and reporting_month = v_reportingmonth;
END]]></string>
		</procedure>
		<procedure name="update_campaign_summary" id="Procedure-70e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_campaign_summary`(IN iv_reportingmonth date, IN iv_client_id varchar(5))
BEGIN

		declare v_reportingmonth DATE;
    declare v_client_id varchar(5);
    
		/*** This will set the reportingmonth ***/
		IF iv_reportingmonth is null THEN
			set v_reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01');
		ELSE
			set v_reportingmonth = DATE_FORMAT(iv_reportingmonth, '%Y-%m-01');			
		END IF;
    
    IF iv_client_id is null then
			set v_client_id = '%';
		ELSE
			set v_client_id = iv_client_id;
		END IF;

CREATE TEMPORARY TABLE tmp_CS
(
  `client_id` varchar(5)  DEFAULT NULL,
  `reporting_group` varchar(508)  DEFAULT NULL,
  -- `Venel Paid` varchar(3)  NOT NULL DEFAULT '',
  -- `GeoPlacement` varchar(3)  NOT NULL DEFAULT '',
  `reporting_month` varchar(10)  DEFAULT NULL,
  `campaign_name` varchar(255) DEFAULT NULL,
  `campaign_start` datetime DEFAULT NULL,
  `campaign_end` datetime DEFAULT NULL,
  `Device` varchar(50) NOT NULL DEFAULT '',
  `Channel` varchar(11)  NOT NULL DEFAULT '',
  `Impressions` decimal(41,0) DEFAULT 0,
  `Clicks` decimal(41,0) DEFAULT 0,
  `Cost` decimal(36,4) DEFAULT 0,
  `Likes` decimal(32,0) DEFAULT 0,
  `Comments` decimal(32,0) DEFAULT 0
);

insert into tmp_cs
SELECT 
            `g`.`client_id` AS `client_id`,
                `g`.`reportinggroup` AS `reporting_group`,
                `g`.`ggl_month` AS `reporting_month`,
                `g`.`ggl_campaign` AS `campaign_name`,
                MIN(`g`.`ggl_month`) AS `campaign_start`,
                MAX(`g`.`ggl_month`) AS `campaign_end`,
                COALESCE(`g`.`ggl_device`, 'Unknown') AS `device`,
                'Google' AS `channel`,
                SUM(`g`.`ggl_impressions`) AS `impressions`,
                SUM(`g`.`ggl_clicks`) AS `clicks`,
                SUM((`g`.`ggl_cost` / 1000000)) AS `cost`,
                0 AS `likes`,
                0 AS `comments`
        FROM
            `dw`.`google_ad` `g`
				WHERE 
        client_id like v_client_id
        and ggl_month = v_reportingmonth
        GROUP BY client_id , `g`.`ggl_month` , `g`.`ggl_campaign` , COALESCE(`g`.`ggl_device`, 'Unknown');
        
insert into tmp_cs
SELECT 
            `gt`.`client_id` AS `client_id`,
                `gt`.`reportinggroup` AS `reporting_group`,
                DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') AS `reporting_month`,
                `gt`.`gt_cmpgn_name` AS `campaign_name`,
                MIN(`gt`.`gt_cmpgn_start_date`) AS `campaign_start`,
                MAX(`gt`.`gt_cmpgn_end_date`) AS `campaign_end`,
                'mobile' AS `device`,
                'GroundTruth' AS `channel`,
                SUM(`gt`.`gt_impressions`) AS `impressions`,
                SUM(`gt`.`gt_clicks`) AS `clicks`,
                SUM(`gt`.`gt_spend`) AS `spend`,
                0 AS `Likes`,
                0 AS `Comments`
        FROM
            `dw`.`groundtruth` `gt`
				WHERE client_id like v_client_id
        and DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') = v_reportingmonth
        GROUP BY `gt`.`client_id` , `gt`.`reportinggroup` , DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') , `gt`.`gt_cmpgn_name`;
        
INSERT INTO tmp_cs
SELECT 
            `ads`.`client_id` AS `client_id`,
                `ads`.`reportinggroup` AS `reporting_group`,
                `ads`.`bng_month` AS `reporting_month`,
                `ads`.`bng_campaignname` AS `campaign_name`,
                MIN(`ads`.`bng_month`) AS `start_date`,
                MAX(`ads`.`bng_month`) AS `stop_date`,
                `ads`.`bng_devicetype` AS `device`,
                'Bing' AS `channel`,
                SUM(`ads`.`bng_impressions`) AS `impressions`,
                SUM(`ads`.`bng_clicks`) AS `clicks`,
                SUM(`ads`.`bng_spend`) AS `spend`,
                0 AS `likes`,
                0 AS `comments`
        FROM
            `dw`.`bing_ad` `ads`
				WHERE client_id like v_client_id
        AND bng_month = v_reportingmonth
        GROUP BY `ads`.`client_id` , `ads`.`reportinggroup` , `ads`.`bng_month` , `ads`.`bng_campaignname` , `ads`.`bng_devicetype`;

INSERT INTO tmp_cs
SELECT 
            `vw_eltoro_ads`.`client_id` AS `client_id`,
                `vw_eltoro_ads`.`reporting_group` AS `reporting_group`,
                `vw_eltoro_ads`.`reporting_month` AS `reporting_month`,
                `vw_eltoro_ads`.`campaign_name` AS `campaign_name`,
                MIN(`vw_eltoro_ads`.`start_date`) AS `start_date`,
                MAX(`vw_eltoro_ads`.`stop_date`) AS `stop_date`,
                `vw_eltoro_ads`.`device` AS `device`,
                'El Toro' AS `channel`,
                SUM(`vw_eltoro_ads`.`impressions`) AS `impressions`,
                SUM(`vw_eltoro_ads`.`clicks`) AS `clicks`,
                SUM(`vw_eltoro_ads`.`spend`) AS `spend`,
                SUM(`vw_eltoro_ads`.`Likes`) AS `likes`,
                SUM(`vw_eltoro_ads`.`Comments`) AS `comments`
        FROM
            `dw`.`vw_eltoro_ads`
				WHERE client_id like v_client_id
        and reporting_month = v_reportingmonth
        GROUP BY `vw_eltoro_ads`.`client_id` , `vw_eltoro_ads`.`reporting_group` , `vw_eltoro_ads`.`reporting_month` , `vw_eltoro_ads`.`campaign_name` , `vw_eltoro_ads`.`device`;
 
INSERT INTO tmp_CS
SELECT 
            `fbad`.`client_id` AS `client_id`,
                `fbad`.`reporting_group` AS `reporting_group`,
                `fbad`.`reporting_month` AS `reporting_month`,
                `fbad`.`campaign_name` AS `campaign_name`,
                MIN(`fbad`.`start_date`) AS `start_date`,
                MAX(`fbad`.`stop_date`) AS `stop_date`,
                `fbad`.`device` AS `device`,
                'Facebook' AS `channel`,
                SUM(`fbad`.`impressions`) AS `impressions`,
                SUM(`fbad`.`unique_clicks`) AS `clicks`,
                SUM(`fbad`.`spend`) AS `spend`,
                SUM(`fbad`.`likes`) AS `likes`,
                SUM(`fbad`.`comments`) AS `comments`
        FROM
            `dw`.`vw_facebook_ads_device` `fbad`
        WHERE
            (NOT ((LEFT(`fbad`.`campaign_name`, 5) LIKE 'Post:')))
				AND client_id like v_client_id
        AND reporting_month = v_reportingmonth
        GROUP BY `fbad`.`client_id` , `fbad`.`reporting_group` , `fbad`.`reporting_group` , `fbad`.`reporting_month` , `fbad`.`campaign_name` , `fbad`.`device`;
 
 
SELECT 
        COALESCE(`c`.`client_id`, '999') AS `client_id`,
        RTRIM(COALESCE(`w`.`reporting_group`,
                        `rgw`.`rgw_reportinggroup`,
                        `c`.`client_description`,
                        '999 - Unknown')) AS `reporting_group`,
        (CASE
            WHEN (`w`.`campaign_name` LIKE '%Venel%') THEN 'Yes'
            ELSE 'No'
        END) AS `Venel Paid`,
        (CASE
            WHEN (`w`.`channel` = 'GroundTruth') THEN 'Yes'
            WHEN (`w`.`channel` = 'El Toro') THEN 'Yes'
            WHEN
                ((`w`.`channel` = 'Facebook')
                    AND (`w`.`campaign_name` LIKE '%Geoplacement%'))
            THEN
                'Yes'
            ELSE 'No'
        END) AS `GeoPlacement`,
        `w`.`reporting_month` AS `reporting_month`,
        `w`.`campaign_name` AS `Campaign Name`,
        `w`.`campaign_start` AS `campaign_start`,
        `w`.`campaign_end` AS `campaign_end`,
        COALESCE(`d`.`device`, `w`.`device`, 'Unknown') AS `Device`,
        `w`.`channel` AS `Channel`,
        `w`.`impressions` AS `Impressions`,
        `w`.`clicks` AS `Clicks`,
        `w`.`cost` AS `Cost`,
        `w`.`likes` AS `Likes`,
        `w`.`comments` AS `Comments`
FROM tmp_CS w
LEFT JOIN `dw`.`reporting_group_web` `rgw` ON (((`w`.`client_id` =  `rgw`.`rgw_clientid` )
            AND (`w`.`campaign_name` LIKE `rgw`.`rgw_campaign`)
            AND (`w`.`channel` = `rgw`.`rgw_websystem`)))
        LEFT JOIN `dw`.`vw_client` `c` ON ((`w`.`client_id` = `c`.`client_id`))
        LEFT JOIN `dw`.`device_mapping` `d` ON ((`d`.`device_source` = `w`.`device`));



drop table tmp_CS;
END]]></string>
		</procedure>
		<procedure name="update_campaign_summarybydate" id="Procedure-5b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_campaign_summarybydate`(IN iv_reportingmonth date, IN iv_client_id varchar(5))
BEGIN
	declare v_reportingmonth DATE;
	declare v_client_id varchar(5);

	/*** This will set the reportingmonth ***/
	IF iv_reportingmonth is null THEN
		set v_reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01');
	ELSE
		set v_reportingmonth = DATE_FORMAT(iv_reportingmonth, '%Y-%m-01');			
	END IF;

	IF iv_client_id is null then
		set v_client_id = '%';
	ELSE
		set v_client_id = iv_client_id;
	END IF;


DROP TEMPORARY TABLE IF EXISTS tmp_cs;
DROP TEMPORARY TABLE IF EXISTS _campaignsummary;

CREATE TEMPORARY TABLE tmp_cs
(
  `client_id` varchar(5) NOT NULL DEFAULT '999',
  `reporting_group` varchar(508)  DEFAULT NULL,
  -- `Venel Paid` varchar(3)  NOT NULL DEFAULT '',
  -- `GeoPlacement` varchar(3)  NOT NULL DEFAULT '',
  `date` date DEFAULT NULL,
  `campaign_name` varchar(255) DEFAULT NULL,
  `campaign_start` datetime DEFAULT NULL,
  `campaign_end` datetime DEFAULT NULL,
  `Device` varchar(50) NOT NULL DEFAULT '',
  `Channel` varchar(11)  NOT NULL DEFAULT '',
  `Impressions` decimal(41,0) DEFAULT 0,
  `Clicks` decimal(41,0) DEFAULT 0,
  `Cost` decimal(36,4) DEFAULT 0,
  `Reach` decimal(41,0) DEFAULT 0,
  `Engagement` decimal(41,0) DEFAULT 0,
  `Likes` decimal(32,0) DEFAULT 0,
  `Comments` decimal(32,0) DEFAULT 0
);

/* Add Google Info */
insert into tmp_cs
SELECT 
            `g`.`client_id` AS `client_id`,
                `g`.`reportinggroup` AS `reporting_group`,
                `g`.`ggl_date` AS `date`,
                `g`.`ggl_campaign` AS `campaign_name`,
                MIN(`g`.`ggl_month`) AS `campaign_start`,
                MAX(`g`.`ggl_month`) AS `campaign_end`,
                COALESCE(`g`.`ggl_device`, 'Unknown') AS `device`,
                'Google' AS `channel`,
                SUM(`g`.`ggl_impressions`) AS `impressions`,
                SUM(`g`.`ggl_clicks`) AS `clicks`,
                SUM((`g`.`ggl_cost` / 1000000)) AS `cost`,
                0 as `reach`,
                0 as `engagement`,
                0 AS `likes`,
                0 AS `comments`
        FROM
            `dw`.`google_ad` `g`
				WHERE 
        client_id like v_client_id
        and ggl_month = v_reportingmonth
        GROUP BY client_id ,`g`.`reportinggroup`, `g`.`ggl_date` , `g`.`ggl_campaign` , COALESCE(`g`.`ggl_device`, 'Unknown');

/* Add Groundtruth */        
insert into tmp_cs
SELECT 
            `gt`.`client_id` AS `client_id`,
                `gt`.`reportinggroup` AS `reporting_group`,
                `gt`.`gt_date` AS `date`,
                `gt`.`gt_cmpgn_name` AS `campaign_name`,
                MIN(`gt`.`gt_cmpgn_start_date`) AS `campaign_start`,
                MAX(`gt`.`gt_cmpgn_end_date`) AS `campaign_end`,
                'mobile' AS `device`,
                'GroundTruth' AS `channel`,
                SUM(`gt`.`gt_impressions`) AS `impressions`,
                SUM(`gt`.`gt_clicks`) AS `clicks`,
                SUM(`gt`.`gt_spend`) AS `spend`,
                SUM(`gt`.`gt_reach`) as `reach`,
                0 as `engagement`,
                0 AS `Likes`,
                0 AS `Comments`
        FROM
            `dw`.`groundtruth` `gt`
				WHERE client_id like v_client_id
        and DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') = v_reportingmonth
        and `gt`.`gt_spend` > 0
        and v_reportingmonth between date_format(`gt`.`gt_cmpgn_start_date`,'%Y-%m-01') and date_format(`gt`.`gt_cmpgn_end_date`,'%Y-%m-01')
        GROUP BY `gt`.`client_id` , `gt`.`reportinggroup` , `gt`.`gt_date`, `gt`.`gt_cmpgn_name`;

/* Add Bing */        
INSERT INTO tmp_cs
SELECT 
            `ads`.`client_id` AS `client_id`,
                `ads`.`reportinggroup` AS `reporting_group`,
                `ads`.`bng_date` AS `date`,
                `ads`.`bng_campaignname` AS `campaign_name`,
                MIN(`ads`.`bng_month`) AS `start_date`,
                MAX(`ads`.`bng_month`) AS `stop_date`,
                `ads`.`bng_devicetype` AS `device`,
                'Bing' AS `channel`,
                SUM(`ads`.`bng_impressions`) AS `impressions`,
                SUM(`ads`.`bng_clicks`) AS `clicks`,
                SUM(`ads`.`bng_spend`) AS `spend`,
                0 as `reach`,
                0 as `engagement`,                
                0 AS `likes`,
                0 AS `comments`
        FROM
            `dw`.`bing_ad` `ads`
				WHERE client_id like v_client_id
        AND bng_month = v_reportingmonth
        GROUP BY `ads`.`client_id` , `ads`.`reportinggroup` , `ads`.`bng_date` , `ads`.`bng_campaignname` , `ads`.`bng_devicetype`;

/* Add Eltoro */
INSERT INTO tmp_cs
SELECT 
            `vw_eltoro_ads`.`client_id` AS `client_id`,
                `vw_eltoro_ads`.`reporting_group` AS `reporting_group`,
                `vw_eltoro_ads`.`reporting_month` AS `date`,
                `vw_eltoro_ads`.`campaign_name` AS `campaign_name`,
                MIN(`vw_eltoro_ads`.`start_date`) AS `start_date`,
                MAX(`vw_eltoro_ads`.`stop_date`) AS `stop_date`,
                `vw_eltoro_ads`.`device` AS `device`,
                'El Toro' AS `channel`,
                SUM(`vw_eltoro_ads`.`impressions`) AS `impressions`,
                SUM(`vw_eltoro_ads`.`clicks`) AS `clicks`,
                SUM(`vw_eltoro_ads`.`spend`) AS `spend`,
                0 as `reach`,
                0 as `engagement`,                
                SUM(`vw_eltoro_ads`.`Likes`) AS `likes`,
                SUM(`vw_eltoro_ads`.`Comments`) AS `comments`
        FROM
            `dw`.`vw_eltoro_ads`
				WHERE client_id like v_client_id
        and reporting_month = v_reportingmonth
        GROUP BY `vw_eltoro_ads`.`client_id` , `vw_eltoro_ads`.`reporting_group` , `vw_eltoro_ads`.`reporting_month` , `vw_eltoro_ads`.`campaign_name` , `vw_eltoro_ads`.`device`;

/* Add Facebook */ 
INSERT INTO tmp_cs
SELECT 
            `fbad`.`client_id` AS `client_id`,
                `fbad`.`reporting_group` AS `reporting_group`,
                `fbad`.`reporting_month` AS `reporting_month`,
                `fbad`.`campaign_name` AS `campaign_name`,
                MIN(`fbad`.`start_date`) AS `start_date`,
                MAX(`fbad`.`stop_date`) AS `stop_date`,
                `fbad`.`device` AS `device`,
                'Facebook' AS `channel`,
                SUM(`fbad`.`impressions`) AS `impressions`,
                SUM(`fbad`.`unique_clicks`) AS `clicks`,
                SUM(`fbad`.`spend`) AS `spend`,
                SUM(`fbad`.`reach`) as `reach`,
                SUM(`fbad`.`page_engagement`) as `engagement`,                
                SUM(`fbad`.`likes`) AS `likes`,
                SUM(`fbad`.`comments`) AS `comments`
        FROM
            `dw`.`vw_facebook_ads_device_bydate` `fbad`
        WHERE
        /*
         (NOT ((LEFT(`fbad`.`campaign_name`, 5) LIKE 'Post:')))
AND 
        */
		client_id like v_client_id
        AND date_format(reporting_month,'%Y-%m-01') = v_reportingmonth
        GROUP BY `fbad`.`client_id` , `fbad`.`reporting_group` , `fbad`.`reporting_group` , `fbad`.`reporting_month` , `fbad`.`campaign_name` , `fbad`.`device`;

/* Add AdRoll */        
insert into tmp_cs
SELECT 
            `adr`.`client_id` AS `client_id`,
                `adr`.`reportinggroup` AS `reporting_group`,
                `adr`.`adr_date` AS `date`,
                `adr`.`adr_cmpgn_name` AS `campaign_name`,
                MIN(`adr`.`adr_cmpgn_start_date`) AS `campaign_start`,
                MAX(`adr`.`adr_cmpgn_end_date`) AS `campaign_end`,
                'mobile' AS `device`,
                'AdRoll' AS `channel`,
                SUM(`adr`.`adr_impressions`) AS `impressions`,
                SUM(`adr`.`adr_clicks`) AS `clicks`,
                SUM(`adr`.`adr_spend`) AS `spend`,
                0 as `reach`,
                0 as `engagement`,                
                0 AS `Likes`,
                0 AS `Comments`
        FROM
            `dw`.`adroll` `adr`
				WHERE client_id like v_client_id
        and DATE_FORMAT(`adr`.`adr_date`, '%Y-%m-01') = v_reportingmonth
        and adr.adr_spend > 0.01
        GROUP BY `adr`.`client_id` , `adr`.`reportinggroup` , `adr`.`adr_date`, `adr`.`adr_cmpgn_name`;
 
create temporary table _campaignsummary as 
SELECT 
        COALESCE(`c`.`client_id`, '999') AS `client_id`,
        RTRIM(COALESCE(`w`.`reporting_group`,
                        `rgw`.`rgw_reportinggroup`,
                        `c`.`client_description`,
                        '999 - Unknown')) AS `reporting_group`,
        (CASE
            WHEN (`w`.`campaign_name` LIKE '%Venel%') THEN 'Yes'
            ELSE 'No'
        END) AS `Venel Paid`,
        (CASE
            WHEN (`w`.`channel` = 'GroundTruth') THEN 'Yes'
            WHEN (`w`.`channel` = 'El Toro') THEN 'Yes'
            WHEN
                ((`w`.`channel` = 'Facebook')
                    AND (`w`.`campaign_name` LIKE '%Geoplacement%') or `w`.`campaign_name` LIKE '%GeoTargeting%')
            THEN
                'Yes'
            ELSE 'No'
        END) AS `GeoPlacement`,
        `w`.`date` AS `reporting_month`,
        `w`.`campaign_name` AS `Campaign Name`,
        `w`.`campaign_start` AS `campaign_start`,
        `w`.`campaign_end` AS `campaign_end`,
        COALESCE(`d`.`device`, `w`.`device`, 'Unknown') AS `Device`,
        `w`.`channel` AS `Channel`,
        `w`.`impressions` AS `Impressions`,
        `w`.`clicks` AS `Clicks`,
        `w`.`cost` AS `Cost`,
        `w`.`reach` as `Reach`,
        `w`.`engagement` as `Engagement`,
        `w`.`likes` AS `Likes`,
        `w`.`comments` AS `Comments`
FROM tmp_cs w
LEFT JOIN `dw`.`reporting_group_web` `rgw` ON (((`w`.`client_id` =  `rgw`.`rgw_clientid` )
            AND (`w`.`campaign_name` LIKE `rgw`.`rgw_campaign`)
            AND (`w`.`channel` = `rgw`.`rgw_websystem`)))
        LEFT JOIN `dw`.`vw_client` `c` ON ((`w`.`client_id` = `c`.`client_id`))
        LEFT JOIN `dw`.`device_mapping` `d` ON ((`d`.`device_source` = `w`.`device`));

		-- Remove and update changed records


-- select * from tmp_cs;

-- select * from _campaignsummary;

-- truncate table campaign_summary_bydate;
delete from campaign_summary_bydate  where date_format(`date`,'%Y-%m-01') = v_reportingmonth and client_id like v_client_id;

insert into campaign_summary_bydate 
select * from _campaignsummary;
        
-- DELETE FROM dw.campaign_summary 
-- WHERE
--     client_id LIKE v_client_id
--     AND reporting_month = v_reportingmonth;


-- 		INSERT INTO dw.campaign_summary
-- 		SELECT * 
--     FROM _campaignsummary
--     WHERE client_id like v_client_id
--     and reporting_month = v_reportingmonth;

END]]></string>
		</procedure>
		<procedure name="update_client_projects" id="Procedure-acd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_client_projects`(IN iv_reportingmonth date)
BEGIN
	declare v_reportingmonth DATE;
	
	/*** This will set the reportingmonth ***/
	IF iv_reportingmonth is null THEN
		set v_reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01');
	ELSE
		set v_reportingmonth = DATE_FORMAT(iv_reportingmonth, '%Y-%m-01');			
	END IF;
 
 CREATE TEMPORARY TABLE `_cpo` (
  `client_id` varchar(5) NOT NULL,
  `reportingmonth` date NOT NULL DEFAULT '1990-01-01',
  `recommended_projects` int(11) NOT NULL DEFAULT '0',
  `recommended_projects_complete` int(11) NOT NULL DEFAULT '0',
  `recommended_projects_inprogress` int(11) NOT NULL DEFAULT '0',
  `additional_projects_complete` int(11) NOT NULL DEFAULT '0',
  `additional_project_inprogress` int(11) NOT NULL DEFAULT '0');

 insert into _cpo
 SELECT 
	cpo.client_id
	, DATE_FORMAT(v_reportingmonth, '%Y-%m-01')  as reportingmonth
	,sum(case when contractual =1 and workflow_state like 'Completed Projects' then 1 else 0 end)
	+ sum(case when contractual =1 and workflow_state like 'Projects in Progress' then 1 else 0 end) 
	+ sum(case when workflow_state like 'Future Projects' then 1 else 0 end) as recommended_projects
	,sum(case when contractual =1 and workflow_state like 'Completed Projects' then 1 else 0 end) as recommended_projects_complete
	,sum(case when contractual =1 and workflow_state like 'Projects in Progress' then 1 else 0 end) as recommended_projects_inprogress
	,sum(case when contractual =0 and workflow_state like 'Completed Projects' then 1 else 0 end) as additional_projects_complete
	,sum(case when contractual =0 and workflow_state like 'Projects in Progress' then 1 else 0 end) as additional_projects_inprogress
	-- ,sum(case when workflow_state like 'Future Projects' then 1 else 0 end) as future
FROM dw.client_projects_online as cpo
-- where cp.client_id is null
-- coalesce(cp.mdfd_user,'reporting@venel.com') ='reporting@venel.com'
group by cpo.client_id;
 
 select * from _cpo;
 
delete from client_projects
WHERE reportingmonth = DATE_FORMAT(v_reportingmonth, '%Y-%m-01');

INSERT INTO `dw`.`client_projects`
(
	`client_id`,
	`reportingmonth`,
	`recommended_projects`,
	`recommended_projects_complete`,
	`recommended_projects_inprogress`,
	`additional_projects_complete`,
	`additional_project_inprogress`
)
select  
	cpo.`client_id`,
	cpo.`reportingmonth`,
	cpo.`recommended_projects`,
	cpo.`recommended_projects_complete`,
	cpo.`recommended_projects_inprogress`,
	cpo.`additional_projects_complete`,
	cpo.`additional_project_inprogress`
from _cpo cpo
left join client_projects as cp
on cpo.client_id = cp.client_id
and cp.reportingmonth = DATE_FORMAT(v_reportingmonth, '%Y-%m-01')
where cp.client_id is null;

drop table _cpo;



END]]></string>
		</procedure>
		<procedure name="update_client_rg_call_config" id="Procedure-13f4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_client_rg_call_config`()
BEGIN
	INSERT INTO `client_rg_call_config`
	(`client_id`,
	`reportinggroup`,
	`reportingmonth`,
	`querystring`,
	`tracking_number`,
	`target_number`,
	`channel`,
	`tracker_name`)
	SELECT 
	 ct.crt_clientid
	 ,rg.rg_reportinggroup
	 ,DATE_FORMAT(curdate(), '%Y-%m-01') reportingmonth
	 ,coalesce(crt_source_landing,'') querystring
	 ,crt_tracking_numbers
	 ,crt_destination_number
	 ,CASE WHEN crt_name like '%bing%' then 'Bing'
	 WHEN  crt_name like '%google%' then 'Google'
	 WHEN  crt_name like '%el toro%' then 'El Toro'
	 WHEN  crt_name like '%groundtruth%' then 'GroundTruth'
	 WHEN  crt_name like '%facebook%' then 'Facebook'
	 ELSE 'Other' END `channel`
	 ,crt_name
	 -- select  *
	 -- distinct crt_tracking_numbers
	FROM dw.callrail_trackers ct
	join vw_reporting_group rg
		on rg.rg_clientid = ct.crt_clientid
		 and coalesce(rg.rg_reportinggroupid,'') = ''
	left outer join `client_rg_call_config` as cc
		on cc.client_id = ct.crt_clientid
        -- and cc.reportinggroup = rg.rg_reportinggroup
        and cc.reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01')
        and cc.tracking_number = ct.crt_tracking_numbers
        and cc.target_number = ct.crt_destination_number
	WHERE crt_status='active'
    and cc.tracking_number is null;
    
	update 
	-- select * from 
	client_rg_call_config cc
	join callrail_trackers ct on 
	cc.client_id = left(ct.crt_company_name,3) 
	and cc.tracker_name = ct.crt_name
	set cc.active = 0
	where ct.crt_tracking_numbers is null
	and crt_status = 'disabled';  
    
END]]></string>
		</procedure>
		<procedure name="update_client_rg_mnthly_bdgt" id="Procedure-237e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_client_rg_mnthly_bdgt`()
begin

DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'update_client_rg_mnthly_bdgt', @full_error, 0); 
	end;
	
-- First thing is to update end date based on activity
	update reporting_group as rg
    inner join (select max(reporting_month) reporting_month, client_id, reporting_group from campaign_summary group by client_id, reporting_group) b
    on rg.rg_clientid = b.client_id and rg.rg_reportinggroup = b.reporting_group 
    set rg_enddate = b.reporting_month
    where rg_enddate < coalesce(b.reporting_month, rg.rg_enddate);
    -- and rg.rg_clientid = '442';
    
    -- case when rg_enddate < coalesce(b.reporting_month, rg.rg_enddate) then coalesce(b.reporting_month, rg.rg_enddate) else 
    
    
	insert into client_rg_mnthly_bdgt
	(client_id, reportinggroup, reportingmonth, monthlybudget, active
	)
	SELECT
	rg.rg_clientid
	,rg.rg_reportinggroup
	,c.cal_date
	,rg.rg_monthlybudget
	,1 as active
	FROM dw.calendar c
	join reporting_group rg
	on c.cal_date between rg.rg_startdate and rg.rg_enddate
	left join client_rg_mnthly_bdgt cb
	on cb.client_id = rg.rg_clientid
	and cb.reportinggroup = rg.rg_reportinggroup
	and cb.reportingmonth = c.cal_date
	where cal_day = 1
	-- and rg.rg_clientid = '504'
	and cb.client_id is null;
end]]></string>
		</procedure>
		<procedure name="update_google_contactme" id="Procedure-c9d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_google_contactme`(iv_ggl_cntctme_id int)
BEGIN
UPDATE google_contactme gcm 
SET 
    reviewId = (SELECT 
            reviewId
        FROM
            vw_google_reviews gr
        WHERE
            gr.client_id = gcm.client_id
                AND gr.reviewer_displayname = gcm.google_name
        ORDER BY createTime DESC
        LIMIT 1)
WHERE
    reviewId IS NULL
    and gcm.ggl_cntctme_id = iv_ggl_cntctme_id;
    
select 
	gr.reviewId,
	gr.`comment`,
	gr.reply_comment,
	`gcm`.`patient_first_name` AS `patient_first_name`,
	`gcm`.`patient_last_name` AS `patient_last_name`,
	`gcm`.`patient_dob` AS `patient_dob`,
	`gcm`.`patient_phone` AS `patient_phone`,
	`gcm`.`ggl_cntctme_id` AS `ggl_cntctme_id`,
    gr.patientfeedback_nodeId
from vw_google_reviews gr
join google_contactme gcm on gr.reviewId = gcm.reviewId where ggl_cntctme_id = iv_ggl_cntctme_id;

END]]></string>
		</procedure>
		<procedure name="update_oiconfig_invoice_planned" id="Procedure-ca1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_oiconfig_invoice_planned`(
IN iv_src_reportingmonth date,
IN iv_dest_reportingmonth date,
IN iv_client_id varchar(5)
)
BEGIN
-- Update records with previous months values
UPDATE client_rg_cmpgn_config cc
	LEFT OUTER JOIN client_rg_cmpgn_config cc_src
		on cc_src.client_id = cc.client_id
		and cc_src.reportinggroup = cc.reportinggroup
		and cc_src.reportingmonth = iv_src_reportingmonth
		and cc_src.channel = cc.channel
		and cc_src.campaign = cc.campaign
SET 
	cc.invoice_amount = cc_src.invoice_amount,
	cc.planned_spend = cc_src.planned_spend
WHERE cc.reportingmonth = iv_dest_reportingmonth
	and cc.client_id like iv_client_id
	and cc.active = 1
	and cc_src.client_id is not null;
    
END]]></string>
		</procedure>
		<procedure name="update_oiconfig_rollmonth" id="Procedure-171c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_oiconfig_rollmonth`(
IN iv_src_reportingmonth date,
IN iv_dest_reportingmonth date,
IN iv_client_id varchar(5)
)
BEGIN

DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'update_oiconfig_rollmonth', @full_error, 0); 
	end;
	
-- **** Insert calls into new month that exist in the source reporting month
	INSERT INTO `dw`.`client_rg_call_config`
	(`client_id`,
	`reportinggroup`,
	`reportingmonth`,
	`querystring`,
	`tracking_number`,
	`target_number`,
	`channel`,
	`active`,
	`crt_date`,
	`crt_user`,
	`mdfd_date`,
	`mdfd_user`,
	`job_name`,
	`tracker_name`,
    include_mor)
	SELECT cc_src.`client_id`,
	     cc_src.`reportinggroup`,
	     iv_dest_reportingmonth,
	     cc_src.`querystring`,
	     cc_src.`tracking_number`,
	     cc_src.`target_number`,
	     cc_src.`channel`,
	     cc_src.`active`,
	     now(),
	     'reporting@venel.com',
	     now(),
	     'reporting@venel.com',
	     cc_src.`job_name`,
	     cc_src.`tracker_name`,
         cc_src.include_mor
	 FROM `dw`.`client_rg_call_config` cc_src
	 left outer join `dw`.`client_rg_call_config` cc
	 	on cc.client_id = cc_src.client_id
	     and cc.reportinggroup = cc_src.reportinggroup
	     and cc.reportingmonth = iv_dest_reportingmonth
	     -- and cc.querystring = cc_src.querystring
	     and cc.tracking_number = cc_src.tracking_number
	     and cc.target_number = cc_src.target_number
	 WHERE cc_src.reportingmonth = iv_src_reportingmonth
	 and cc_src.client_id like iv_client_id
	 and cc_src.active = 1
	 and cc.client_id is null;

	-- Insert campaigns into new month from old month where they don't already exist
	INSERT INTO `dw`.`client_rg_cmpgn_config`
	(`client_id`,
	`reportinggroup`,
	`reportingmonth`,
	`channel`,
	`campaign`,
	`message`,
    `start_date`,
	`invoice_amount`,
	`planned_spend`,
	`actual_spend`,
	`active`,
	`crt_date`,
	`crt_user`,
	`mdfd_date`,
	`mdfd_user`,
	`job_name`)
	SELECT cc_src.`client_id`,
		cc_src.`reportinggroup`,
		iv_dest_reportingmonth,
		cc_src.`channel`,
		cc_src.`campaign`,
         cc_src.`message`,
         cc_src.`start_date`,        
		cc_src.`invoice_amount`,
		cc_src.`planned_spend`,
		0,
		cc_src.`active`,
		now(),
		'reporting@venel.com',
		now(),
		'reporting@venel.com',
		cc_src.`job_name`
	FROM `dw`.`client_rg_cmpgn_config` cc_src
	LEFT OUTER JOIN client_rg_cmpgn_config cc
		on cc.client_id = cc_src.client_id
		and cc.reportinggroup = cc_src.reportinggroup
		and cc.reportingmonth = iv_dest_reportingmonth
		and cc.channel = cc_src.channel
		and cc.campaign = cc_src.campaign
		-- and cc.job_name = cc_src.job_name
	WHERE cc_src.reportingmonth = iv_src_reportingmonth
	and cc_src.client_id like iv_client_id
	and cc_src.active = 1
	and cc.client_id is null;
    
	-- insert Monthly budget information where it doesn't already exist in new month
	INSERT INTO `dw`.`client_rg_mnthly_bdgt`
	(`client_id`,
	`reportinggroup`,
	`reportingmonth`,
	`monthlybudget`,
	`notes`,
	`active`,
	crt_user,
	crt_date,
	mdfd_user,
	mdfd_date)
	SELECT cc_src.`client_id`,
		cc_src.`reportinggroup`,
		iv_dest_reportingmonth,
		cc_src.`monthlybudget`,
		cc_src.`notes`,
		cc_src.`active`,
		'reporting@venel.com',
		now(),
		'reporting@venel.com',
		now()
	FROM `dw`.`client_rg_mnthly_bdgt` cc_src
	LEFT OUTER JOIN client_rg_mnthly_bdgt cc
		on cc.client_id = cc_src.client_id
		and cc.reportinggroup = cc_src.reportinggroup
		and cc.reportingmonth = iv_dest_reportingmonth
	WHERE cc_src.reportingmonth = iv_src_reportingmonth
	and cc_src.client_id like iv_client_id
	and cc_src.active = 1
	and cc.client_id is null;
    
END]]></string>
		</procedure>
		<procedure name="update_online" id="Procedure-1e0a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_online`(IN iv_reportingmonth date)
BEGIN

DELETE FROM dw.online_appointment WHERE date_format(oa_created, '%Y-%m-01') = iv_reportingmonth;
DELETE FROM dw.online_referral WHERE date_format(or_created, '%Y-%m-01')  = iv_reportingmonth;

INSERT INTO `dw`.`online_appointment`
(`oa_siteid`,
`oa_practiceid`,
`oa_created`,
`oa_email`,
`oa_phone`,
`oa_ref`,
`oa_firstname`,
`oa_lastname`,
`oa_location`,
`oa_source`)
SELECT 
	min(`id`) as id
	,c.crc_clientid
    ,DATE_ADD(DATE_FORMAT(submitted_at, "%Y-%m-%d %H:00:00"), INTERVAL IF(MINUTE(submitted_at) < 30, 0, 1) HOUR) AS submitted_at
	,coalesce(email,'none@none.com') as email
	,phone
    ,referrer
	,first_name
	,last_name
    ,location
    ,'callrail'
FROM dw.callrail_formsubmission f
join dw.callrail_companies c
on f.company_id = c.crc_id
WHERE form_url LIKE '%appointment%'
and date_format(submitted_at, '%Y-%m-01') =  iv_reportingmonth
and form_data like '%"form_id": "%' and not (form_data like '{"Search":%')
group by 
	c.crc_clientid
    ,DATE_ADD(DATE_FORMAT(submitted_at, "%Y-%m-%d %H:00:00"), INTERVAL IF(MINUTE(submitted_at) < 30, 0, 1) HOUR) 
	,coalesce(email,'none@none.com')
	,phone
    ,referrer
	,first_name
	, last_name
    ,location;
   
   INSERT INTO `dw`.`online_referral`
(`or_siteid`,
`or_practiceid`,
`or_created`,
`or_patientemail`,
`or_patientname`,
`or_patientphone`)
SELECT
	min(`id`)
	,c.crc_clientid
    ,DATE_ADD(DATE_FORMAT(submitted_at, "%Y-%m-%d %H:00:00"), INTERVAL IF(MINUTE(submitted_at) < 30, 0, 1) HOUR) 
	, coalesce(email,'none@none.com')
	, concat(first_name, last_name)
	, phone
FROM dw.callrail_formsubmission f
join dw.callrail_companies c
on f.company_id = c.crc_id
WHERE form_url LIKE '%refer%'
and date_format(submitted_at, '%Y-%m-01') = iv_reportingmonth
and form_data like '%"form_id": "%' and not (form_data like '{"Search":%')
group by 
	c.crc_clientid
    ,DATE_ADD(DATE_FORMAT(submitted_at, "%Y-%m-%d %H:00:00"), INTERVAL IF(MINUTE(submitted_at) < 30, 0, 1) HOUR) 
	, coalesce(email,'none@none.com')
	, concat(first_name, last_name)
	, phone;


END]]></string>
		</procedure>
		<procedure name="update_scheduled_task_errors" id="Procedure-119b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_scheduled_task_errors`()
BEGIN
	UPDATE dw.scheduled_task_errors
    set SEND_STATUS = 1;
END]]></string>
		</procedure>
		<procedure name="update_tbl_pbi_projects" id="Procedure-1593" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_tbl_pbi_projects`()
BEGIN

drop temporary table if exists _prjctsumbyweek;

create temporary table _prjctsumbyweek
    SELECT
		client_id client_id
		,cal_startofweek prjct_week
        ,cal_startofmonth reporting_month
        ,0 as providers
		,0 as monthlyprojects
		,cast(0 as decimal(10,4)) as monthlyfees
        ,0 as weeklyprojects
        ,cast(0 as decimal(10,4)) as weeklyfees
    FROM 
    (
		SELECT 
		MAX(cal_startofmonth) cal_startofmonth, cal_startofweek
	FROM
		vw_calendar
	WHERE
		cal_date > '2018-01-01'
	GROUP BY cal_startofweek
    ) cal
    , dw.vw_client
    WHERE client_status = 'Active'
		AND cal_startofmonth >= '2018-01-01'
    GROUP BY client_id
		,cal_startofweek;

-- Summarize projects by week
drop  temporary table if exists _prjctsbyweek;

create temporary table _prjctsbyweek
select 
prjct_clientid client_id
,(wp.`prjct_startdate` + INTERVAL (1-dayofweek(wp.`prjct_startdate`)) DAY) prjct_week
-- ,date_format(wp.prjct_startdate + INTERVAL (7 - dayofweek('2020-04-29')) DAY,'%Y-%m-01') reporting_month
,s.reporting_month
,count(prjct_number) prjct_count
from `workamajig_projects` wp
join _prjctsumbyweek s
	on wp.prjct_clientid = s.client_id
    and s.prjct_week = (wp.`prjct_startdate` + INTERVAL (1-dayofweek(wp.`prjct_startdate`)) DAY)
where wp.prjct_startdate>='2018-01-01'
-- 	 and wp.prjct_clientid = '396'
group by prjct_clientid
	,(wp.`prjct_startdate` + INTERVAL (1-dayofweek(wp.`prjct_startdate`)) DAY)
	,s.reporting_month;

drop  temporary table if exists _feesbymonth;

create temporary table _feesbymonth
select 
	client_id
    ,reporting_month
    ,sum(amount * case when last_day(reporting_month)>curdate() then day(curdate())/day(last_day(reporting_month)) else 1 end) monthlyfees 
from vw_pbi_flatfee
where reporting_month >='2018-01-01'
group by client_id
,reporting_month;
  
-- Add providers to summary
update _prjctsumbyweek a
	join client_rg_mnthly_bdgt b
		on a.client_id = b.client_id
        and a.reporting_month = b.reportingmonth
	set a.providers = b.providers;
   
-- Update project count by week
update _prjctsumbyweek a
	join _prjctsbyweek b
		on a.client_id = b.client_id
        and a.prjct_week = b.prjct_week
        and a.reporting_month = b.reporting_month
	set weeklyprojects = prjct_count;

-- Update project count by month
update _prjctsumbyweek a
	join (select client_id, reporting_month, sum(prjct_count) prjct_count from _prjctsbyweek group by client_id, reporting_month) b
		on a.client_id = b.client_id
        and a.reporting_month = b.reporting_month
	set a.monthlyprojects = b.prjct_count;
    
-- Update fees
update _prjctsumbyweek a
	join _feesbymonth b
		on a.client_id = b.client_id
        and a.reporting_month = b.reporting_month
	set a.monthlyfees = b.monthlyfees
    ,a.weeklyfees = weeklyprojects * coalesce(b.monthlyfees/a.monthlyprojects,0);
    
drop temporary table if exists _summary;

create temporary table _summary 
select client_id
,prjct_week
,reporting_month
,providers
,monthlyprojects
,monthlyfees
,weeklyprojects
,weeklyfees
-- ,0 as pwprojects
-- ,cast(0 as decimal(10,4)) as pwfees
-- ,0 as p4wprojects
-- ,cast(0 as decimal(10,4)) as p4wfees
-- ,0 as p13wprojects
-- ,cast(0 as decimal(10,4)) as p13wfees
-- ,0 as p52wprojects
-- ,cast(0 as decimal(10,4)) as p52wfees
-- ,0 as pywprojects
-- ,cast(0 as decimal(10,4)) as pywfees
from _prjctsumbyweek;

-- truncate table tbl_pbi_projects;
drop table if exists tbl_pbi_projects;
-- Create summary with weekly information
create table tbl_pbi_projects
-- insert tbl_pbi_projects
select
	s.client_id
    ,s.prjct_week
    ,s.reporting_month
    ,s.providers
    ,s.monthlyprojects `Monthly Projects`
    ,s.monthlyfees `Monthly Fees`
    ,s.weeklyprojects `Project Count(Current Week)`
    ,s.weeklyfees `Project Fee(Current Week)`
    ,0 `Count Rank(Current Week)`
    ,0 `Fee Rank(Current Week)`
    ,sum(coalesce(case when p.prjct_week = date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyprojects else 0 end ,0)) `Project Count(Prior Week)`
    ,sum(coalesce(case when p.prjct_week = date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyfees else 0 end ,0)) `Project Fee(Prior Week)`
    ,0 `Count Rank(Prior Week)`
    ,0 `Fee Rank(Prior Week)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -35 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyprojects else 0 end ,0)) `Project Count(Prior 4 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -35 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyfees else 0 end ,0)) `Project Fee(Prior 4 Weeks)`
    ,0 `Count Rank(Prior 4 Weeks)`
    ,0 `Fee Rank(Prior 4 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -56 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyprojects else 0 end ,0)) `Project Count(Prior 8 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -56 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyfees else 0 end ,0)) `Project Fee(Prior 8 Weeks)`
    ,0 `Count Rank(Prior 8 Weeks)`
    ,0 `Fee Rank(Prior 8 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -98 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyprojects else 0 end ,0))  `Project Count(Prior 13 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -98 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyfees else 0 end ,0))  `Project Fee(Prior 13 Weeks)`
    ,0 `Count Rank(Prior 13 Weeks)`
    ,0 `Fee Rank(Prior 13 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -371 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyprojects else 0 end ,0))  `Project Count(Prior 52 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -371 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY) then p.weeklyfees else 0 end ,0))  `Project Fee(Prior 52 Weeks)`
    ,0 `Count Rank(Prior 52 Weeks)`
    ,0 `Fee Rank(Prior 52 Weeks)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -735 DAY) AND date_add(s.prjct_week, INTERVAL -371 DAY) then p.weeklyprojects else 0 end ,0))  `Project Count(Prior Year)`
    ,sum(coalesce(case when p.prjct_week between date_add(s.prjct_week, INTERVAL -735 DAY) AND date_add(s.prjct_week, INTERVAL -371 DAY) then p.weeklyfees else 0 end ,0)) `Project Fee(Prior Year)`
	,0 `Count Rank(Prior Year)`
    ,0 `Fee Rank(Prior Year)`
from _summary s
left join _prjctsumbyweek p
on s.client_id = p.client_id
	-- and p.prjct_week between date_add(s.prjct_week, INTERVAL -35 DAY) AND date_add(s.prjct_week, INTERVAL -7 DAY)
-- where s.client_id = '396'
group by
	s.client_id
    ,s.prjct_week
    ,s.reporting_month;

 -- select * from tbl_pbi_projects;
    
-- Drop temporary tables    
drop temporary table _feesbymonth;
-- drop temporary table _prjctsbymonth;
drop temporary table _prjctsbyweek;
-- drop temporary table _prjctsumbymonth;
drop temporary table _prjctsumbyweek;
drop temporary table _summary;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Current Week)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
-- where prjct_week = '2020-05-24'
order by prjct_week, `Project Count(Current Week)`,`Project Fee(Current Week)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Current Week)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
-- where prjct_week = '2020-05-24'
order by prjct_week, `Project Fee(Current Week)`,`Project Count(Current Week)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior Week)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior Week)`,`Project Fee(Prior Week)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Prior Week)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Fee(Prior Week)`,`Project Count(Prior Week)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior Week)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior Week)`,`Project Fee(Prior Week)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Prior Week)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Fee(Prior Week)`,`Project Count(Prior Week)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior 4 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior 4 Weeks)`,`Project Fee(Prior 4 Weeks)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Prior 4 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Fee(Prior 4 Weeks)`,`Project Count(Prior 4 Weeks)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior 8 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior 8 Weeks)`,`Project Fee(Prior 8 Weeks)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Prior 8 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Fee(Prior 8 Weeks)`,`Project Count(Prior 8 Weeks)`;


select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior 13 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior 13 Weeks)`,`Project Fee(Prior 13 Weeks)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set 
	`Fee Rank(Prior 13 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
	,prjct_week = @prjct_week := prjct_week
-- from tbl_pbi_projects p
order by prjct_week, case when coalesce(`Project Count(Prior 13 Weeks)`,0)=0 then 0 else `Project Fee(Prior 13 Weeks)`/`Project Count(Prior 13 Weeks)` end,`Project Count(Prior 13 Weeks)`;

select * from tbl_pbi_projects where prjct_week = '2020-07-12';

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior 52 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior 52 Weeks)`,`Project Fee(Prior 52 Weeks)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Prior 52 Weeks)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Fee(Prior 52 Weeks)`,`Project Count(Prior 52 Weeks)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Count Rank(Prior Year)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1) 
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Count(Prior Year)`,`Project Fee(Prior Year)`;

select @order_rank:=0;
Update tbl_pbi_projects p
set `Fee Rank(Prior Year)` = @order_rank := if(coalesce(@prjct_week,'1900-01-01') = prjct_week, coalesce(@order_rank,0) + 1,1)
,prjct_week = @prjct_week := prjct_week
order by prjct_week, `Project Fee(Prior Year)`,`Project Count(Prior Year)`;


select * from tbl_pbi_projects
where prjct_week = '2017-12-31'
 order by prjct_week, `Count Rank(Current Week)`;


END]]></string>
		</procedure>
		<procedure name="update_web_data" id="Procedure-a63" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `update_web_data`(IN iv_reportingmonth date, IN iv_client_id varchar(5))
BEGIN
		declare v_reportingmonth DATE;
    declare v_client_id varchar(5);
    
		/*** This will set the reportingmonth ***/
		IF iv_reportingmonth is null THEN
			set v_reportingmonth = DATE_FORMAT(curdate(), '%Y-%m-01');
		ELSE
			set v_reportingmonth = DATE_FORMAT(iv_reportingmonth, '%Y-%m-01');			
		END IF;
        
    IF iv_client_id is null then
			set v_client_id = '%';
		ELSE
			set v_client_id = iv_client_id;
		END IF;
    
-- select v_reportingmonth, v_client_id;

/*** This will update facebook ads with reporting information ***/
UPDATE facebook_ads ads
        LEFT JOIN
    facebook_page fbpg ON ads.fbad_page_id = fbpg.fbpg_id
        LEFT JOIN
    vw_client c ON COALESCE(fbpg.fbpg_clientid, '999') = c.client_id 
SET 
    ads.client_id = c.client_id,
    ads.reportinggroup = c.client_description
WHERE
    ads.client_id IS NULL
        OR (ads.client_id = '999'
        AND LEFT(ads.fbad_campaign_name, 3) <> '001');

		-- update campaign information if it is changed on campaign config
		-- UPDATE facebook_ads ads
        -- JOIN client_rg_cmpgn_config cc 
    -- ON ads.fbad_campaign_name LIKE campaign
    --     AND cc.channel = 'Facebook'
    --     AND cc.reportingmonth = v_reportingmonth
    --     AND cc.client_id LIKE v_client_id 
-- SET 
--     ads.client_id = cc.client_id,
--     ads.reportinggroup = cc.reportinggroup
-- WHERE
--     (COALESCE(ads.client_id, '') <> cc.client_id
--         OR COALESCE(ads.reportinggroup, '') <> cc.reportinggroup)
--         AND (cc.client_id != '999'
--         OR cc.client_id != '001');

		/*** This will update Google ads with reporting information ***/
		UPDATE google_ad ads
        LEFT JOIN
    vw_client c ON CASE
        WHEN (ads.ggl_account = 'Venel') THEN '001'
        ELSE LEFT(ads.ggl_account, 3)
    END = c.client_id 
SET 
    ads.client_id = c.client_id,
    ads.reportinggroup = c.client_description
WHERE
    ads.client_id IS NULL
        AND LEFT(ads.ggl_account, 3) LIKE v_client_id
        AND ads.ggl_month = v_reportingmonth;

		/*** This will update reporting group for ad based on what is set in campaign config ***/
		UPDATE google_ad ads
        JOIN
    client_rg_cmpgn_config cc ON ads.ggl_campaign LIKE campaign
        AND cc.channel = 'Google'
        AND cc.client_id = ads.client_id
        AND cc.reportingmonth = v_reportingmonth 
SET 
    ads.client_id = cc.client_id,
    ads.reportinggroup = cc.reportinggroup
WHERE
    COALESCE(ads.reportinggroup, '') <> cc.reportinggroup
        AND ads.ggl_month = v_reportingmonth
        AND ads.client_id LIKE v_client_id;
            
		/*** This will update bing ads with reporting information ***/
		UPDATE bing_ad ads
        LEFT JOIN
    vw_client c ON CASE
        WHEN (ads.bng_accountname = 'VenelBCC') THEN '001'
        ELSE LEFT(ads.bng_accountname, 3)
    END = c.client_id 
SET 
    ads.client_id = c.client_id,
    ads.reportinggroup = c.client_description
WHERE
    ads.client_id IS NULL
        AND ads.bng_month = v_reportingmonth
        AND CASE
        WHEN (ads.bng_accountname = 'VenelBCC') THEN '001'
        ELSE LEFT(ads.bng_accountname, 3)
    END LIKE v_client_id;

		UPDATE bing_ad ads
        JOIN
    client_rg_cmpgn_config cc ON ads.bng_campaignname LIKE campaign
        AND cc.channel = 'Bing'
        AND cc.client_id = ads.client_id
        AND cc.reportingmonth = v_reportingmonth 
SET 
    ads.client_id = cc.client_id,
    ads.reportinggroup = cc.reportinggroup
WHERE
    COALESCE(ads.reportinggroup, '') <> cc.reportinggroup
        AND ads.bng_month = v_reportingmonth
        AND ads.client_id LIKE v_client_id;


		/*** This will update El Toro ads with reporting information ***/            
		UPDATE eltoro_orderlines ads
        LEFT JOIN
    vw_client c ON LEFT(ads.eltrrdrlns_campaign_name, 3) = c.client_id
        LEFT JOIN
    vw_client c1 ON COALESCE(`c`.`client_id`, '999') = c1.client_id 
SET 
    ads.client_id = COALESCE(c.client_id, c1.client_id),
    ads.reportinggroup = COALESCE(c.client_description,
            c1.client_description)
WHERE
    ads.client_id IS NULL
        AND v_reportingmonth BETWEEN ads.eltrrdrlns_startdate AND ads.eltrrdrlns_enddate
        AND LEFT(ads.eltrrdrlns_campaign_name, 3) LIKE v_client_id;

		UPDATE eltoro_orderlines ads
        JOIN
    client_rg_cmpgn_config cc ON ads.eltrrdrlns_campaign_name LIKE campaign
        AND cc.channel = 'El Toro'
        AND cc.client_id = ads.client_id
        AND cc.reportingmonth = v_reportingmonth 
SET 
    ads.reportinggroup = cc.reportinggroup
WHERE
    COALESCE(ads.reportinggroup, '') <> cc.reportinggroup
        AND v_reportingmonth BETWEEN ads.eltrrdrlns_startdate AND ads.eltrrdrlns_enddate
        AND ads.client_id LIKE v_client_id;
            
		/*** This will update GroundTruth ads with reporting information ***/            
		UPDATE groundtruth ads
        LEFT JOIN
    vw_client c ON CASE
        WHEN (LEFT(ads.gt_acct_name, 2) = '1 ') THEN '001'
        ELSE LEFT(ads.gt_acct_name, 3)
    END = c.client_id
        LEFT JOIN
    vw_client c1 ON COALESCE(`c`.`client_id`, '999') = c1.client_id 
SET 
    ads.client_id = COALESCE(c.client_id, c1.client_id),
    ads.reportinggroup = COALESCE(c.client_description,
            c1.client_description)
WHERE
    ads.client_id IS NULL
        AND v_reportingmonth = DATE_FORMAT(ads.gt_date, '%Y-%m-01')
        AND CASE
        WHEN (LEFT(ads.gt_acct_name, 2) = '1 ') THEN '001'
        ELSE LEFT(ads.gt_acct_name, 3)
    END LIKE v_client_id;

		UPDATE groundtruth ads
        JOIN
    client_rg_cmpgn_config cc ON ads.gt_cmpgn_name LIKE campaign
        AND cc.channel = 'GroundTruth'
        AND cc.client_id = ads.client_id
        AND cc.reportingmonth = v_reportingmonth 
SET 
    ads.reportinggroup = cc.reportinggroup
WHERE
    COALESCE(ads.reportinggroup, '') <> cc.reportinggroup
        AND v_reportingmonth = DATE_FORMAT(ads.gt_date, '%Y-%m-01')
        AND ads.client_id LIKE v_client_id;            

		/*** This will update adroll ads with reporting information ***/            
		UPDATE adroll ads
        LEFT JOIN
    vw_client c ON CASE
        WHEN (LEFT(ads.adr_acct_name, 2) = '1 ') THEN '001'
        ELSE LEFT(ads.adr_acct_name, 3)
    END = c.client_id
        LEFT JOIN
    vw_client c1 ON COALESCE(`c`.`client_id`, '999') = c1.client_id 
SET 
    ads.client_id = COALESCE(c.client_id, c1.client_id),
    ads.reportinggroup = COALESCE(c.client_description,
            c1.client_description)
WHERE
    ads.client_id IS NULL
        AND v_reportingmonth = DATE_FORMAT(ads.adr_date, '%Y-%m-01')
        AND CASE
        WHEN (LEFT(ads.adr_acct_name, 2) = '1 ') THEN '001'
        ELSE LEFT(ads.adr_acct_name, 3)
    END LIKE v_client_id;

		UPDATE adroll ads
        JOIN
    client_rg_cmpgn_config cc ON ads.adr_cmpgn_name LIKE campaign
        AND cc.channel = 'AdRoll'
        AND cc.client_id = ads.client_id
        AND cc.reportingmonth = v_reportingmonth 
SET 
    ads.reportinggroup = cc.reportinggroup
WHERE
    COALESCE(ads.reportinggroup, '') <> cc.reportinggroup
        AND v_reportingmonth = DATE_FORMAT(ads.adr_date, '%Y-%m-01')
        AND ads.client_id LIKE v_client_id;            

DROP TEMPORARY TABLE IF EXISTS tmp_cs;
DROP TEMPORARY TABLE IF EXISTS _campaignsummary;

CREATE TEMPORARY TABLE tmp_cs
(
  `client_id` varchar(5) NOT NULL DEFAULT '999',
  `reporting_group` varchar(508)  DEFAULT NULL,
  -- `Venel Paid` varchar(3)  NOT NULL DEFAULT '',
  -- `GeoPlacement` varchar(3)  NOT NULL DEFAULT '',
  `reporting_month` varchar(10)  DEFAULT NULL,
  `campaign_name` varchar(255) DEFAULT NULL,
  `campaign_start` datetime DEFAULT NULL,
  `campaign_end` datetime DEFAULT NULL,
  `Device` varchar(50) NOT NULL DEFAULT '',
  `Channel` varchar(11)  NOT NULL DEFAULT '',
  `Impressions` decimal(41,0) DEFAULT 0,
  `Clicks` decimal(41,0) DEFAULT 0,
  `Cost` decimal(36,4) DEFAULT 0,
  `Reach` decimal(41,0) DEFAULT 0,
  `Engagement` decimal(41,0) DEFAULT 0,
  `Likes` decimal(32,0) DEFAULT 0,
  `Comments` decimal(32,0) DEFAULT 0
);

/* Add Google Info */
insert into tmp_cs
SELECT 
            `g`.`client_id` AS `client_id`,
                `g`.`reportinggroup` AS `reporting_group`,
                `g`.`ggl_month` AS `reporting_month`,
                `g`.`ggl_campaign` AS `campaign_name`,
                MIN(`g`.`ggl_month`) AS `campaign_start`,
                MAX(`g`.`ggl_month`) AS `campaign_end`,
                COALESCE(`g`.`ggl_device`, 'Unknown') AS `device`,
                'Google' AS `channel`,
                SUM(`g`.`ggl_impressions`) AS `impressions`,
                SUM(`g`.`ggl_clicks`) AS `clicks`,
                SUM((`g`.`ggl_cost` / 1000000)) AS `cost`,
                0 as `reach`,
                0 as `engagement`,
                0 AS `likes`,
                0 AS `comments`
        FROM
            `dw`.`google_ad` `g`
				WHERE 
        client_id like v_client_id
        and ggl_month = v_reportingmonth
        GROUP BY client_id , `g`.`ggl_month` , `g`.`ggl_campaign` , COALESCE(`g`.`ggl_device`, 'Unknown');

/* Add Groundtruth */        
insert into tmp_cs
SELECT 
            `gt`.`client_id` AS `client_id`,
                `gt`.`reportinggroup` AS `reporting_group`,
                DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') AS `reporting_month`,
                `gt`.`gt_cmpgn_name` AS `campaign_name`,
                MIN(`gt`.`gt_cmpgn_start_date`) AS `campaign_start`,
                MAX(`gt`.`gt_cmpgn_end_date`) AS `campaign_end`,
                'mobile' AS `device`,
                'GroundTruth' AS `channel`,
                SUM(`gt`.`gt_impressions`) AS `impressions`,
                SUM(`gt`.`gt_clicks`) AS `clicks`,
                SUM(`gt`.`gt_spend`) AS `spend`,
                SUM(`gt`.`gt_reach`) as `reach`,
                0 as `engagement`,
                0 AS `Likes`,
                0 AS `Comments`
        FROM
            `dw`.`groundtruth` `gt`
				WHERE client_id like v_client_id
        and DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') = v_reportingmonth
        and `gt`.`gt_spend` > 0
        and v_reportingmonth between date_format(`gt`.`gt_cmpgn_start_date`,'%Y-%m-01') and date_format(`gt`.`gt_cmpgn_end_date`,'%Y-%m-01')
        GROUP BY `gt`.`client_id` , `gt`.`reportinggroup` , DATE_FORMAT(`gt`.`gt_date`, '%Y-%m-01') , `gt`.`gt_cmpgn_name`;

/* Add Bing */        
INSERT INTO tmp_cs
SELECT 
            `ads`.`client_id` AS `client_id`,
                `ads`.`reportinggroup` AS `reporting_group`,
                `ads`.`bng_month` AS `reporting_month`,
                `ads`.`bng_campaignname` AS `campaign_name`,
                MIN(`ads`.`bng_month`) AS `start_date`,
                MAX(`ads`.`bng_month`) AS `stop_date`,
                `ads`.`bng_devicetype` AS `device`,
                'Bing' AS `channel`,
                SUM(`ads`.`bng_impressions`) AS `impressions`,
                SUM(`ads`.`bng_clicks`) AS `clicks`,
                SUM(`ads`.`bng_spend`) AS `spend`,
                0 as `reach`,
                0 as `engagement`,                
                0 AS `likes`,
                0 AS `comments`
        FROM
            `dw`.`bing_ad` `ads`
				WHERE client_id like v_client_id
        AND bng_month = v_reportingmonth
        GROUP BY `ads`.`client_id` , `ads`.`reportinggroup` , `ads`.`bng_month` , `ads`.`bng_campaignname` , `ads`.`bng_devicetype`;

/* Add Eltoro */
INSERT INTO tmp_cs
SELECT 
            `vw_eltoro_ads`.`client_id` AS `client_id`,
                `vw_eltoro_ads`.`reporting_group` AS `reporting_group`,
                `vw_eltoro_ads`.`reporting_month` AS `reporting_month`,
                `vw_eltoro_ads`.`campaign_name` AS `campaign_name`,
                MIN(`vw_eltoro_ads`.`start_date`) AS `start_date`,
                MAX(`vw_eltoro_ads`.`stop_date`) AS `stop_date`,
                `vw_eltoro_ads`.`device` AS `device`,
                'El Toro' AS `channel`,
                SUM(`vw_eltoro_ads`.`impressions`) AS `impressions`,
                SUM(`vw_eltoro_ads`.`clicks`) AS `clicks`,
                SUM(`vw_eltoro_ads`.`spend`) AS `spend`,
                0 as `reach`,
                0 as `engagement`,                
                SUM(`vw_eltoro_ads`.`Likes`) AS `likes`,
                SUM(`vw_eltoro_ads`.`Comments`) AS `comments`
        FROM
            `dw`.`vw_eltoro_ads`
				WHERE client_id like v_client_id
        and reporting_month = v_reportingmonth
        GROUP BY `vw_eltoro_ads`.`client_id` , `vw_eltoro_ads`.`reporting_group` , `vw_eltoro_ads`.`reporting_month` , `vw_eltoro_ads`.`campaign_name` , `vw_eltoro_ads`.`device`;

/* Add Facebook */ 
INSERT INTO tmp_cs
SELECT 
            `fbad`.`client_id` AS `client_id`,
                `fbad`.`reporting_group` AS `reporting_group`,
                `fbad`.`reporting_month` AS `reporting_month`,
                `fbad`.`campaign_name` AS `campaign_name`,
                MIN(`fbad`.`start_date`) AS `start_date`,
                MAX(`fbad`.`stop_date`) AS `stop_date`,
                `fbad`.`device` AS `device`,
                'Facebook' AS `channel`,
                SUM(`fbad`.`impressions`) AS `impressions`,
                SUM(`fbad`.`unique_clicks`) AS `clicks`,
                SUM(`fbad`.`spend`) AS `spend`,
                SUM(`fbad`.`reach`) as `reach`,
                SUM(`fbad`.`page_engagement`) as `engagement`,                
                SUM(`fbad`.`likes`) AS `likes`,
                SUM(`fbad`.`comments`) AS `comments`
        FROM
            `dw`.`vw_facebook_ads_device` `fbad`
        WHERE
        /*
         (NOT ((LEFT(`fbad`.`campaign_name`, 5) LIKE 'Post:')))
AND 
        */
		client_id like v_client_id
        AND reporting_month = v_reportingmonth
        GROUP BY `fbad`.`client_id` , `fbad`.`reporting_group` , `fbad`.`reporting_group` , `fbad`.`reporting_month` , `fbad`.`campaign_name` , `fbad`.`device`;

/* Add AdRoll */        
insert into tmp_cs
SELECT 
            `adr`.`client_id` AS `client_id`,
                `adr`.`reportinggroup` AS `reporting_group`,
                DATE_FORMAT(`adr`.`adr_date`, '%Y-%m-01') AS `reporting_month`,
                `adr`.`adr_cmpgn_name` AS `campaign_name`,
                MIN(`adr`.`adr_cmpgn_start_date`) AS `campaign_start`,
                MAX(`adr`.`adr_cmpgn_end_date`) AS `campaign_end`,
                'mobile' AS `device`,
                'AdRoll' AS `channel`,
                SUM(`adr`.`adr_impressions`) AS `impressions`,
                SUM(`adr`.`adr_clicks`) AS `clicks`,
                SUM(`adr`.`adr_spend`) AS `spend`,
                0 as `reach`,
                0 as `engagement`,                
                0 AS `Likes`,
                0 AS `Comments`
        FROM
            `dw`.`adroll` `adr`
				WHERE client_id like v_client_id
        and DATE_FORMAT(`adr`.`adr_date`, '%Y-%m-01') = v_reportingmonth
        and adr.adr_spend > 0.01
        GROUP BY `adr`.`client_id` , `adr`.`reportinggroup` , DATE_FORMAT(`adr`.`adr_date`, '%Y-%m-01') , `adr`.`adr_cmpgn_name`;
 
create temporary table _campaignsummary as 
SELECT 
        COALESCE(`c`.`client_id`, '999') AS `client_id`,
        RTRIM(COALESCE(`w`.`reporting_group`,
                        `rgw`.`rgw_reportinggroup`,
                        `c`.`client_description`,
                        '999 - Unknown')) AS `reporting_group`,
        (CASE
            WHEN (`w`.`campaign_name` LIKE '%Venel%') THEN 'Yes'
            ELSE 'No'
        END) AS `Venel Paid`,
        (CASE
            WHEN (`w`.`channel` = 'GroundTruth') THEN 'Yes'
            WHEN (`w`.`channel` = 'El Toro') THEN 'Yes'
            WHEN
                ((`w`.`channel` = 'Facebook')
                    AND (`w`.`campaign_name` LIKE '%Geoplacement%') or `w`.`campaign_name` LIKE '%GeoTargeting%')
            THEN
                'Yes'
            ELSE 'No'
        END) AS `GeoPlacement`,
        `w`.`reporting_month` AS `reporting_month`,
        `w`.`campaign_name` AS `Campaign Name`,
        `w`.`campaign_start` AS `campaign_start`,
        `w`.`campaign_end` AS `campaign_end`,
        COALESCE(`d`.`device`, `w`.`device`, 'Unknown') AS `Device`,
        `w`.`channel` AS `Channel`,
        `w`.`impressions` AS `Impressions`,
        `w`.`clicks` AS `Clicks`,
        `w`.`cost` AS `Cost`,
        `w`.`reach` as `Reach`,
        `w`.`engagement` as `Engagement`,
        `w`.`likes` AS `Likes`,
        `w`.`comments` AS `Comments`
FROM tmp_cs w
LEFT JOIN `dw`.`reporting_group_web` `rgw` ON (((`w`.`client_id` =  `rgw`.`rgw_clientid` )
            AND (`w`.`campaign_name` LIKE `rgw`.`rgw_campaign`)
            AND (`w`.`channel` = `rgw`.`rgw_websystem`)))
        LEFT JOIN `dw`.`vw_client` `c` ON ((`w`.`client_id` = `c`.`client_id`))
        LEFT JOIN `dw`.`device_mapping` `d` ON ((`d`.`device_source` = `w`.`device`));

		-- Remove and update changed records
		DELETE FROM dw.campaign_summary 
WHERE
    client_id LIKE v_client_id
    AND reporting_month = v_reportingmonth;


		INSERT INTO dw.campaign_summary
		SELECT * 
    FROM _campaignsummary
    WHERE client_id like v_client_id
    and reporting_month = v_reportingmonth;

		-- Delete and update changed records
		DELETE FROM dw.web_mor 
WHERE
    client_id LIKE v_client_id
    AND reporting_month = v_reportingmonth;
    
		INSERT INTO dw.web_mor
    SELECT 
        `client_id` AS `client_id`,
        `reporting_group` AS `reporting_group`,
        `reporting_month` AS `reporting_month`,
        SUM(`Clicks`) AS `clicks`,
        SUM(`Cost`) AS `cost`,
        SUM(`Impressions`) AS `impressions`,
        SUM(`Likes`) AS `likes`
    FROM _campaignsummary
    WHERE client_id like v_client_id
    and `Venel Paid` ='No'
    and reporting_month = v_reportingmonth
    group by client_id, reporting_group,reporting_month;
    
    
drop table tmp_cs;
drop table _campaignsummary;
  
		-- *** This will insert new campaigns as they occur during the month
		INSERT INTO `dw`.`client_rg_cmpgn_config`
		(`client_id`,
		`reportinggroup`,
		`reportingmonth`,
		`channel`,
		`campaign`,
		`invoice_amount`,
		`planned_spend`,
		`actual_spend`,
        `impressions`,
        `clicks`,
        `reach`,
		`active`,
        start_date
		)
		SELECT
			cs.client_id
			,cs.reporting_group
			,cs.reporting_month
			,cs.Channel
			,cs.`Campaign Name`
			, 0 invoice_amount
			, 0 planned_spend
			-- , sum(case when reporting_month < v_reportingmonth then cost else 0 end) as actual_spend
			, round(sum(cs.cost),2) as actual_spend
            ,sum(cs.impressions) impressions
            ,sum(cs.clicks) clicks
            ,sum(cs.reach) reach
			, 1 as active
            , min(cs.campaign_start) as campaign_start
		FROM
			dw.campaign_summary cs
		LEFT OUTER JOIN dw.client_rg_cmpgn_config cc
			ON cs.client_id = cc.client_id
			and cs.reporting_group = cc.reportinggroup
			and cs.reporting_month = cc.reportingmonth
			and cs.channel = cc.channel
			and cs.`campaign name` = cc.campaign
		WHERE 
        /*
        not cs.`Campaign Name` like 'Post%'
		 and 
         */
         cc.client_id is null
     and cs.client_id like v_client_id
     and cs.reporting_month = v_reportingmonth
     -- and (coalesce(cs.cost,0)>0 or coalesce(cs.impressions,0)>0)
		 -- and cs.client_id = '497'
		GROUP BY
			cs.client_id
			,cs.reporting_group
			,cs.reporting_month
			,cs.Channel
			,cs.`Campaign Name`;
            
		-- *** This will update actuals for campaigns within current month
		UPDATE client_rg_cmpgn_config cc
        LEFT JOIN
    (SELECT 
        cs.client_id,
            cs.reporting_group,
            cs.reporting_month,
            cs.Channel,
            cs.`Campaign Name`,
            ROUND(SUM(COALESCE(cs.cost, 0)), 2) AS actual_spend,
            sum(cs.impressions) impressions,
            sum(cs.clicks) clicks,
            sum(cs.reach) reach,     
            1 AS active
    FROM
        dw.campaign_summary cs
    WHERE
    /*
        NOT cs.`Campaign Name` LIKE 'Post%'
            AND */
            cs.reporting_month = v_reportingmonth
            AND cs.client_id LIKE v_client_id
    GROUP BY cs.client_id , cs.reporting_group , cs.reporting_month , cs.Channel , cs.`Campaign Name`) cs ON cs.client_id = cc.client_id
        AND cs.reporting_group = cc.reportinggroup
        AND cs.reporting_month = cc.reportingmonth
        AND cs.channel = cc.channel
        AND cs.`campaign name` = cc.campaign 
SET 
    cc.actual_spend = cs.actual_spend,
    cc.impressions = cs.impressions,
    cc.clicks = cs.clicks,
    cc.reach = cs.reach
WHERE
    cc.reportingmonth = v_reportingmonth
        AND cc.client_id LIKE v_client_id;
END]]></string>
		</procedure>
		<procedure name="upsert_adroll" id="Procedure-108e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_adroll`(IN iv_adr_acct_id varchar(50),
IN iv_adr_acct_name varchar(100),
IN iv_adr_sub_channel varchar(100),
IN iv_adr_cmpgn_id varchar(50),
IN iv_adr_cmpgn_name varchar(255),
IN iv_adr_cmpgn_start_date date,
IN iv_adr_cmpgn_end_date date,
IN iv_adr_date date,
IN iv_adr_impressions int(11),
IN iv_adr_clicks int(11),
IN iv_adr_spend decimal(10,4))
BEGIN
INSERT INTO `adroll`
(`adr_acct_id`,
`adr_acct_name`,
`adr_sub_channel`,
`adr_cmpgn_id`,
`adr_cmpgn_name`,
`adr_cmpgn_start_date`,
`adr_cmpgn_end_date`,
`adr_date`,
`adr_impressions`,
`adr_clicks`,
`adr_spend`)
VALUES (iv_adr_acct_id,
iv_adr_acct_name,
iv_adr_sub_channel,
iv_adr_cmpgn_id,
iv_adr_cmpgn_name,
iv_adr_cmpgn_start_date,
iv_adr_cmpgn_end_date,
iv_adr_date,
iv_adr_impressions,
iv_adr_clicks,
iv_adr_spend)
ON DUPLICATE KEY UPDATE
`adr_acct_id`=values(`adr_acct_id`),
`adr_acct_name`=values(`adr_acct_name`),
`adr_sub_channel`=values(`adr_sub_channel`),
`adr_cmpgn_id`=values(`adr_cmpgn_id`),
`adr_cmpgn_name`=values(`adr_cmpgn_name`),
`adr_cmpgn_start_date`=values(`adr_cmpgn_start_date`),
`adr_cmpgn_end_date`=values(`adr_cmpgn_end_date`),
`adr_date`=values(`adr_date`),
`adr_impressions`=values(`adr_impressions`),
`adr_clicks`=values(`adr_clicks`),
`adr_spend`=values(`adr_spend`);
END]]></string>
		</procedure>
		<procedure name="upsert_appointment_email" id="Procedure-21c5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_appointment_email`(
	IN iv_id varchar(255),
    IN iv_etag varchar(100),
	IN iv_receivedDateTime datetime,
	IN iv_subject varchar(500),
	IN iv_from_name varchar(500),
	IN iv_from_address varchar(500))
BEGIN
INSERT INTO `appointment_email`
(`id`,
`etag`,
`receivedDateTime`,
`subject`,
`from_name`,
`from_address`)
VALUES (iv_id,
iv_etag,
iv_receivedDateTime,
iv_subject,
iv_from_name,
iv_from_address)
ON DUPLICATE KEY UPDATE
`receivedDateTime`=values(`receivedDateTime`),
`subject`=values(`subject`),
`from_name`=values(`from_name`),
`from_address`=values(`from_address`);
END]]></string>
		</procedure>
		<procedure name="upsert_bing_ad" id="Procedure-c38" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_bing_ad`(
IN iv_bng_month date,
IN iv_bng_date date,
IN iv_bng_accountid varchar(45),
IN iv_bng_accountname varchar(255),
IN iv_bng_campaignid varchar(45),
IN iv_bng_campaignname varchar(255),
IN iv_bng_adgroupid varchar(45),
IN iv_bng_adgroupname varchar(255),
IN iv_bng_keywordid varchar(45),
IN iv_bng_keyword varchar(255),
IN iv_bng_adid varchar(45),
IN iv_bng_devicetype varchar(45),
IN iv_bng_clicks int(11),
IN iv_bng_impressions int(11),
IN iv_bng_spend decimal(10,4),
IN iv_bng_destinationurl varchar(255),
IN iv_bng_finalurl varchar(255),
IN iv_client_id varchar(5),
IN iv_reportinggroup varchar(100))
BEGIN
INSERT INTO `bing_ad`
(`bng_month`,
`bng_date`,
`bng_accountid`,
`bng_accountname`,
`bng_campaignid`,
`bng_campaignname`,
`bng_adgroupid`,
`bng_adgroupname`,
`bng_keywordid`,
`bng_keyword`,
`bng_adid`,
`bng_devicetype`,
`bng_clicks`,
`bng_impressions`,
`bng_spend`,
`bng_destinationurl`,
`bng_finalurl`,
`client_id`,
`reportinggroup`)
VALUES (iv_bng_month,
iv_bng_date,
iv_bng_accountid,
iv_bng_accountname,
iv_bng_campaignid,
iv_bng_campaignname,
iv_bng_adgroupid,
iv_bng_adgroupname,
iv_bng_keywordid,
iv_bng_keyword,
iv_bng_adid,
iv_bng_devicetype,
iv_bng_clicks,
iv_bng_impressions,
iv_bng_spend,
iv_bng_destinationurl,
iv_bng_finalurl,
iv_client_id,
iv_reportinggroup)
ON DUPLICATE KEY UPDATE
`bng_accountname`=values(`bng_accountname`),
`bng_campaignname`=values(`bng_campaignname`),
`bng_adgroupname`=values(`bng_adgroupname`),
`bng_keyword`=values(`bng_keyword`),
`bng_clicks`=values(`bng_clicks`),
`bng_impressions`=values(`bng_impressions`),
`bng_spend`=values(`bng_spend`),
`bng_destinationurl` = values(`bng_destinationurl`),
`bng_finalurl` = values(`bng_finalurl`),
`client_id` = values(`client_id`),
`reportinggroup` = values(`reportinggroup`);
END]]></string>
		</procedure>
		<procedure name="upsert_call" id="Procedure-19ee" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_call`(IN iv_call_id varchar(50),
IN iv_client_id varchar(3),
IN iv_call_datetime datetime,
IN iv_call_source varchar(100),
IN iv_call_duration int(11),
IN iv_call_answered int(11),
IN iv_caller_number varchar(20),
IN iv_caller_name varchar(100),
IN iv_caller_city varchar(100),
IN iv_caller_state varchar(100),
IN iv_caller_zip varchar(45),
IN iv_caller_country varchar(45),
IN iv_destination_number varchar(45),
IN iv_tracking_number varchar(45),
IN iv_call_url varchar(255),
IN iv_oi_caller_status varchar(100),
IN iv_oi_caller_provider varchar(100),
IN iv_oi_caller_dob varchar(45),
IN iv_oi_caller_name varchar(100),
IN iv_oi_comment varchar(1000),
IN iv_oi_reviewer varchar(100),
IN iv_oi_reviewer_duration int(11),
IN iv_oi_reviewer_date datetime,
IN iv_call_system varchar(45),
IN iv_call_tags varchar(500),
IN iv_call_category varchar(45))
BEGIN
INSERT INTO `call`
(`call_id`,
`client_id`,
`call_datetime`,
`call_source`,
`call_duration`,
`call_answered`,
`caller_number`,
`caller_name`,
`caller_city`,
`caller_state`,
`caller_zip`,
`caller_country`,
`destination_number`,
`tracking_number`,
`call_url`,
`oi_caller_status`,
`oi_caller_provider`,
`oi_caller_dob`,
`oi_caller_name`,
`oi_comment`,
`oi_reviewer`,
`oi_reviewer_duration`,
`oi_reviewer_date`,
`call_system`,
`call_tags`,
`call_category`)
VALUES (iv_call_id,
iv_client_id,
iv_call_datetime,
iv_call_source,
iv_call_duration,
iv_call_answered,
iv_caller_number,
iv_caller_name,
iv_caller_city,
iv_caller_state,
iv_caller_zip,
iv_caller_country,
iv_destination_number,
iv_tracking_number,
iv_call_url,
iv_oi_caller_status,
iv_oi_caller_provider,
iv_oi_caller_dob,
iv_oi_caller_name,
iv_oi_comment,
iv_oi_reviewer,
iv_oi_reviewer_duration,
iv_oi_reviewer_date,
iv_call_system,
iv_call_tags,
iv_call_category)
ON DUPLICATE KEY UPDATE
`call_id`=values(`call_id`),
`client_id`=values(`client_id`),
`call_datetime`=values(`call_datetime`),
`call_source`=values(`call_source`),
`call_duration`=values(`call_duration`),
`call_answered`=values(`call_answered`),
`caller_number`=values(`caller_number`),
`caller_name`=values(`caller_name`),
`caller_city`=values(`caller_city`),
`caller_state`=values(`caller_state`),
`caller_zip`=values(`caller_zip`),
`caller_country`=values(`caller_country`),
`destination_number`=values(`destination_number`),
`tracking_number`=values(`tracking_number`),
`call_url`=values(`call_url`),
`oi_caller_status`=values(`oi_caller_status`),
`oi_caller_provider`=values(`oi_caller_provider`),
`oi_caller_dob`=values(`oi_caller_dob`),
`oi_caller_name`=values(`oi_caller_name`),
`oi_comment`=values(`oi_comment`),
`oi_reviewer`=values(`oi_reviewer`),
`oi_reviewer_duration`=values(`oi_reviewer_duration`),
`oi_reviewer_date`=values(`oi_reviewer_date`),
`call_system`=values(`call_system`),
`call_tags`=values(`call_tags`),
`call_category`=values(`call_category`);
END]]></string>
		</procedure>
		<procedure name="upsert_call_manual" id="Procedure-365" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_call_manual`(
IN iv_ca_client_id varchar(5),
IN iv_ca_reporting_group varchar(100),
IN iv_ca_reporting_month date,
IN iv_ca_call_category varchar(45),
IN iv_ca_call_system varchar(45),
IN iv_ca_call_count int(11),
IN iv_ca_comment varchar(1000))
BEGIN
INSERT INTO `call_manual`
(
`ca_client_id`,
`ca_reporting_group`,
`ca_reporting_month`,
`ca_call_category`,
`ca_call_system`,
`ca_call_count`,
`ca_comment`)
VALUES (
iv_ca_client_id,
iv_ca_reporting_group,
iv_ca_reporting_month,
iv_ca_call_category,
iv_ca_call_system,
iv_ca_call_count,
iv_ca_comment)
ON DUPLICATE KEY UPDATE
`ca_client_id`=values(`ca_client_id`),
`ca_reporting_group`=values(`ca_reporting_group`),
`ca_reporting_month`=values(`ca_reporting_month`),
`ca_call_category`=values(`ca_call_category`),
`ca_call_system`=values(`ca_call_system`),
`ca_call_count`=values(`ca_call_count`),
`ca_comment`=values(`ca_comment`);
END]]></string>
		</procedure>
		<procedure name="upsert_call_reporting_group" id="Procedure-1f89" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_call_reporting_group`(IN iv_crg_clientid varchar(5),
IN iv_crg_trackingnumber varchar(45),
IN iv_crg_sourcename varchar(100),
IN iv_crg_reportinggroup varchar(100))
BEGIN
INSERT INTO `call_reporting_group`
(`crg_clientid`,
`crg_trackingnumber`,
`crg_sourcename`,
`crg_reportinggroup`)
VALUES (iv_crg_clientid,
iv_crg_trackingnumber,
iv_crg_sourcename,
iv_crg_reportinggroup)
ON DUPLICATE KEY UPDATE
`crg_clientid`=values(`crg_clientid`),
`crg_trackingnumber`=values(`crg_trackingnumber`),
`crg_sourcename`=values(`crg_sourcename`),
`crg_reportinggroup`=values(`crg_reportinggroup`);
END]]></string>
		</procedure>
		<procedure name="upsert_callrail" id="Procedure-1c16" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_callrail`(
  IN iv_cr_callid varchar(45),
  IN iv_cr_company varchar(100),
  IN iv_cr_companyid varchar(45),
  IN iv_cr_starttime varchar(45),
  IN iv_cr_sourcename varchar(100),
  IN iv_cr_source varchar(100),
  IN iv_cr_tags json,
  IN iv_cr_note varchar(2000),
  IN iv_cr_duration varchar(45),
  IN iv_cr_answered varchar(45),
  IN iv_cr_number varchar(45),
  IN iv_cr_name varchar(100),
  IN iv_cr_city varchar(45),
  IN iv_cr_state varchar(100),
  IN iv_cr_zip varchar(45),
  IN iv_cr_country varchar(45),
  IN iv_cr_firsttime varchar(45),
  IN iv_cr_destinationnumber varchar(45),
  IN iv_cr_trackingnumber varchar(45),
  IN iv_cr_recordingurl varchar(500)
)
begin
INSERT INTO callrail
(
cr_callid,
cr_company,
cr_companyid,
cr_starttime,
cr_sourcename,
cr_source,
cr_tags,
cr_note,
cr_duration,
cr_answered,	
cr_number,
cr_name,
cr_city,
cr_state,
cr_zip,
cr_country,
cr_firsttime,
cr_destinationnumber,
cr_trackingnumber,
cr_recordingurl
)
VALUES
(
iv_cr_callid,
iv_cr_company,
iv_cr_companyid,
iv_cr_starttime,
iv_cr_sourcename,
iv_cr_source,
iv_cr_tags,
iv_cr_note,
iv_cr_duration,
iv_cr_answered,
iv_cr_number,
iv_cr_name,
iv_cr_city,
iv_cr_state,
iv_cr_zip,
iv_cr_country,
iv_cr_firsttime,
iv_cr_destinationnumber,
iv_cr_trackingnumber,
iv_cr_recordingurl
)
on duplicate key update
cr_company=values(cr_company),
cr_companyid=values(cr_companyid),
cr_starttime=values(cr_starttime),
cr_sourcename=values(cr_sourcename),
cr_source=values(cr_source),
cr_tags=values(cr_tags),
cr_note=values(cr_note),
cr_duration=values(cr_duration),
cr_answered=values(cr_answered),
cr_number=values(cr_number),
cr_name=values(cr_name),
cr_city=values(cr_city),
cr_state=values(cr_state),
cr_zip=values(cr_zip),
cr_country=values(cr_country),
cr_firsttime=values(cr_firsttime),
cr_destinationnumber=values(cr_destinationnumber),
cr_trackingnumber=values(cr_trackingnumber),
cr_recordingurl=values(cr_recordingurl),
cr_callid=values(cr_callid);
end]]></string>
		</procedure>
		<procedure name="upsert_callrail_companies" id="Procedure-1d03" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_callrail_companies`(IN iv_crc_id varchar(45),
IN iv_crc_name varchar(500),
IN iv_crc_status varchar(45),
IN iv_crc_time_zone varchar(45),
IN iv_crc_clientid varchar(5),
IN iv_crc_created_at datetime,
IN iv_crc_disabled_at datetime)
BEGIN
INSERT INTO `callrail_companies`
(`crc_id`,
`crc_name`,
`crc_status`,
`crc_time_zone`,
`crc_clientid`,
`crc_created_at`,
`crc_disabled_at`)
VALUES (iv_crc_id,
iv_crc_name,
iv_crc_status,
iv_crc_time_zone,
iv_crc_clientid,
iv_crc_created_at,
iv_crc_disabled_at)
ON DUPLICATE KEY UPDATE
`crc_id`=values(`crc_id`),
`crc_name`=values(`crc_name`),
`crc_status`=values(`crc_status`),
`crc_time_zone`=values(`crc_time_zone`),
`crc_clientid`=values(`crc_clientid`),
`crc_created_at`=values(`crc_created_at`),
`crc_disabled_at`=values(`crc_disabled_at`);
END]]></string>
		</procedure>
		<procedure name="upsert_callrail_formsubmission" id="Procedure-1bda" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_callrail_formsubmission`(IN iv_id varchar(45),
IN iv_company_id varchar(45),
IN iv_form_data json,
IN iv_form_url varchar(400),
IN iv_referrer varchar(255),
IN iv_first_form varchar(45),
IN iv_submitted_at datetime,
IN iv_email varchar(100),
IN iv_phone varchar(100),
IN iv_first_name varchar(100),
IN iv_last_name varchar(100),
IN iv_location varchar(100))
BEGIN
INSERT INTO `callrail_formsubmission`
(`id`,
`company_id`,
`form_data`,
`form_url`,
`referrer`,
`first_form`,
`submitted_at`,
`email`,
`phone`,
`first_name`,
`last_name`,
`location`)
VALUES (iv_id,
iv_company_id,
iv_form_data,
iv_form_url,
iv_referrer,
iv_first_form,
iv_submitted_at,
iv_email,
iv_phone,
iv_first_name,
iv_last_name,
iv_location)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`company_id`=values(`company_id`),
`form_data`=values(`form_data`),
`form_url`=values(`form_url`),
`referrer`=values(`referrer`),
`first_form`=values(`first_form`),
`submitted_at`=values(`submitted_at`),
`email`=values(`email`),
`phone`=values(`phone`),
`first_name`=values(`first_name`),
`last_name`=values(`last_name`),
`location` = values(`location`);
END]]></string>
		</procedure>
		<procedure name="upsert_callrail_tags" id="Procedure-2407" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_callrail_tags`(IN iv_callid varchar(45),IN iv_name varchar(45),IN iv_created_at datetime)
BEGIN
INSERT INTO `callrail_tags`
(`callid`,`name`,`created_at`)
VALUES (iv_callid,iv_name,iv_created_at)
ON DUPLICATE KEY UPDATE
`callid`=values(`callid`),`name`=values(`name`),`created_at`=values(`created_at`);
END]]></string>
		</procedure>
		<procedure name="upsert_callrail_trackers" id="Procedure-d36" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_callrail_trackers`(IN iv_crt_id varchar(45),
IN iv_crt_name varchar(500),
IN iv_crt_type varchar(100),
IN iv_crt_status varchar(45),
IN iv_crt_destination_number varchar(45),
IN iv_crt_tracking_numbers varchar(100),
IN iv_crt_whisper_message varchar(100),
IN iv_crt_sms_supported varchar(45),
IN iv_crt_sms_enabled varchar(45),
IN iv_crt_company_id varchar(45),
IN iv_crt_company_name varchar(100),
IN iv_crt_clientid varchar(5),
IN iv_crt_created_at datetime,
IN iv_crt_disabled_at datetime,
IN iv_crt_source_landing varchar(500))
BEGIN
INSERT INTO `callrail_trackers`
(`crt_id`,
`crt_name`,
`crt_type`,
`crt_status`,
`crt_destination_number`,
`crt_tracking_numbers`,
`crt_whisper_message`,
`crt_sms_supported`,
`crt_sms_enabled`,
`crt_company_id`,
`crt_company_name`,
`crt_clientid`,
`crt_created_at`,
`crt_disabled_at`,
`crt_source_landing`)
VALUES (iv_crt_id,
iv_crt_name,
iv_crt_type,
iv_crt_status,
iv_crt_destination_number,
iv_crt_tracking_numbers,
iv_crt_whisper_message,
iv_crt_sms_supported,
iv_crt_sms_enabled,
iv_crt_company_id,
iv_crt_company_name,
iv_crt_clientid,
iv_crt_created_at,
iv_crt_disabled_at,
iv_crt_source_landing)
ON DUPLICATE KEY UPDATE
`crt_name`=values(`crt_name`),
`crt_type`=values(`crt_type`),
`crt_status`=values(`crt_status`),
`crt_destination_number`=values(`crt_destination_number`),
`crt_tracking_numbers`=values(`crt_tracking_numbers`),
`crt_whisper_message`=values(`crt_whisper_message`),
`crt_sms_supported`=values(`crt_sms_supported`),
`crt_sms_enabled`=values(`crt_sms_enabled`),
`crt_company_id`=values(`crt_company_id`),
`crt_company_name`=values(`crt_company_name`),
`crt_clientid`=values(`crt_clientid`),
`crt_created_at`=values(`crt_created_at`),
`crt_disabled_at`=values(`crt_disabled_at`),
`crt_source_landing`=values(`crt_source_landing`);
END]]></string>
		</procedure>
		<procedure name="upsert_client_gmb" id="Procedure-9e5" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_client_gmb`(
	IN iv_gmb_location_id varchar(45),
	IN iv_gmb_placeid varchar(128),
	IN iv_gmb_location_name varchar(256),
	IN iv_gmb_active varchar(45),
  IN iv_gmb_locality varchar(100) ,
  IN iv_gmb_administrativearea varchar(100),
  IN iv_gmb_addressline varchar(255),
  IN iv_gmb_postalcode varchar(45),
  IN iv_gmb_mapsurl varchar(255),
  IN iv_gmb_clientid varchar(255),
  IN iv_gmb_storecode varchar(255),
  IN iv_gmb_accountid varchar(128)
  )
BEGIN
	declare v_npi varchar(45);

	SELECT 
    gmb_npi
INTO v_npi FROM
    client_gmb
WHERE
    gmb_location_id LIKE iv_gmb_location_id;

if v_npi is null then
	set v_npi = '0';
end if;

INSERT INTO `client_gmb`
	(
    client_id,
	`gmb_npi`,
	`gmb_location_id`,
	`gmb_placeid`,
	`gmb_location_name`,
	`gmb_active`,
	`gmb_locality`,
  `gmb_administrativearea`,
  `gmb_addressline`,
  `gmb_postalcode`,
  `gmb_mapsurl`  ,
  gmb_storecode,
  gmb_accountid
  )
VALUES 
	(
    iv_gmb_clientid,
	v_npi,
	iv_gmb_location_id,
	iv_gmb_placeid,
	iv_gmb_location_name,
	iv_gmb_active,
  iv_gmb_locality,
  iv_gmb_administrativearea,
  iv_gmb_addressline,
  iv_gmb_postalcode,
  iv_gmb_mapsurl ,
  iv_gmb_storecode,
  iv_gmb_accountid
  )
ON DUPLICATE KEY UPDATE
client_id = values(`client_id`),
	`gmb_location_id`=values(`gmb_location_id`),
	`gmb_placeid`=values(`gmb_placeid`),
	`gmb_location_name`=values(`gmb_location_name`),
	`gmb_active`=values(`gmb_active`),
	`gmb_locality`=values(`gmb_locality`),
  `gmb_administrativearea`=values(`gmb_administrativearea`),
  `gmb_addressline`=values(`gmb_addressline`),
  `gmb_postalcode`=values(`gmb_postalcode`),
  `gmb_mapsurl`=values(`gmb_mapsurl`) ,
  gmb_storecode = values(gmb_storecode),
  gmb_accountid = values(gmb_accountid)
  ;
  
END]]></string>
		</procedure>
		<procedure name="upsert_client_npiregistry_postal" id="Procedure-1585" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_client_npiregistry_postal`(IN iv_npi varchar(20),
IN iv_loc_address varchar(255),
IN iv_loc_address2 varchar(255),
IN iv_loc_city varchar(100),
IN iv_loc_state varchar(45),
IN iv_loc_postalcode varchar(45),
IN iv_loc_country varchar(45),
IN iv_loc_fax varchar(45),
IN iv_loc_phone varchar(45),
IN iv_loc_purpose varchar(10),
IN iv_mail_address varchar(255),
IN iv_mail_address2 varchar(255),
IN iv_mail_city varchar(100),
IN iv_mail_state varchar(45),
IN iv_mail_postalcode varchar(45),
IN iv_mail_country varchar(45),
IN iv_mail_fax varchar(45),
IN iv_mail_phone varchar(45),
IN iv_mail_purpose varchar(45),
IN iv_credential varchar(45),
IN iv_first_name varchar(100),
IN iv_last_name varchar(255),
IN iv_middle_name varchar(100),
IN iv_gender varchar(10),
IN iv_last_updated date,
IN iv_sole_proprietor varchar(10),
IN iv_name varchar(255),
IN iv_organization_name varchar(255),
IN iv_type varchar(10))
BEGIN
INSERT INTO `client_npiregistry_postal`
(`npi`,
`loc_address`,
`loc_address2`,
`loc_city`,
`loc_state`,
`loc_postalcode`,
`loc_country`,
`loc_fax`,
`loc_phone`,
`loc_purpose`,
`mail_address`,
`mail_address2`,
`mail_city`,
`mail_state`,
`mail_postalcode`,
`mail_country`,
`mail_fax`,
`mail_phone`,
`mail_purpose`,
`credential`,
`first_name`,
`last_name`,
`middle_name`,
`gender`,
`last_updated`,
`sole_proprietor`,
`name`,
`organization_name`,
`type`)
VALUES (iv_npi,
iv_loc_address,
iv_loc_address2,
iv_loc_city,
iv_loc_state,
iv_loc_postalcode,
iv_loc_country,
iv_loc_fax,
iv_loc_phone,
iv_loc_purpose,
iv_mail_address,
iv_mail_address2,
iv_mail_city,
iv_mail_state,
iv_mail_postalcode,
iv_mail_country,
iv_mail_fax,
iv_mail_phone,
iv_mail_purpose,
iv_credential,
iv_first_name,
iv_last_name,
iv_middle_name,
iv_gender,
iv_last_updated,
iv_sole_proprietor,
iv_name,
iv_organization_name,
iv_type)
ON DUPLICATE KEY UPDATE
`npi`=values(`npi`),
`loc_address`=values(`loc_address`),
`loc_address2`=values(`loc_address2`),
`loc_city`=values(`loc_city`),
`loc_state`=values(`loc_state`),
`loc_postalcode`=values(`loc_postalcode`),
`loc_country`=values(`loc_country`),
`loc_fax`=values(`loc_fax`),
`loc_phone`=values(`loc_phone`),
`loc_purpose`=values(`loc_purpose`),
`mail_address`=values(`mail_address`),
`mail_address2`=values(`mail_address2`),
`mail_city`=values(`mail_city`),
`mail_city`=values(`mail_state`),
`mail_postalcode`=values(`mail_postalcode`),
`mail_country`=values(`mail_country`),
`mail_fax`=values(`mail_fax`),
`mail_phone`=values(`mail_phone`),
`mail_purpose`=values(`mail_purpose`),
`credential`=values(`credential`),
`first_name`=values(`first_name`),
`last_name`=values(`last_name`),
`middle_name`=values(`middle_name`),
`last_updated`=values(`last_updated`),
`gender`=values(`gender`),
`sole_proprietor`=values(`sole_proprietor`),
`name`=values(`name`),
`organization_name`=values(`organization_name`),
`type`=values(`type`);
END]]></string>
		</procedure>
		<procedure name="upsert_client_npiregistry_taxonomy" id="Procedure-107e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_client_npiregistry_taxonomy`(IN iv_npi varchar(20),
IN iv_code varchar(45),
IN iv_desc varchar(100),
IN iv_license varchar(45),
IN iv_primary varchar(5),
IN iv_state varchar(5))
BEGIN
INSERT INTO `client_npiregistry_taxonomy`
(`npi`,
`code`,
`desc`,
`license`,
`primary`,
`state`)
VALUES (iv_npi,
iv_code,
iv_desc,
iv_license,
iv_primary,
iv_state)
ON DUPLICATE KEY UPDATE
`npi`=values(`npi`),
`code`=values(`code`),
`desc`=values(`desc`),
`license`=values(`license`),
`primary`=values(`primary`),
`state`=values(`state`);
END]]></string>
		</procedure>
		<procedure name="upsert_client_projects_online" id="Procedure-1a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_client_projects_online`(
IN iv_client_id varchar(5),
IN iv_id int(11),
IN iv_title varchar(255),
IN iv_internal varchar(45),
IN iv_type varchar(45),
IN iv_contractual varchar(45),
IN iv_creation_date date,
IN iv_workflow_state varchar(45),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100),
IN iv_reportingmonth date,
IN iv_updated_date date)
BEGIN
INSERT INTO `client_projects_online`
(
`client_id`,
`id`,
`title`,
`internal`,
`type`,
`contractual`,
`creation_date`,
`workflow_state`,
`active`,
`crt_user`,
`mdfd_user`,
`reportingmonth`,
`updated_date`)
VALUES (
iv_client_id,
iv_id,
iv_title,
iv_internal,
iv_type,
iv_contractual,
iv_creation_date,
iv_workflow_state,
iv_active,
iv_crt_user,
iv_mdfd_user,
iv_reportingmonth,
iv_updated_date)
ON DUPLICATE KEY UPDATE
`client_id`=values(`client_id`),
`id`=values(`id`),
`title`=values(`title`),
`internal`=values(`internal`),
`type`=values(`type`),
`contractual`=values(`contractual`),
`creation_date`=values(`creation_date`),
`workflow_state`=values(`workflow_state`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`),
`reportingmonth`=values(`reportingmonth`),
`updated_date`=values(`updated_date`);

END]]></string>
		</procedure>
		<procedure name="upsert_ecommunications" id="Procedure-1112" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_ecommunications`(IN iv_e_clientid varchar(5),
IN iv_e_system varchar(50),
IN iv_e_campaignid varchar(50),
IN iv_e_fromemail varchar(100),
IN iv_e_fromname varchar(100),
IN iv_e_name varchar(255),
IN iv_e_replyto varchar(100),
IN iv_e_sentdatetime datetime,
IN iv_e_subject varchar(255),
IN iv_e_recipients_total int(11),
IN iv_e_webversionurl varchar(500),
IN iv_e_bounced int(11),
IN iv_e_clicks int(11),
IN iv_e_forwards int(11),
IN iv_e_likes int(11),
IN iv_e_mentions int(11),
IN iv_e_spamcomplaints int(11),
IN iv_e_opened_total int(11),
IN iv_e_opened_unique int(11),
IN iv_e_unsubscribed int(11),
IN iv_e_recipients int(11))
BEGIN

DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'upsert_ecommunications', @full_error, 0); 
	end;
	

INSERT INTO `ecommunications`
(`e_clientid`,
`e_system`,
`e_campaignid`,
`e_fromemail`,
`e_fromname`,
`e_name`,
`e_replyto`,
`e_sentdatetime`,
`e_subject`,
`e_recipients_total`,
`e_webversionurl`,
`e_bounced`,
`e_clicks`,
`e_forwards`,
`e_likes`,
`e_mentions`,
`e_spamcomplaints`,
`e_opened_total`,
`e_opened_unique`,
`e_unsubscribed`,
`e_recipients`)
VALUES (iv_e_clientid,
iv_e_system,
iv_e_campaignid,
iv_e_fromemail,
iv_e_fromname,
iv_e_name,
iv_e_replyto,
iv_e_sentdatetime,
iv_e_subject,
iv_e_recipients_total,
iv_e_webversionurl,
iv_e_bounced,
iv_e_clicks,
iv_e_forwards,
iv_e_likes,
iv_e_mentions,
iv_e_spamcomplaints,
iv_e_opened_total,
iv_e_opened_unique,
iv_e_unsubscribed,
iv_e_recipients)
ON DUPLICATE KEY UPDATE
`e_clientid`=values(`e_clientid`),
`e_system`=values(`e_system`),
`e_campaignid`=values(`e_campaignid`),
`e_fromemail`=values(`e_fromemail`),
`e_fromname`=values(`e_fromname`),
`e_name`=values(`e_name`),
`e_replyto`=values(`e_replyto`),
`e_sentdatetime`=values(`e_sentdatetime`),
`e_subject`=values(`e_subject`),
`e_recipients_total`=values(`e_recipients_total`),
`e_webversionurl`=values(`e_webversionurl`),
`e_bounced`=values(`e_bounced`),
`e_clicks`=values(`e_clicks`),
`e_forwards`=values(`e_forwards`),
`e_likes`=values(`e_likes`),
`e_mentions`=values(`e_mentions`),
`e_spamcomplaints`=values(`e_spamcomplaints`),
`e_opened_total`=values(`e_opened_total`),
`e_opened_unique`=values(`e_opened_unique`),
`e_unsubscribed`=values(`e_unsubscribed`),
`e_recipients`=values(`e_recipients`);
END]]></string>
		</procedure>
		<procedure name="upsert_eltoro_orderlines" id="Procedure-1bb6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_eltoro_orderlines`(
IN iv_eltrrdrlns_id varchar(50),
IN iv_eltrrdrlns_name varchar(100),
IN iv_eltrrdrlns_campaign_id varchar(100),
IN iv_eltrrdrlns_campaign_name varchar(100),
IN iv_eltrrdrlns_startdate datetime,
IN iv_eltrrdrlns_enddate datetime,
IN iv_eltrrdrlns_total_impressions int(11),
IN iv_eltrrdrlns_cpm int(11),
IN iv_eltrrdrlns_click_through_url varchar(100),
IN iv_eltrrdrlns_thumb varchar(500),
IN iv_eltrrdrlns_first_deployed datetime,
IN iv_eltrrdrlns_last_deployed datetime,
IN iv_eltrrdrlns_completed datetime)
BEGIN
INSERT INTO `eltoro_orderlines`
(`eltrrdrlns_id`,
`eltrrdrlns_name`,
`eltrrdrlns_campaign_id`,
`eltrrdrlns_campaign_name`,
`eltrrdrlns_startdate`,
`eltrrdrlns_enddate`,
`eltrrdrlns_total_impressions`,
`eltrrdrlns_cpm`,
`eltrrdrlns_click_through_url`,
`eltrrdrlns_thumb`,
`eltrrdrlns_first_deployed`,
`eltrrdrlns_last_deployed`,
`eltrrdrlns_completed`)
VALUES (iv_eltrrdrlns_id,
iv_eltrrdrlns_name,
iv_eltrrdrlns_campaign_id,
iv_eltrrdrlns_campaign_name,
iv_eltrrdrlns_startdate,
iv_eltrrdrlns_enddate,
iv_eltrrdrlns_total_impressions,
iv_eltrrdrlns_cpm,
iv_eltrrdrlns_click_through_url,
iv_eltrrdrlns_thumb,
iv_eltrrdrlns_first_deployed,
iv_eltrrdrlns_last_deployed,
iv_eltrrdrlns_completed)
ON DUPLICATE KEY UPDATE
`eltrrdrlns_name`=values(`eltrrdrlns_name`),
`eltrrdrlns_campaign_id`=values(`eltrrdrlns_campaign_id`),
`eltrrdrlns_campaign_name`=values(`eltrrdrlns_campaign_name`),
`eltrrdrlns_startdate`=values(`eltrrdrlns_startdate`),
`eltrrdrlns_enddate`=values(`eltrrdrlns_enddate`),
`eltrrdrlns_total_impressions`=values(`eltrrdrlns_total_impressions`),
`eltrrdrlns_cpm`=values(`eltrrdrlns_cpm`),
`eltrrdrlns_click_through_url`=values(`eltrrdrlns_click_through_url`),
`eltrrdrlns_thumb`=values(`eltrrdrlns_thumb`),
`eltrrdrlns_first_deployed`=values(`eltrrdrlns_first_deployed`),
`eltrrdrlns_last_deployed`=values(`eltrrdrlns_last_deployed`),
`eltrrdrlns_completed`=values(`eltrrdrlns_completed`);
END]]></string>
		</procedure>
		<procedure name="upsert_eltoro_stats" id="Procedure-108b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_eltoro_stats`(IN iv_eltrstts_orderline_id varchar(100),
IN iv_eltrstts_startdate date,
IN iv_eltrstts_enddate date,
IN iv_eltrstts_impressions int(11),
IN iv_eltrstts_clicks int(11))
BEGIN
INSERT INTO `eltoro_stats`
(`eltrstts_orderline_id`,
`eltrstts_startdate`,
`eltrstts_enddate`,
`eltrstts_impressions`,
`eltrstts_clicks`)
VALUES (iv_eltrstts_orderline_id,
iv_eltrstts_startdate,
iv_eltrstts_enddate,
iv_eltrstts_impressions,
iv_eltrstts_clicks)
ON DUPLICATE KEY UPDATE
`eltrstts_enddate`=values(`eltrstts_enddate`),
`eltrstts_impressions`=values(`eltrstts_impressions`),
`eltrstts_clicks`=values(`eltrstts_clicks`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_ad" id="Procedure-1db3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_ad`(IN iv_fbad_ad_id bigint(20),
IN iv_fbad_ad_name varchar(255),
IN iv_fbad_adset_id bigint(20),
IN iv_fbad_adset_name varchar(255),
IN iv_fbad_campaign_id bigint(20),
IN iv_fbad_campaign_name varchar(255),
IN iv_fbad_date_start date,
IN iv_fbad_date_stop date,
IN iv_fbad_age varchar(45),
IN iv_fbad_gender varchar(45),
IN iv_fbad_reach int(11),
IN iv_fbad_spend decimal(10,4),
IN iv_fbad_impressions bigint(20),
IN iv_fbad_clicks bigint(20),
IN iv_fbad_unique_clicks bigint(20),
IN iv_fbad_total_unique_actions bigint(20),
IN iv_fbad_objective varchar(255),
IN iv_fbad_actions json,
IN iv_fbad_like int(11),
IN iv_fbad_comment int(11),
IN iv_fbad_post int(11),
IN iv_fbad_post_reaction int(11),
IN iv_fbad_link_click int(11),
IN iv_fbad_page_engagement int(11),
IN iv_fbad_post_engagement int(11))
BEGIN
INSERT INTO `facebook_ad`
(`fbad_ad_id`,
`fbad_ad_name`,
`fbad_adset_id`,
`fbad_adset_name`,
`fbad_campaign_id`,
`fbad_campaign_name`,
`fbad_date_start`,
`fbad_date_stop`,
`fbad_age`,
`fbad_gender`,
`fbad_reach`,
`fbad_spend`,
`fbad_impressions`,
`fbad_clicks`,
`fbad_unique_clicks`,
`fbad_total_unique_actions`,
`fbad_objective`,
`fbad_actions`,
`fbad_like`,
`fbad_comment`,
`fbad_post`,
`fbad_post_reaction`,
`fbad_link_click`,
`fbad_page_engagement`,
`fbad_post_engagement`)
VALUES (iv_fbad_ad_id,
iv_fbad_ad_name,
iv_fbad_adset_id,
iv_fbad_adset_name,
iv_fbad_campaign_id,
iv_fbad_campaign_name,
iv_fbad_date_start,
iv_fbad_date_stop,
iv_fbad_age,
iv_fbad_gender,
iv_fbad_reach,
iv_fbad_spend,
iv_fbad_impressions,
iv_fbad_clicks,
iv_fbad_unique_clicks,
iv_fbad_total_unique_actions,
iv_fbad_objective,
iv_fbad_actions,
iv_fbad_like,
iv_fbad_comment,
iv_fbad_post,
iv_fbad_post_reaction,
iv_fbad_link_click,
iv_fbad_page_engagement,
iv_fbad_post_engagement)
ON DUPLICATE KEY UPDATE
`fbad_ad_name`=values(`fbad_ad_name`),
`fbad_adset_name`=values(`fbad_adset_name`),
`fbad_campaign_name`=values(`fbad_campaign_name`),
`fbad_reach`=values(`fbad_reach`),
`fbad_spend`=values(`fbad_spend`),
`fbad_impressions`=values(`fbad_impressions`),
`fbad_clicks`=values(`fbad_clicks`),
`fbad_unique_clicks`=values(`fbad_unique_clicks`),
`fbad_total_unique_actions`=values(`fbad_total_unique_actions`),
`fbad_objective`=values(`fbad_objective`),
`fbad_actions`=values(`fbad_actions`),
`fbad_like`=values(`fbad_like`),
`fbad_comment`=values(`fbad_comment`),
`fbad_post`=values(`fbad_post`),
`fbad_post_reaction`=values(`fbad_post_reaction`),
`fbad_link_click`=values(`fbad_link_click`),
`fbad_page_engagement`=values(`fbad_page_engagement`),
`fbad_post_engagement`=values(`fbad_post_engagement`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_ad_device" id="Procedure-12aa" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_ad_device`(IN iv_fbad_ad_id bigint(20),
IN iv_fbad_ad_name varchar(255),
IN iv_fbad_adset_id bigint(20),
IN iv_fbad_adset_name varchar(255),
IN iv_fbad_campaign_id bigint(20),
IN iv_fbad_campaign_name varchar(255),
IN iv_fbad_date_start date,
IN iv_fbad_date_stop date,
IN iv_fbad_device varchar(45),
IN iv_fbad_reach int(11),
IN iv_fbad_spend decimal(10,4),
IN iv_fbad_impressions bigint(20),
IN iv_fbad_clicks bigint(20),
IN iv_fbad_unique_clicks bigint(20),
IN iv_fbad_total_unique_actions bigint(20),
IN iv_fbad_objective varchar(255),
IN iv_fbad_actions json,
IN iv_fbad_like int(11),
IN iv_fbad_comment int(11),
IN iv_fbad_post int(11),
IN iv_fbad_post_reaction int(11),
IN iv_fbad_link_click int(11),
IN iv_fbad_page_engagement int(11),
IN iv_fbad_post_engagement int(11))
BEGIN
INSERT INTO `facebook_ad_device`
(`fbad_ad_id`,
`fbad_ad_name`,
`fbad_adset_id`,
`fbad_adset_name`,
`fbad_campaign_id`,
`fbad_campaign_name`,
`fbad_date_start`,
`fbad_date_stop`,
`fbad_device`,
`fbad_reach`,
`fbad_spend`,
`fbad_impressions`,
`fbad_clicks`,
`fbad_unique_clicks`,
`fbad_total_unique_actions`,
`fbad_objective`,
`fbad_actions`,
`fbad_like`,
`fbad_comment`,
`fbad_post`,
`fbad_post_reaction`,
`fbad_link_click`,
`fbad_page_engagement`,
`fbad_post_engagement`)
VALUES (iv_fbad_ad_id,
iv_fbad_ad_name,
iv_fbad_adset_id,
iv_fbad_adset_name,
iv_fbad_campaign_id,
iv_fbad_campaign_name,
iv_fbad_date_start,
iv_fbad_date_stop,
iv_fbad_device,
iv_fbad_reach,
iv_fbad_spend,
iv_fbad_impressions,
iv_fbad_clicks,
iv_fbad_unique_clicks,
iv_fbad_total_unique_actions,
iv_fbad_objective,
iv_fbad_actions,
iv_fbad_like,
iv_fbad_comment,
iv_fbad_post,
iv_fbad_post_reaction,
iv_fbad_link_click,
iv_fbad_page_engagement,
iv_fbad_post_engagement)
ON DUPLICATE KEY UPDATE
`fbad_ad_name`=values(`fbad_ad_name`),
`fbad_adset_name`=values(`fbad_adset_name`),
`fbad_campaign_name`=values(`fbad_campaign_name`),
`fbad_reach`=values(`fbad_reach`),
`fbad_spend`=values(`fbad_spend`),
`fbad_impressions`=values(`fbad_impressions`),
`fbad_clicks`=values(`fbad_clicks`),
`fbad_unique_clicks`=values(`fbad_unique_clicks`),
`fbad_total_unique_actions`=values(`fbad_total_unique_actions`),
`fbad_objective`=values(`fbad_objective`),
`fbad_actions`=values(`fbad_actions`),
`fbad_like`=values(`fbad_like`),
`fbad_comment`=values(`fbad_comment`),
`fbad_post`=values(`fbad_post`),
`fbad_post_reaction`=values(`fbad_post_reaction`),
`fbad_link_click`=values(`fbad_link_click`),
`fbad_page_engagement`=values(`fbad_page_engagement`),
`fbad_post_engagement`=values(`fbad_post_engagement`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_ads" id="Procedure-dbd" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_ads`(
IN iv_fbad_ad_id bigint(20),
IN iv_fbad_ad_name varchar(255),
IN iv_fbad_ad_status varchar(255),
IN iv_fbad_adset_id bigint(20),
IN iv_fbad_adset_name varchar(255),
IN iv_fbad_adset_status varchar(255),
IN iv_fbad_campaign_id bigint(20),
IN iv_fbad_campaign_name varchar(255),
IN iv_fbad_campaign_status varchar(255),
IN iv_fbad_date_start date,
IN iv_fbad_date_stop date,
IN iv_fbad_page_id bigint(20),
IN iv_fbad_bid_type varchar(50),
IN iv_fbad_recommendations json,
IN iv_fbad_client_id varchar(5),
IN iv_fbad_reportinggroup varchar(150))
BEGIN
INSERT INTO `facebook_ads`
(`fbad_ad_id`,
`fbad_ad_name`,
`fbad_ad_status`,
`fbad_adset_id`,
`fbad_adset_name`,
`fbad_adset_status`,
`fbad_campaign_id`,
`fbad_campaign_name`,
`fbad_campaign_status`,
`fbad_date_start`,
`fbad_date_stop`,
`fbad_page_id`,
`fbad_bid_type`,
`fbad_recommendations`,
`client_id`,
`reportinggroup`)
VALUES (
iv_fbad_ad_id,
iv_fbad_ad_name,
iv_fbad_ad_status,
iv_fbad_adset_id,
iv_fbad_adset_name,
iv_fbad_adset_status,
iv_fbad_campaign_id,
iv_fbad_campaign_name,
iv_fbad_campaign_status,
iv_fbad_date_start,
iv_fbad_date_stop,
iv_fbad_page_id,
iv_fbad_bid_type,
iv_fbad_recommendations,
iv_fbad_client_id,
iv_fbad_reportinggroup)
ON DUPLICATE KEY UPDATE
`fbad_ad_name`=values(`fbad_ad_name`),
`fbad_ad_status`=values(`fbad_ad_status`),
`fbad_adset_name`=values(`fbad_adset_name`),
`fbad_adset_status`=values(`fbad_adset_status`),
`fbad_campaign_name`=values(`fbad_campaign_name`),
`fbad_campaign_status`=values(`fbad_campaign_status`),
`fbad_date_start`=values(`fbad_date_start`),
`fbad_date_stop`=values(`fbad_date_stop`),
`fbad_page_id`=values(`fbad_page_id`),
`fbad_bid_type`=values(`fbad_bid_type`),
`fbad_recommendations`=values(`fbad_recommendations`),
`client_id` = values(`client_id`),
`reportinggroup` = values(`reportinggroup`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_like_demographic" id="Procedure-2160" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_like_demographic`(IN iv_fbplkdmgrphc_pageid varchar(20),
IN iv_fbplkdmgrphc_end_time datetime,
IN iv_fbplkdmgrphc_gender varchar(1),
IN iv_fbplkdmgrphc_age_group varchar(20),
IN iv_fbplkdmgrphc_likes int(11))
BEGIN
INSERT INTO `facebook_like_demographic`
(`fbplkdmgrphc_pageid`,
`fbplkdmgrphc_end_time`,
`fbplkdmgrphc_gender`,
`fbplkdmgrphc_age_group`,
`fbplkdmgrphc_likes`)
VALUES (iv_fbplkdmgrphc_pageid,
iv_fbplkdmgrphc_end_time,
iv_fbplkdmgrphc_gender,
iv_fbplkdmgrphc_age_group,
iv_fbplkdmgrphc_likes)
ON DUPLICATE KEY UPDATE
`fbplkdmgrphc_pageid`=values(`fbplkdmgrphc_pageid`),
`fbplkdmgrphc_end_time`=values(`fbplkdmgrphc_end_time`),
`fbplkdmgrphc_gender`=values(`fbplkdmgrphc_gender`),
`fbplkdmgrphc_age_group`=values(`fbplkdmgrphc_age_group`),
`fbplkdmgrphc_likes`=values(`fbplkdmgrphc_likes`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_metrics_agegender" id="Procedure-17a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_metrics_agegender`(IN iv_fbad_ad_id bigint(20),
IN iv_fbad_adset_id bigint(20),
IN iv_fbad_campaign_id bigint(20),
IN iv_fbad_reporting_month date,
IN iv_fbad_age varchar(45),
IN iv_fbad_gender varchar(45),
IN iv_fbad_reach int(11),
IN iv_fbad_spend decimal(10,4),
IN iv_fbad_impressions bigint(20),
IN iv_fbad_clicks bigint(20),
IN iv_fbad_unique_clicks bigint(20),
IN iv_fbad_total_unique_actions bigint(20),
IN iv_fbad_objective varchar(255),
IN iv_fbad_actions json,
IN iv_fbad_like int(11),
IN iv_fbad_comment int(11),
IN iv_fbad_post int(11),
IN iv_fbad_post_reaction int(11),
IN iv_fbad_link_click int(11),
IN iv_fbad_page_engagement int(11),
IN iv_fbad_post_engagement int(11))
BEGIN
INSERT INTO `facebook_metrics_agegender`
(`fbad_ad_id`,
`fbad_adset_id`,
`fbad_campaign_id`,
`fbad_reporting_month`,
`fbad_age`,
`fbad_gender`,
`fbad_reach`,
`fbad_spend`,
`fbad_impressions`,
`fbad_clicks`,
`fbad_unique_clicks`,
`fbad_total_unique_actions`,
`fbad_objective`,
`fbad_actions`,
`fbad_like`,
`fbad_comment`,
`fbad_post`,
`fbad_post_reaction`,
`fbad_link_click`,
`fbad_page_engagement`,
`fbad_post_engagement`)
VALUES (iv_fbad_ad_id,
iv_fbad_adset_id,
iv_fbad_campaign_id,
iv_fbad_reporting_month,
iv_fbad_age,
iv_fbad_gender,
iv_fbad_reach,
iv_fbad_spend,
iv_fbad_impressions,
iv_fbad_clicks,
iv_fbad_unique_clicks,
iv_fbad_total_unique_actions,
iv_fbad_objective,
iv_fbad_actions,
iv_fbad_like,
iv_fbad_comment,
iv_fbad_post,
iv_fbad_post_reaction,
iv_fbad_link_click,
iv_fbad_page_engagement,
iv_fbad_post_engagement)
ON DUPLICATE KEY UPDATE
`fbad_ad_id`=values(`fbad_ad_id`),
`fbad_adset_id`=values(`fbad_adset_id`),
`fbad_campaign_id`=values(`fbad_campaign_id`),
`fbad_reporting_month`=values(`fbad_reporting_month`),
`fbad_age`=values(`fbad_age`),
`fbad_gender`=values(`fbad_gender`),
`fbad_reach`=values(`fbad_reach`),
`fbad_spend`=values(`fbad_spend`),
`fbad_impressions`=values(`fbad_impressions`),
`fbad_clicks`=values(`fbad_clicks`),
`fbad_unique_clicks`=values(`fbad_unique_clicks`),
`fbad_total_unique_actions`=values(`fbad_total_unique_actions`),
`fbad_objective`=values(`fbad_objective`),
`fbad_actions`=values(`fbad_actions`),
`fbad_like`=values(`fbad_like`),
`fbad_comment`=values(`fbad_comment`),
`fbad_post`=values(`fbad_post`),
`fbad_post_reaction`=values(`fbad_post_reaction`),
`fbad_link_click`=values(`fbad_link_click`),
`fbad_page_engagement`=values(`fbad_page_engagement`),
`fbad_post_engagement`=values(`fbad_post_engagement`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_metrics_device" id="Procedure-25c9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_metrics_device`(IN iv_fbad_ad_id bigint(20),
IN iv_fbad_adset_id bigint(20),
IN iv_fbad_campaign_id bigint(20),
IN iv_fbad_reporting_month date,
IN iv_fbad_device varchar(45),
IN iv_fbad_reach int(11),
IN iv_fbad_spend decimal(10,4),
IN iv_fbad_impressions bigint(20),
IN iv_fbad_clicks bigint(20),
IN iv_fbad_unique_clicks bigint(20),
IN iv_fbad_total_unique_actions bigint(20),
IN iv_fbad_objective varchar(255),
IN iv_fbad_actions json,
IN iv_fbad_like int(11),
IN iv_fbad_comment int(11),
IN iv_fbad_post int(11),
IN iv_fbad_post_reaction int(11),
IN iv_fbad_link_click int(11),
IN iv_fbad_page_engagement int(11),
IN iv_fbad_post_engagement int(11))
BEGIN
INSERT INTO `facebook_metrics_device`
(`fbad_ad_id`,
`fbad_adset_id`,
`fbad_campaign_id`,
`fbad_reporting_month`,
`fbad_device`,
`fbad_reach`,
`fbad_spend`,
`fbad_impressions`,
`fbad_clicks`,
`fbad_unique_clicks`,
`fbad_total_unique_actions`,
`fbad_objective`,
`fbad_actions`,
`fbad_like`,
`fbad_comment`,
`fbad_post`,
`fbad_post_reaction`,
`fbad_link_click`,
`fbad_page_engagement`,
`fbad_post_engagement`)
VALUES (iv_fbad_ad_id,
iv_fbad_adset_id,
iv_fbad_campaign_id,
iv_fbad_reporting_month,
iv_fbad_device,
iv_fbad_reach,
iv_fbad_spend,
iv_fbad_impressions,
iv_fbad_clicks,
iv_fbad_unique_clicks,
iv_fbad_total_unique_actions,
iv_fbad_objective,
iv_fbad_actions,
iv_fbad_like,
iv_fbad_comment,
iv_fbad_post,
iv_fbad_post_reaction,
iv_fbad_link_click,
iv_fbad_page_engagement,
iv_fbad_post_engagement)
ON DUPLICATE KEY UPDATE
`fbad_ad_id`=values(`fbad_ad_id`),
`fbad_adset_id`=values(`fbad_adset_id`),
`fbad_campaign_id`=values(`fbad_campaign_id`),
`fbad_reporting_month`=values(`fbad_reporting_month`),
`fbad_device`=values(`fbad_device`),
`fbad_reach`=values(`fbad_reach`),
`fbad_spend`=values(`fbad_spend`),
`fbad_impressions`=values(`fbad_impressions`),
`fbad_clicks`=values(`fbad_clicks`),
`fbad_unique_clicks`=values(`fbad_unique_clicks`),
`fbad_total_unique_actions`=values(`fbad_total_unique_actions`),
`fbad_objective`=values(`fbad_objective`),
`fbad_actions`=values(`fbad_actions`),
`fbad_like`=values(`fbad_like`),
`fbad_comment`=values(`fbad_comment`),
`fbad_post`=values(`fbad_post`),
`fbad_post_reaction`=values(`fbad_post_reaction`),
`fbad_link_click`=values(`fbad_link_click`),
`fbad_page_engagement`=values(`fbad_page_engagement`),
`fbad_post_engagement`=values(`fbad_post_engagement`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_page" id="Procedure-1d6a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_page`(IN iv_fbpg_id varchar(50),
IN iv_fbpg_name varchar(500),
IN iv_fbpg_perms varchar(500),
IN iv_fbpg_category varchar(500),
IN iv_fbpg_category_list varchar(500),
IN iv_fbpg_likes int)
BEGIN
INSERT INTO `facebook_page`
(`fbpg_id`,
`fbpg_name`,
`fbpg_perms`,
`fbpg_category`,
`fbpg_category_list`,
`fbpg_likes`)
VALUES (iv_fbpg_id,
iv_fbpg_name,
iv_fbpg_perms,
iv_fbpg_category,
iv_fbpg_category_list,
iv_fbpg_likes)
ON DUPLICATE KEY UPDATE
`fbpg_name`=values(`fbpg_name`),
`fbpg_perms`=values(`fbpg_perms`),
`fbpg_category`=values(`fbpg_category`),
`fbpg_category_list`=values(`fbpg_category_list`),
`fbpg_likes`=values(`fbpg_likes`)
;
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_page_likes" id="Procedure-5f8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_page_likes`(IN iv_fbpglks_pageid varchar(50),
IN iv_fbpglks_reportingmonth date,
IN iv_fbpglks_likes int(11))
BEGIN
INSERT INTO `facebook_page_likes`
(`fbpglks_pageid`,
`fbpglks_reportingmonth`,
`fbpglks_likes`)
VALUES (iv_fbpglks_pageid,
iv_fbpglks_reportingmonth,
iv_fbpglks_likes)
ON DUPLICATE KEY UPDATE
`fbpglks_pageid`=values(`fbpglks_pageid`),
`fbpglks_reportingmonth`=values(`fbpglks_reportingmonth`),
`fbpglks_likes`=values(`fbpglks_likes`);
END]]></string>
		</procedure>
		<procedure name="upsert_facebook_post" id="Procedure-18c2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_facebook_post`(IN iv_fbpst_pageid varchar(20),
IN iv_fbpst_id varchar(45),
IN iv_fbpst_name varchar(1000),
IN iv_fbpst_message text,
IN iv_fbpst_created_time datetime,
IN iv_fbpst_likes int(11),
IN iv_fbpst_comments int(11),
IN iv_fbpst_reactions int(11),
IN iv_fbpst_shares int(11),
IN  iv_fbpst_impressions_organic int(11),
IN iv_fbpst_impressions_paid int(11),
IN iv_fbpst_reach_organic int(11),
IN iv_fbpst_reach_paid int(11),
IN iv_fbpst_clicks int(11),
IN iv_fbpst_picture_url varchar(500)
)
BEGIN
INSERT INTO `facebook_post`
(`fbpst_pageid`,
`fbpst_id`,
`fbpst_name`,
`fbpst_message`,
`fbpst_created_time`,
`fbpst_likes`,
`fbpst_comments`,
`fbpst_reactions`,
`fbpst_shares`,
    fbpst_impressions_organic,
    fbpst_impressions_paid,
    fbpst_reach_organic,
    fbpst_reach_paid,
    fbpst_clicks,
    fbpst_picture_url)
VALUES (iv_fbpst_pageid,
iv_fbpst_id,
iv_fbpst_name,
iv_fbpst_message,
iv_fbpst_created_time,
iv_fbpst_likes,
iv_fbpst_comments,
iv_fbpst_reactions,
iv_fbpst_shares,
iv_fbpst_impressions_organic,
iv_fbpst_impressions_paid,
iv_fbpst_reach_organic,
iv_fbpst_reach_paid,
iv_fbpst_clicks,
iv_fbpst_picture_url)
ON DUPLICATE KEY UPDATE
`fbpst_pageid`=values(`fbpst_pageid`),
`fbpst_id`=values(`fbpst_id`),
`fbpst_name`=values(`fbpst_name`),
`fbpst_message`=values(`fbpst_message`),
`fbpst_created_time`=values(`fbpst_created_time`),
`fbpst_likes`=values(`fbpst_likes`),
`fbpst_comments`=values(`fbpst_comments`),
`fbpst_reactions`=values(`fbpst_reactions`),
`fbpst_shares`=values(`fbpst_shares`),
fbpst_impressions_organic=values(fbpst_impressions_organic),
fbpst_impressions_paid=values(fbpst_impressions_paid),
fbpst_reach_organic=values(fbpst_reach_organic),
fbpst_reach_paid=values(fbpst_reach_paid),
fbpst_clicks=values(fbpst_clicks),
fbpst_picture_url=values(fbpst_picture_url);
END]]></string>
		</procedure>
		<procedure name="upsert_google_ad" id="Procedure-b76" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_ad`(
IN iv_ggl_ad_id varchar(45),
IN iv_ggl_account varchar(45),
IN iv_ggl_campaign_status varchar(45),
IN iv_ggl_ad_network varchar(45),
IN iv_ggl_campaign_id varchar(45),
IN iv_ggl_campaign varchar(255),
IN iv_ggl_device varchar(50),
IN iv_ggl_month date,
IN iv_ggl_date date,
IN iv_ggl_impressions int,
IN iv_ggl_clicks int,
IN iv_ggl_cost int,
IN iv_ggl_finalurl varchar(255)
)
BEGIN

INSERT INTO `google_ad`
(
ggl_ad_id,
`ggl_account`,
`ggl_campaign_status`,
`ggl_ad_network`,
`ggl_campaign_id`,
`ggl_campaign`,
`ggl_device`,
`ggl_month`,
`ggl_date`,
`ggl_impressions`,
`ggl_clicks`,
`ggl_cost`,
`ggl_finalurl`)
VALUES (
iv_ggl_ad_id,
iv_ggl_account,
iv_ggl_campaign_status,
iv_ggl_ad_network,
iv_ggl_campaign_id,
iv_ggl_campaign,
iv_ggl_device,
iv_ggl_month,
iv_ggl_date,
iv_ggl_impressions,
iv_ggl_clicks,
iv_ggl_cost,
iv_ggl_finalurl
) as new
ON DUPLICATE KEY UPDATE
`ggl_campaign_status`=new.`ggl_campaign_status`,
`ggl_campaign`=new.`ggl_campaign`,
`ggl_device`=new.`ggl_device`,
`ggl_month`=new.`ggl_month`,
`ggl_impressions`=new.`ggl_impressions`,
`ggl_clicks`=new.`ggl_clicks`,
`ggl_cost`=new.`ggl_cost`
;
END]]></string>
		</procedure>
		<procedure name="upsert_google_category" id="Procedure-1cd4" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_category`(IN iv_categoryId varchar(255),
IN iv_displayName varchar(255))
BEGIN
INSERT INTO `google_category`
(`categoryId`,
`displayName`)
VALUES (iv_categoryId,
iv_displayName)
ON DUPLICATE KEY UPDATE
`categoryId`=values(`categoryId`),
`displayName`=values(`displayName`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_location" id="Procedure-1b6b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_location`(
IN iv_locationId varchar(45),
IN iv_locationDetails json,
IN iv_locationDetailsDiff json,
In iv_locationDiffMask json,
IN iv_locationAdmins json,
IN iv_locationMedia json,
IN iv_RefreshDate datetime)
BEGIN
INSERT INTO `google_location`
(`locationId`,
`locationDetails`,
`locationDetailsDiff`,
`DiffMask`,
`admins`,
`media`,
`RefreshDate`)
VALUES (iv_locationId,
iv_locationDetails,
iv_locationDetailsDiff,
iv_locationDiffMask,
iv_locationAdmins,
iv_locationMedia,
iv_RefreshDate)
ON DUPLICATE KEY UPDATE
`locationDetails`=values(`locationDetails`),
`locationDetailsDiff`=values(`locationDetailsDiff`),
`DiffMask`=values(`DiffMask`),
`admins`=values(`admins`),
`media`=values(`media`),
`RefreshDate`=values(`RefreshDate`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_location_admin" id="Procedure-21ef" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_location_admin`(
IN iv_locationId varchar(45),
IN iv_admins json
)
BEGIN
INSERT INTO `google_location`
(`locationId`,
`admins`)
VALUES (iv_locationId,
iv_admins)
ON DUPLICATE KEY UPDATE
`admins`=values(`admins`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_location_diff" id="Procedure-237d" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_location_diff`(
IN iv_locationId varchar(45),
IN iv_locationDetailsDiff json,
IN iv_DiffMask json,
IN iv_DiffRefreshDate datetime)
BEGIN
INSERT INTO `google_location`
(`locationId`,
`locationDetailsDiff`,
`DiffMask`,
`DiffRefreshDate`)
VALUES (iv_locationId,
iv_locationDetailsDiff,
iv_DiffMask,
iv_DiffRefreshDate)
ON DUPLICATE KEY UPDATE
`locationDetailsDiff`=values(`locationDetailsDiff`),
`DiffMask`=values(`DiffMask`),
`DiffRefreshDate`=values(`DiffRefreshDate`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_location_media" id="Procedure-24f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_location_media`(
IN iv_locationId varchar(45),
IN iv_media json
)
BEGIN
INSERT INTO `google_location`
(`locationId`,
`media`)
VALUES (iv_locationId,
iv_media)
ON DUPLICATE KEY UPDATE
`media`=values(`media`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_question" id="Procedure-1692" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_question`(
IN iv_name varchar(1000),
IN iv_locationId varchar(45),
IN iv_author_displayName varchar(100),
IN iv_author_profilePhotoUrl varchar(500),
IN iv_author_type varchar(45),
IN iv_text varchar(1000),
IN iv_createTime datetime,
IN iv_updateTime datetime,
IN iv_topAnswers json)
BEGIN
INSERT INTO `google_question`
(
`name`,
`locationId`,
`author_displayName`,
`author_profilePhotoUrl`,
`author_type`,
`text`,
`createTime`,
`updateTime`,
topAnswers)
VALUES (
iv_name,
iv_locationId,
iv_author_displayName,
iv_author_profilePhotoUrl,
iv_author_type,
iv_text,
iv_createTime,
iv_updateTime,
iv_topAnswers)
ON DUPLICATE KEY UPDATE
`name`=values(`name`),
`locationId`=values(`locationId`),
`author_displayName`=values(`author_displayName`),
`author_profilePhotoUrl`=values(`author_profilePhotoUrl`),
`author_type`=values(`author_type`),
`text`=values(`text`),
`createTime`=values(`createTime`),
`updateTime`=values(`updateTime`),
topAnswers=values(topAnswers);

END]]></string>
		</procedure>
		<procedure name="upsert_google_question_answer" id="Procedure-2d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_question_answer`(
IN iv_name varchar(500),
IN iv_question_name varchar(500),
IN iv_author_displayName varchar(100),
IN iv_author_profilePhotoUrl varchar(500),
IN iv_text varchar(1000),
IN iv_createTime datetime,
IN iv_updateTime datetime)
BEGIN
INSERT INTO `google_question_answer`
(`name`,
question_name,
`author_displayName`,
`author_profilePhotoUrl`,
`text`,
`createTime`,
`updateTime`)
VALUES (iv_name,
iv_question_name,
iv_author_displayName,
iv_author_profilePhotoUrl,
iv_text,
iv_createTime,
iv_updateTime)
ON DUPLICATE KEY UPDATE
`question_name`=values(`question_name`),
`author_displayName`=values(`author_displayName`),
`author_profilePhotoUrl`=values(`author_profilePhotoUrl`),
`text`=values(`text`),
`createTime`=values(`createTime`),
`updateTime`=values(`updateTime`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_review" id="Procedure-230a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_review`(
IN iv_reviewId varchar(255),
IN iv_reviewer_profilephotourl varchar(255),
IN iv_reviewer_displayname varchar(100),
IN iv_starRating varchar(45),
IN iv_comment longtext,
IN iv_createTime datetime,
IN iv_updateTime datetime,
IN iv_name varchar(1000),
IN iv_locationId varchar(45),
IN iv_RefreshDate datetime)
BEGIN
INSERT INTO `google_review`
(
`reviewId`,
`reviewer_profilephotourl`,
`reviewer_displayname`,
`starRating`,
`comment`,
`createTime`,
`updateTime`,
`name`,
`locationId`,
`RefreshDate`)
VALUES (
iv_reviewId,
iv_reviewer_profilephotourl,
iv_reviewer_displayname,
iv_starRating,
iv_comment,
iv_createTime,
iv_updateTime,
iv_name,
iv_locationId,
iv_RefreshDate)
ON DUPLICATE KEY UPDATE
`reviewId`=values(`reviewId`),
`reviewer_profilephotourl`=values(`reviewer_profilephotourl`),
`reviewer_displayname`=values(`reviewer_displayname`),
`starRating`=values(`starRating`),
`comment`=values(`comment`),
`createTime`=values(`createTime`),
`updateTime`=values(`updateTime`),
`name`=values(`name`),
`locationId`=values(`locationId`),
`RefreshDate`=values(`RefreshDate`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_review_reply" id="Procedure-25a7" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_review_reply`(
IN iv_reviewReply longtext,
IN iv_updateTime datetime,
IN iv_reviewId varchar(255))
BEGIN
INSERT INTO `google_review_reply`
(
`reviewReply`,
`updateTime`,
`reviewId`)
VALUES (
iv_reviewReply,
iv_updateTime,
iv_reviewId)
ON DUPLICATE KEY UPDATE
`reviewReply`=values(`reviewReply`),
`updateTime`=values(`updateTime`),
`reviewId`=values(`reviewId`);
END]]></string>
		</procedure>
		<procedure name="upsert_google_review_reply_approval" id="Procedure-1c10" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_google_review_reply_approval`(
IN iv_reviewId varchar(255),
IN iv_approvalState varchar(100),
IN iv_reviewReply longtext,
IN iv_updateTime datetime,
IN iv_approvalEmail varchar(255))
BEGIN
INSERT INTO `google_review_reply_approval`
(
`reviewId`,
`approvalState`,
`reviewReply`,
`updateTime`,
`approvalEmail`)
VALUES (
iv_reviewId,
iv_approvalState,
iv_reviewReply,
iv_updateTime,
iv_approvalEmail)
ON DUPLICATE KEY UPDATE
`reviewId`=values(`reviewId`),
`approvalState`=values(`approvalState`),
`reviewReply`=values(`reviewReply`),
`updateTime`=values(`updateTime`),
`approvalEmail`=values(`approvalEmail`);
END]]></string>
		</procedure>
		<procedure name="upsert_groundtruth" id="Procedure-ada" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_groundtruth`(IN iv_gt_acct_id int(11),
IN iv_gt_acct_name varchar(100),
IN iv_gt_acct_timezone varchar(100),
IN iv_gt_acct_advertiser_domain varchar(100),
IN iv_gt_cmpgn_id int(11),
IN iv_gt_cmpgn_name varchar(100),
IN iv_gt_cmpgn_start_date date,
IN iv_gt_cmpgn_end_date date,
IN iv_gt_date date,
IN iv_gt_impressions int(11),
IN iv_gt_clicks int(11),
IN iv_gt_spend decimal(10,4),
IN iv_gt_reach int(11))
BEGIN
INSERT INTO `groundtruth`
(`gt_acct_id`,
`gt_acct_name`,
`gt_acct_timezone`,
`gt_acct_advertiser_domain`,
`gt_cmpgn_id`,
`gt_cmpgn_name`,
`gt_cmpgn_start_date`,
`gt_cmpgn_end_date`,
`gt_date`,
`gt_impressions`,
`gt_clicks`,
`gt_spend`,
`gt_reach`)
VALUES (iv_gt_acct_id,
iv_gt_acct_name,
iv_gt_acct_timezone,
iv_gt_acct_advertiser_domain,
iv_gt_cmpgn_id,
iv_gt_cmpgn_name,
iv_gt_cmpgn_start_date,
iv_gt_cmpgn_end_date,
iv_gt_date,
iv_gt_impressions,
iv_gt_clicks,
iv_gt_spend,
iv_gt_reach)
ON DUPLICATE KEY UPDATE
`gt_acct_name`=values(`gt_acct_name`),
`gt_acct_timezone`=values(`gt_acct_timezone`),
`gt_acct_advertiser_domain`=values(`gt_acct_advertiser_domain`),
`gt_cmpgn_name`=values(`gt_cmpgn_name`),
`gt_cmpgn_start_date`=values(`gt_cmpgn_start_date`),
`gt_cmpgn_end_date`=values(`gt_cmpgn_end_date`),
`gt_impressions`=values(`gt_impressions`),
`gt_clicks`=values(`gt_clicks`),
`gt_spend`=values(`gt_spend`),
`gt_reach`=values(`gt_reach`);
END]]></string>
		</procedure>
		<procedure name="upsert_listings_summary" id="Procedure-4bb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_listings_summary`()
BEGIN

DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'upsert_listings_summary', @full_error, 0); 
	end;
    
	Drop temporary table if exists _l;

	create temporary table _l (
		client_id varchar(5),
		client_name varchar(158),
		client_key varchar(163),
		npi_l varchar(45),
		provider_l longtext,
		platform varchar(50),
		source longtext,
		listing_url longtext,
		review_date date, 
		starting_rating decimal(44,2),
		starting_reviews decimal(33,0),
		organic_rating bigint,
		organic_reviews bigint,
		venel_assisted_rating decimal(44,2),
		venel_assisted_reviews decimal(33,0),
		public_rating decimal(35,2),
		public_reviews decimal(33,0),
		total_rating decimal(35,2),
		total_reviews decimal(33,0),
		INDEX (client_id, client_name, client_key, npi_l)
	);

	insert into _l (
		client_id,
		client_name,
		client_key,
		npi_l,
		provider_l,
		platform,
		source,
		listing_url,
		review_date,
		starting_rating,
		starting_reviews,
		organic_rating,
		organic_reviews,
		venel_assisted_rating,
		venel_assisted_reviews,
		public_rating,
		public_reviews,
		total_rating,
		total_reviews
	)
	SELECT 
		`dw`.`c`.`client_id`,
		`dw`.`c`.`client_description`,
		CONCAT(`dw`.`c`.`client_id`,
				`dw`.`c`.`client_description`) AS `Client Key`,
		CONCAT('', `dw`.`t`.`testimonial_npi`) AS `NPI`,
		TRIM(`dw`.`p`.`provider_name`) AS `Listing`,
		`ts`.`source` AS `Platform`,
		`ts`.`source` AS `Source`,
		(CASE
			WHEN (`ts`.`source_sitepathurl` IS NULL) THEN `dw`.`p`.`provider_website_url`
			ELSE CONCAT(`ts`.`source_url`, `sp`.`path`)
		END) AS `Listing URL`,
		CAST(`dw`.`t`.`testimonial_creation_date` AS DATE) AS `Review Date`,
		0 AS `prevenel_starrating`,
		0 AS `prevenel_reviews`,
		0 AS `organic_starrating`,
		0 AS `organic_reviews`,
		`dw`.`t`.`testimonial_rating` AS `venel_starrating`,
		`dw`.`t`.`testimonial_rating_count` AS `venel_reviews`,
		(CASE
			WHEN (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') THEN 0
			ELSE `dw`.`t`.`testimonial_rating`
		END) AS `public_starrating`,
		(CASE
			WHEN (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') THEN 0
			ELSE `dw`.`t`.`testimonial_rating_count`
		END) AS `public_reviews`,
		`dw`.`t`.`testimonial_rating` AS `total_starrating`,
		`dw`.`t`.`testimonial_rating_count` AS `total_reviews`
	FROM
		(((((`dw`.`vw_testimonial` `t`
		JOIN `dw`.`vw_client` `c` ON ((`dw`.`t`.`testimonial_client_id` = `dw`.`c`.`client_id`)))
		JOIN `dw`.`vw_provider` `p` ON ((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`)))
		LEFT JOIN `dw`.`testimonial_source` `ts` ON ((`dw`.`t`.`testimonial_source` = `ts`.`source`)))
		LEFT JOIN `dw`.`provider_clientsite` `pc` ON ((`dw`.`p`.`provider_npi` = `pc`.`npi`)))
		LEFT JOIN `dw`.`provider_sitepath` `sp` ON (((`sp`.`source` = `ts`.`source_abbreviation`)
			AND (`sp`.`npi` = `dw`.`t`.`testimonial_npi`))))
	WHERE
		((`dw`.`t`.`testimonial_client_id` LIKE '%')
			AND (`dw`.`t`.`testimonial_published` = 'Yes')
			AND (`dw`.`p`.`provider_gender` IS NULL))
	;

	insert into _l (
		client_id,
		client_name,
		client_key,
		npi_l,
		provider_l,
		platform,
		source,
		listing_url,
		review_date,
		starting_rating,
		starting_reviews,
		organic_rating,
		organic_reviews,
		venel_assisted_rating,
		venel_assisted_reviews,
		public_rating,
		public_reviews,
		total_rating,
		total_reviews
	)
	 select
		`dw`.`c`.`client_id`,
		`dw`.`c`.`client_description`,
		CONCAT(`dw`.`c`.`client_id`,
				`dw`.`c`.`client_description`) AS `Client Key`,
		(CASE
			WHEN (`dw`.`gl`.`Store Code` LIKE '%-Practice%') THEN CONCAT(`dw`.`c`.`client_id`, '001')
			ELSE COALESCE(`dw`.`p`.`provider_npi`,
					CONCAT(`dw`.`c`.`client_id`, '001'))
		END) AS `npi`,
		TRIM(`dw`.`gl`.`Location Name`) AS `listing`,
		'Google' AS `platform`,
		CONCAT('Google-',
				COALESCE(`dw`.`gl`.`Store Code`, 'No StoreCode')) AS `Source`,
		`dw`.`gl`.`Search URL` AS `listing_url`,
		CAST(COALESCE(`gr`.`createTime`, '2010-01-01')
			AS DATE) AS `reviewdate`,
		(CASE
			WHEN (`gr`.`createTime` >= `dw`.`c`.`client_startdate`) THEN NULL
			ELSE CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED)
		END) AS `prevenel_starrating`,
		(CASE
			WHEN
				((`gr`.`createTime` < `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` IS NOT NULL))
			THEN
				1
			ELSE 0
		END) AS `prevenel_reviews`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` < 5))
			THEN
				CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED)
			ELSE 0
		END) AS `organic_starrating`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` < 5))
			THEN
				1
			ELSE 0
		END) AS `organic_reviews`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` = 5))
			THEN
				CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED)
			ELSE 0
		END) AS `venel_starrating`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` = 5))
			THEN
				1
			ELSE 0
		END) AS `venel_reviews`,
		CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `public_starRating`,
		(CASE
			WHEN (`gr`.`starRating` IS NOT NULL) THEN 1
			ELSE 0
		END) AS `public_reviews`,
		CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `total_starRating`,
		(CASE
			WHEN (`gr`.`starRating` IS NOT NULL) THEN 1
			ELSE NULL
		END) AS `total_reviews`
	FROM
		(((`dw`.`vw_google_locations` `gl`
		JOIN `dw`.`vw_client` `c` ON ((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`)))
		LEFT JOIN `dw`.`google_review` `gr` ON ((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`)))
		LEFT JOIN `dw`.`vw_provider` `p` ON ((`dw`.`p`.`provider_name` = `dw`.`gl`.`Location Name`)))
	WHERE
		(`dw`.`gl`.`Client Id` LIKE '%')
	;

	insert into _l (
		client_id,
		client_name,
		client_key,
		npi_l,
		provider_l,
		platform,
		source,
		listing_url,
		review_date,
		starting_rating,
		starting_reviews,
		organic_rating,
		organic_reviews,
		venel_assisted_rating,
		venel_assisted_reviews,
		public_rating,
		public_reviews,
		total_rating,
		total_reviews
	)
	SELECT 
		`datashake`.`vw_reviews_inferred`.`client_id`,
		`datashake`.`vw_reviews_inferred`.`client_description`,
		`datashake`.`vw_reviews_inferred`.`Client Key` AS `Client Key`,
		`datashake`.`vw_reviews_inferred`.`NPI` AS `NPI`,
		`datashake`.`vw_reviews_inferred`.`Listing` AS `Listing`,
		`datashake`.`vw_reviews_inferred`.`Platform` AS `Platform`,
		`datashake`.`vw_reviews_inferred`.`Source` AS `Source`,
		`datashake`.`vw_reviews_inferred`.`Listing URL` AS `Listing URL`,
		`datashake`.`vw_reviews_inferred`.`Review Date` AS `Review Date`,
		`datashake`.`vw_reviews_inferred`.`prevenel_starrating` AS `prevenel_starrating`,
		`datashake`.`vw_reviews_inferred`.`prevenel_reviews` AS `prevenel_reviews`,
		`datashake`.`vw_reviews_inferred`.`organic_starrating` AS `organic_starrating`,
		`datashake`.`vw_reviews_inferred`.`organic_reviews` AS `organic_reviews`,
		`datashake`.`vw_reviews_inferred`.`venel_starrating` AS `venel_starrating`,
		`datashake`.`vw_reviews_inferred`.`venel_reviews` AS `venel_reviews`,
		`datashake`.`vw_reviews_inferred`.`public_starrating` AS `public_starrating`,
		`datashake`.`vw_reviews_inferred`.`public_reviews` AS `public_reviews`,
		`datashake`.`vw_reviews_inferred`.`total_starrating` AS `total_starrating`,
		`datashake`.`vw_reviews_inferred`.`total_reviews` AS `total_reviews`
	FROM
		`datashake`.`vw_reviews_inferred` 
	;


	/*create table listings_summary (
		`Client ID` varchar(5),
		`Client Description` varchar(158),
		`Provider Path` varchar(4),
		`Provider Name` varchar(500),
		Provider varchar(500),
		`Provider Location Name` longtext,
		placeid varchar(500),
		`Provider Store Code` varchar(500),
		Listing longtext,
		`Listing URL` longtext,
		Source longtext,
		Platform varchar(50),
		`Review Date` date, 
		`Starting Rating` decimal(44,2),
		`Starting Reviews` decimal(33,0),
		`Organic Rating` bigint,
		`Organic Reviews` bigint,
		`Venel-Assisted Rating` decimal(44,2),
		`Venel-Assisted Reviews` decimal(33,0),
		`Public Rating` decimal(35,2),
		`Public Reviews` decimal(33,0),
		`Total Rating` decimal(35,2),
		`Total Reviews` decimal(33,0),
		`Google Listings` decimal(35,2),
		INDEX (`Client ID`, Provider)
	);*/

	truncate table dw.listings_summary;
	insert into dw.listings_summary  
    select 
		x.client_id,
		prov.NPI as npi,
		prov.Provider as provider, 
        prov.`Provider Last Name` as provider_last_name,
		x.listing_url as 'listing_url', 
        x.Platform,
		x.Source, 
		x.`Total Rating` as avg_starrating,
		x.`Total Reviews` as total_reviews,
        (case
        when prov.`Active Status`= 'Active' then 1
        else 0
        end) as is_active
	from dw.vw_pbi_providers prov
	join (
		select 
				client_id,
				npi_l, 
				provider_l, 
				listing_url, 
				Platform, 
				Source,
				(case
					when sum(total_reviews) <> 0 then cast(sum(total_rating)/sum(total_reviews) as float)
					else 0
				end) as 'Total Rating',
				sum(total_reviews) AS 'Total Reviews'
		from dw._l
		where review_date >= '2010-01-01'
			AND total_reviews > 0
			AND total_rating >= 1
			AND platform <> 'Reparative Medicine Doctor Reviews'
		group by 1, 2, 3, 4, 5, 6
	) x on prov.NPI = x.npi_l
;

END]]></string>
		</procedure>
		<procedure name="upsert_listings_summary_fixed_npi" id="Procedure-1818" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_listings_summary_fixed_npi`()
BEGIN

DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'upsert_listings_summary_fixed_npi', @full_error, 0); 
	end;
	
    Drop temporary table if exists _lf;
	
    create temporary table _lf (
		client_id varchar(5),
		client_name varchar(158),
		client_key varchar(163),
		npi_lf varchar(45),
		provider_lf longtext,
		platform varchar(50),
		source longtext,
		listing_url longtext,
		review_date date, 
		starting_rating decimal(44,2),
		starting_reviews decimal(33,0),
		organic_rating bigint,
		organic_reviews bigint,
		venel_assisted_rating decimal(44,2),
		venel_assisted_reviews decimal(33,0),
		public_rating decimal(35,2),
		public_reviews decimal(33,0),
		total_rating decimal(35,2),
		total_reviews decimal(33,0),
		INDEX (client_id, client_name, client_key, npi_lf)
	);

	insert into _lf (
		client_id,
		client_name,
		client_key,
		npi_lf,
		provider_lf,
		platform,
		source,
		listing_url,
		review_date,
		starting_rating,
		starting_reviews,
		organic_rating,
		organic_reviews,
		venel_assisted_rating,
		venel_assisted_reviews,
		public_rating,
		public_reviews,
		total_rating,
		total_reviews
	)
	SELECT 
		`dw`.`c`.`client_id`,
		`dw`.`c`.`client_description`,
		CONCAT(`dw`.`c`.`client_id`,
				`dw`.`c`.`client_description`) AS `Client Key`,
		CONCAT('', `dw`.`t`.`testimonial_npi`) AS `NPI`,
		TRIM(`dw`.`p`.`provider_name`) AS `Listing`,
		`ts`.`source` AS `Platform`,
		`ts`.`source` AS `Source`,
		(CASE
			WHEN (`ts`.`source_sitepathurl` IS NULL) THEN `dw`.`p`.`provider_website_url`
			ELSE CONCAT(`ts`.`source_url`, `sp`.`path`)
		END) AS `Listing URL`,
		CAST(`dw`.`t`.`testimonial_creation_date` AS DATE) AS `Review Date`,
		0 AS `prevenel_starrating`,
		0 AS `prevenel_reviews`,
		0 AS `organic_starrating`,
		0 AS `organic_reviews`,
		`dw`.`t`.`testimonial_rating` AS `venel_starrating`,
		`dw`.`t`.`testimonial_rating_count` AS `venel_reviews`,
		(CASE
			WHEN (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') THEN 0
			ELSE `dw`.`t`.`testimonial_rating`
		END) AS `public_starrating`,
		(CASE
			WHEN (`ts`.`source_ext_description` = 'Negative Reviews (Internal Only)') THEN 0
			ELSE `dw`.`t`.`testimonial_rating_count`
		END) AS `public_reviews`,
		`dw`.`t`.`testimonial_rating` AS `total_starrating`,
		`dw`.`t`.`testimonial_rating_count` AS `total_reviews`
	FROM
		(((((`dw`.`vw_testimonial` `t`
		JOIN `dw`.`vw_client` `c` ON ((`dw`.`t`.`client_id` = `dw`.`c`.`client_id`)))
		JOIN `dw`.`vw_provider` `p` ON ((`dw`.`t`.`testimonial_npi` = `dw`.`p`.`provider_npi`)))
		LEFT JOIN `dw`.`testimonial_source` `ts` ON ((`dw`.`t`.`testimonial_source` = `ts`.`source`)))
		LEFT JOIN `dw`.`provider_clientsite` `pc` ON ((`dw`.`p`.`provider_npi` = `pc`.`npi`)))
		LEFT JOIN `dw`.`provider_sitepath` `sp` ON (((`sp`.`source` = `ts`.`source_abbreviation`)
			AND (`sp`.`npi` = `dw`.`t`.`testimonial_npi`))))
	WHERE
		((`dw`.`t`.`testimonial_client_id` LIKE '%')
			AND (`dw`.`t`.`testimonial_published` = 'Yes')
			AND (`dw`.`p`.`provider_gender` IS NULL))
	;

	insert into _lf (
		client_id,
		client_name,
		client_key,
		npi_lf,
		provider_lf,
		platform,
		source,
		listing_url,
		review_date,
		starting_rating,
		starting_reviews,
		organic_rating,
		organic_reviews,
		venel_assisted_rating,
		venel_assisted_reviews,
		public_rating,
		public_reviews,
		total_rating,
		total_reviews
	)
	 select
		`dw`.`c`.`client_id`,
		`dw`.`c`.`client_description`,
		CONCAT(`dw`.`c`.`client_id`,
				`dw`.`c`.`client_description`) AS `Client Key`,
		(CASE
			WHEN (`dw`.`gl`.`Store Code` LIKE '%-Practice%') THEN IF(SUBSTRING(`dw`.`c`.`client_id`, 1, 1) = 's', CONCAT('1', SUBSTRING(`dw`.`c`.`client_id`, -3, 3), '001'), CONCAT(`dw`.`c`.`client_id`, '001'))
			ELSE COALESCE(`dw`.`p`.`provider_npi`,
					IF(SUBSTRING(`dw`.`c`.`client_id`, 1, 1) = 's', CONCAT('1', SUBSTRING(`dw`.`c`.`client_id`, -3, 3), '001'), CONCAT(`dw`.`c`.`client_id`, '001')))
		END) AS `npi`,
		TRIM(`dw`.`gl`.`Location Name`) AS `listing`,
		'Google' AS `platform`,
		CONCAT('Google-',
				COALESCE(`dw`.`gl`.`Store Code`, 'No StoreCode')) AS `Source`,
		`dw`.`gl`.`Search URL` AS `listing_url`,
		CAST(COALESCE(`gr`.`createTime`, '2010-01-01')
			AS DATE) AS `reviewdate`,
		(CASE
			WHEN (`gr`.`createTime` >= `dw`.`c`.`client_startdate`) THEN NULL
			ELSE CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED)
		END) AS `prevenel_starrating`,
		(CASE
			WHEN
				((`gr`.`createTime` < `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` IS NOT NULL))
			THEN
				1
			ELSE 0
		END) AS `prevenel_reviews`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` < 5))
			THEN
				CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED)
			ELSE 0
		END) AS `organic_starrating`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` < 5))
			THEN
				1
			ELSE 0
		END) AS `organic_reviews`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` = 5))
			THEN
				CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED)
			ELSE 0
		END) AS `venel_starrating`,
		(CASE
			WHEN
				((`gr`.`createTime` >= `dw`.`c`.`client_startdate`)
					AND (`gr`.`starRating` = 5))
			THEN
				1
			ELSE 0
		END) AS `venel_reviews`,
		CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `public_starRating`,
		(CASE
			WHEN (`gr`.`starRating` IS NOT NULL) THEN 1
			ELSE 0
		END) AS `public_reviews`,
		CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `total_starRating`,
		(CASE
			WHEN (`gr`.`starRating` IS NOT NULL) THEN 1
			ELSE 0
		END) AS `total_reviews`
	FROM
		(((`dw`.`vw_google_locations` `gl`
		JOIN `dw`.`vw_client` `c` ON ((`dw`.`gl`.`Client Id` = `dw`.`c`.`client_id`)))
		LEFT JOIN `dw`.`google_review` `gr` ON ((`dw`.`gl`.`GMB Location Id` = `gr`.`locationId`)))
		LEFT JOIN `dw`.`vw_provider` `p` ON ((`dw`.`p`.`provider_name` = `dw`.`gl`.`Location Name`)))
	WHERE
		(`dw`.`gl`.`Client Id` LIKE '%')
	;

	insert into _lf (
		client_id,
		client_name,
		client_key,
		npi_lf,
		provider_lf,
		platform,
		source,
		listing_url,
		review_date,
		starting_rating,
		starting_reviews,
		organic_rating,
		organic_reviews,
		venel_assisted_rating,
		venel_assisted_reviews,
		public_rating,
		public_reviews,
		total_rating,
		total_reviews
	)
	SELECT 
		`datashake`.`vw_reviews_inferred`.`client_id`,
		`datashake`.`vw_reviews_inferred`.`client_description`,
		`datashake`.`vw_reviews_inferred`.`Client Key` AS `Client Key`,
		`datashake`.`vw_reviews_inferred`.`NPI` AS `NPI`,
		`datashake`.`vw_reviews_inferred`.`Listing` AS `Listing`,
		`datashake`.`vw_reviews_inferred`.`Platform` AS `Platform`,
		`datashake`.`vw_reviews_inferred`.`Source` AS `Source`,
		`datashake`.`vw_reviews_inferred`.`Listing URL` AS `Listing URL`,
		`datashake`.`vw_reviews_inferred`.`Review Date` AS `Review Date`,
		`datashake`.`vw_reviews_inferred`.`prevenel_starrating` AS `prevenel_starrating`,
		`datashake`.`vw_reviews_inferred`.`prevenel_reviews` AS `prevenel_reviews`,
		`datashake`.`vw_reviews_inferred`.`organic_starrating` AS `organic_starrating`,
		`datashake`.`vw_reviews_inferred`.`organic_reviews` AS `organic_reviews`,
		`datashake`.`vw_reviews_inferred`.`venel_starrating` AS `venel_starrating`,
		`datashake`.`vw_reviews_inferred`.`venel_reviews` AS `venel_reviews`,
		`datashake`.`vw_reviews_inferred`.`public_starrating` AS `public_starrating`,
		`datashake`.`vw_reviews_inferred`.`public_reviews` AS `public_reviews`,
		`datashake`.`vw_reviews_inferred`.`total_starrating` AS `total_starrating`,
		`datashake`.`vw_reviews_inferred`.`total_reviews` AS `total_reviews`
	FROM
		`datashake`.`vw_reviews_inferred` 
	;


	/*create table listings_summary_fixed (
  `client_id` varchar(5) DEFAULT NULL,
  `npi` varchar(45) DEFAULT NULL,
  `provider` varchar(500) DEFAULT NULL,
  `provider_last_name` varchar(500) DEFAULT NULL,
  `listing_url` longtext,
  `platform` varchar(50) DEFAULT NULL,
  `source` longtext,
  `avg_starrating` decimal(35,2) DEFAULT NULL,
  `total_reviews` decimal(33,0) DEFAULT NULL,
  `is_active` tinyint DEFAULT NULL,
  KEY `client_id` (`client_id`,`provider`)
);*/
    
	truncate table dw.listings_summary_fixed;
	insert into dw.listings_summary_fixed  
    select 
		x.client_id,
		prov.NPI as npi,
		prov.Provider as provider, 
        prov.`Provider Last Name` as provider_last_name,
		x.listing_url as 'listing_url', 
        x.Platform,
		x.Source, 
		x.`Total Rating` as avg_starrating,
		x.`Total Reviews` as total_reviews,
        (case
        when prov.`Active Status`= 'Active' then 1
        else 0
        end) as is_active
	from dw.vw_pbi_providers prov
	join (
		select 
				client_id,
				npi_lf, 
				provider_lf, 
				listing_url, 
				Platform, 
				Source,
				(case
					when sum(total_reviews) <> 0 then cast(sum(total_rating)/sum(total_reviews) as float)
					else 0
				end) as 'Total Rating',
				sum(total_reviews) AS 'Total Reviews'
		from dw._lf
		where review_date >= '2010-01-01'
			AND platform <> 'Reparative Medicine Doctor Reviews'
		group by 1, 2, 3, 4, 5, 6
	) x on prov.NPI = x.npi_lf
;

END]]></string>
		</procedure>
		<procedure name="upsert_online_appointment" id="Procedure-2a9" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_online_appointment`(
IN iv_oa_siteid varchar(50),
IN iv_oa_practiceid varchar(5),
IN iv_oa_created datetime,
IN iv_oa_email varchar(100),
IN iv_oa_phone varchar(20),
IN iv_oa_ref varchar(500),
IN iv_oa_firstname varchar(100),
IN iv_oa_lastname varchar(100),
IN iv_oa_formorigin varchar(255),
IN iv_oa_location varchar(100),
IN iv_oa_source varchar(45)
)
BEGIN
INSERT INTO `online_appointment`
(
`oa_siteid`,
`oa_practiceid`,
`oa_created`,
`oa_email`,
`oa_phone`,
`oa_ref`,
`oa_firstname`,
`oa_lastname`,
`oa_formorigin`,
`oa_location`,
`oa_source`)
VALUES (
iv_oa_siteid,
iv_oa_practiceid,
iv_oa_created,
iv_oa_email,
iv_oa_phone,
iv_oa_ref,
iv_oa_firstname,
iv_oa_lastname,
iv_oa_formorigin,
iv_oa_location,
iv_oa_source)
ON DUPLICATE KEY UPDATE
`oa_siteid`=values(`oa_siteid`),
`oa_phone`=values(`oa_phone`),
`oa_ref`=values(`oa_ref`),
`oa_firstname`=values(`oa_firstname`),
`oa_lastname`=values(`oa_lastname`),
`oa_formorigin`=values(`oa_formorigin`),
`oa_location`=values(`oa_location`),
`oa_source`=values(`oa_source`);
END]]></string>
		</procedure>
		<procedure name="upsert_online_appointment_email" id="Procedure-9d6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_online_appointment_email`(
IN iv_oae_clientid varchar(5),
IN iv_oae_date datetime,
IN iv_oae_appointment int(11),
IN iv_oae_referral int(11),
IN iv_oae_source varchar(45))
BEGIN
INSERT INTO `online_appointment_email`
(`oae_clientid`,
`oae_date`,
`oae_appointment`,
`oae_referral`,
`oae_source`)
VALUES (iv_oae_clientid,
iv_oae_date,
iv_oae_appointment,
iv_oae_referral,
iv_oae_source)
ON DUPLICATE KEY UPDATE
`oae_appointment`=values(`oae_appointment`),
`oae_referral`=values(`oae_referral`);
END]]></string>
		</procedure>
		<procedure name="upsert_online_referral" id="Procedure-136a" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_online_referral`(IN iv_or_siteid varchar(50),
IN iv_or_practiceid varchar(5),
IN iv_or_created datetime,
IN iv_or_patientdob date,
IN iv_or_patientemail varchar(100),
IN iv_or_patientname varchar(100),
IN iv_or_patientphone varchar(45),
IN iv_or_referringdoctor varchar(255),
IN iv_or_workcompreferral varchar(45))
BEGIN
INSERT INTO `online_referral`
(`or_siteid`,
`or_practiceid`,
`or_created`,
`or_patientdob`,
`or_patientemail`,
`or_patientname`,
`or_patientphone`,
`or_referringdoctor`,
`or_workcompreferral`)
VALUES (iv_or_siteid,
iv_or_practiceid,
iv_or_created,
iv_or_patientdob,
iv_or_patientemail,
iv_or_patientname,
iv_or_patientphone,
iv_or_referringdoctor,
iv_or_workcompreferral)
ON DUPLICATE KEY UPDATE
`or_patientdob`=values(`or_patientdob`),
`or_patientemail`=values(`or_patientemail`),
`or_patientname`=values(`or_patientname`),
`or_patientphone`=values(`or_patientphone`),
`or_referringdoctor`=values(`or_referringdoctor`),
`or_workcompreferral`=values(`or_workcompreferral`);
END]]></string>
		</procedure>
		<procedure name="upsert_provider" id="Procedure-178b" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_provider`(
IN iv_specialty_text text,
IN iv_rating text,
IN iv_provider_middle_name text,
IN iv_provider_credential_text text,
IN iv_image text,
IN iv_provider_name_prefix text,
IN iv_postal_code int(11),
IN iv_city text,
IN iv_title text,
IN iv_office_address_country text,
IN iv_state text,
IN iv_provider_last_name text,
IN iv_provider_name text,
IN iv_provider_first_name text,
IN iv_office_fax text,
IN iv_npi int(11),
IN iv_office_address_geofield text,
IN iv_address1 text,
IN iv_address2 text,
IN iv_nid int(11),
IN iv_provider_name_suffix_text text,
IN iv_client_id int(11),
IN iv_field_medical_specialty text,
IN iv_gender text,
IN iv_publish_to json,
IN iv_parent_practice_nid text,
IN iv_office_phone text,
IN iv_parent_practice text,
IN iv_provider_path varchar(5),
IN iv_provider_review_url text
)
BEGIN
insert into provider
(
specialty_text,
rating,
provider_middle_name,
provider_credential_text,
image,
provider_name_prefix,
postal_code,
city,
title,
office_address_country,
state,
provider_last_name,
provider_name,
provider_first_name,
office_fax,
npi,
office_address_geofield,
address1,
address2,
nid,
provider_name_suffix_text,
client_id,
field_medical_specialty,
gender,
publish_to,
parent_practice_nid,
office_phone,
parent_practice,
provider_path,
provider_review_url
)
Values
(
iv_specialty_text,
iv_rating,
iv_provider_middle_name,
iv_provider_credential_text,
iv_image,
iv_provider_name_prefix,
iv_postal_code,
iv_city,
iv_title,
iv_office_address_country,
iv_state,
iv_provider_last_name,
iv_provider_name,
iv_provider_first_name,
iv_office_fax,
iv_npi,
iv_office_address_geofield,
iv_address1,
iv_address2,
iv_nid,
iv_provider_name_suffix_text,
iv_client_id,
iv_field_medical_specialty,
iv_gender,
iv_publish_to,
iv_parent_practice_nid,
iv_office_phone,
iv_parent_practice,
iv_provider_path,
iv_provider_review_url
)
on duplicate key update
specialty_text=values(specialty_text),
rating=values(rating),
provider_middle_name=values(provider_middle_name),
provider_credential_text=values(provider_credential_text),
image=values(image),
provider_name_prefix=values(provider_name_prefix),
postal_code=values(postal_code),
city=values(city),
title=values(title),
office_address_country=values(office_address_country),
state=values(state),
provider_last_name=values(provider_last_name),
provider_name=values(provider_name),
provider_first_name=values(provider_first_name),
office_fax=values(office_fax),
npi=values(npi),
office_address_geofield=values(office_address_geofield),
address1=values(address1),
address2=values(address2),
nid=values(nid),
provider_name_suffix_text=values(provider_name_suffix_text),
client_id=values(client_id),
field_medical_specialty=values(field_medical_specialty),
gender=values(gender),
publish_to=values(publish_to),
parent_practice_nid=values(parent_practice_nid),
office_phone=values(office_phone),
parent_practice=values(parent_practice),
provider_path=values(provider_path),
provider_review_url=values(provider_review_url);
END]]></string>
		</procedure>
		<procedure name="upsert_provider_clientsite" id="Procedure-176c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_provider_clientsite`(IN iv_last_updated_date datetime,
IN iv_full_name_including_credentials varchar(500),
IN iv_npi int(11),
IN iv_practice_website_nid varchar(45),
IN iv_parent_practice varchar(500),
IN iv_parent_practice_id varchar(5),
IN iv_provider_type varchar(45),
IN iv_provider_first_name varchar(100),
IN iv_provider_middle_name varchar(100),
IN iv_provider_last_name varchar(100),
IN iv_provider_suffix_text varchar(100),
IN iv_provider_credential_text varchar(100),
IN iv_website_url varchar(500),
IN iv_provider_photo varchar(500),
IN iv_venel_client varchar(45),
IN iv_emeritus varchar(45),
IN iv_publish_to varchar(45),
IN iv_office_availability varchar(1000),
IN iv_office_address_country varchar(500),
IN iv_office_address_name varchar(500),
IN iv_address1 varchar(500),
IN iv_address2 varchar(500),
IN iv_city varchar(100),
IN iv_state varchar(100),
IN iv_postal_code varchar(45),
IN iv_provider_rating DECIMAL(5,4),
IN iv_provider_rating_count int(11),
IN iv_provider_specialty_text varchar(500))
BEGIN
INSERT INTO `provider_clientsite`
(`last_updated_date`,
`full_name_including_credentials`,
`npi`,
`practice_website_nid`,
`parent_practice`,
`parent_practice_id`,
`provider_type`,
`provider_first_name`,
`provider_middle_name`,
`provider_last_name`,
`provider_suffix_text`,
`provider_credential_text`,
`website_url`,
`provider_photo`,
`venel_client`,
`emeritus`,
`publish_to`,
`office_availability`,
`office_address_country`,
`office_address_name`,
`address1`,
`address2`,
`city`,
`state`,
`postal_code`,
`provider_rating`,
`provider_rating_count`,
`provider_specialty_text`)
VALUES (iv_last_updated_date,
iv_full_name_including_credentials,
iv_npi,
iv_practice_website_nid,
iv_parent_practice,
iv_parent_practice_id,
iv_provider_type,
iv_provider_first_name,
iv_provider_middle_name,
iv_provider_last_name,
iv_provider_suffix_text,
iv_provider_credential_text,
iv_website_url,
iv_provider_photo,
iv_venel_client,
iv_emeritus,
iv_publish_to,
iv_office_availability,
iv_office_address_country,
iv_office_address_name,
iv_address1,
iv_address2,
iv_city,
iv_state,
iv_postal_code,
iv_provider_rating,
iv_provider_rating_count,
iv_provider_specialty_text)
ON DUPLICATE KEY UPDATE
`last_updated_date`=values(`last_updated_date`),
`full_name_including_credentials`=values(`full_name_including_credentials`),
`practice_website_nid`=values(`practice_website_nid`),
`parent_practice`=values(`parent_practice`),
`parent_practice_id`=values(`parent_practice_id`),
`provider_type`=values(`provider_type`),
`provider_first_name`=values(`provider_first_name`),
`provider_middle_name`=values(`provider_middle_name`),
`provider_last_name`=values(`provider_last_name`),
`provider_suffix_text`=values(`provider_suffix_text`),
`provider_credential_text`=values(`provider_credential_text`),
`website_url`=values(`website_url`),
`provider_photo`=values(`provider_photo`),
`venel_client`=values(`venel_client`),
`emeritus`=values(`emeritus`),
`publish_to`=values(`publish_to`),
`office_availability`=values(`office_availability`),
`office_address_country`=values(`office_address_country`),
`office_address_name`=values(`office_address_name`),
`address1`=values(`address1`),
`address2`=values(`address2`),
`city`=values(`city`),
`state`=values(`state`),
`postal_code`=values(`postal_code`),
`provider_rating`=values(`provider_rating`),
`provider_rating_count`=values(`provider_rating_count`),
`provider_specialty_text`=values(`provider_specialty_text`);
END]]></string>
		</procedure>
		<procedure name="upsert_qb_customer" id="Procedure-2ba" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_qb_customer`(IN iv_id int(11),
IN iv_company_name varchar(100),
IN iv_display_name varchar(100),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `qb_customer`
(`id`,
`company_name`,
`display_name`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_company_name,
iv_display_name,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`company_name`=values(`company_name`),
`display_name`=values(`display_name`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_qb_invoice" id="Procedure-18a8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_qb_invoice`(IN iv_id int(11),
IN iv_doc_number int(11),
IN iv_txn_date date,
IN iv_customer_id int(11),
IN iv_customer_name VARCHAR(100),
IN iv_due_date date,
IN iv_total_amt decimal(13,2),
IN iv_sales_term_id int(11),
IN iv_invoice_status varchar(45),
IN iv_email_status varchar(45),
IN iv_balance decimal(13,2),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `qb_invoice`
(`id`,
`doc_number`,
`txn_date`,
`customer_id`,
`customer_name`,
`due_date`,
`total_amt`,
`sales_term_id`,
invoice_status,
email_status,
balance,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_doc_number,
iv_txn_date,
iv_customer_id,
iv_customer_name,
iv_due_date,
iv_total_amt,
iv_sales_term_id,
iv_invoice_status,
iv_email_status,
iv_balance,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`doc_number`=values(`doc_number`),
`txn_date`=values(`txn_date`),
`customer_id`=values(`customer_id`),
`customer_name`=values(`customer_name`),
`due_date`=values(`due_date`),
`total_amt`=values(`total_amt`),
`sales_term_id`=values(`sales_term_id`),
invoice_status = values(invoice_status),
email_status = values(email_status),
balance = values(balance),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_qb_invoice_line" id="Procedure-8ca" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_qb_invoice_line`(IN iv_doc_number int(11),
IN iv_id int(11),
IN iv_line_num int(11),
IN iv_description varchar(255),
IN iv_amount decimal(13,2),
IN iv_item_id int(11),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `qb_invoice_line`
(`doc_number`,
`id`,
`line_num`,
`description`,
`amount`,
`item_id`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_doc_number,
iv_id,
iv_line_num,
iv_description,
iv_amount,
iv_item_id,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`doc_number`=values(`doc_number`),
`id`=values(`id`),
`line_num`=values(`line_num`),
`description`=values(`description`),
`amount`=values(`amount`),
`item_id`=values(`item_id`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_qb_item" id="Procedure-e73" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_qb_item`(IN iv_id int(11),
IN iv_name varchar(255),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `qb_item`
(`id`,
`name`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_name,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`name`=values(`name`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_qb_term" id="Procedure-1af8" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_qb_term`(IN iv_id int(11),
IN iv_name varchar(45),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `qb_term`
(`id`,
`name`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_name,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`name`=values(`name`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_reporting_group" id="Procedure-4f3" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_reporting_group`(IN iv_rg_clientid varchar(5),
IN iv_rg_reportinggroup varchar(100),
IN iv_rg_monthlybudget int(11),
IN iv_rg_startdate date,
IN iv_rg_enddate date,
IN iv_rg_practicereceipts decimal(6,2),
IN iv_rg_uniquepatients int(11),
IN iv_rg_valueofnewpatient int(11),
IN iv_rg_path varchar(100))
BEGIN
INSERT INTO `reporting_group`
(`rg_clientid`,
`rg_reportinggroup`,
`rg_monthlybudget`,
`rg_startdate`,
`rg_enddate`,
`rg_practicereceipts`,
`rg_uniquepatients`,
`rg_valueofnewpatient`,
`rg_path`)
VALUES (iv_rg_clientid,
iv_rg_reportinggroup,
iv_rg_monthlybudget,
iv_rg_startdate,
iv_rg_enddate,
iv_rg_practicereceipts,
iv_rg_uniquepatients,
iv_rg_valueofnewpatient,
iv_rg_path)
ON DUPLICATE KEY UPDATE
`rg_clientid`=values(`rg_clientid`),
`rg_reportinggroup`=values(`rg_reportinggroup`),
`rg_monthlybudget`=values(`rg_monthlybudget`),
`rg_startdate`=values(`rg_startdate`),
`rg_enddate`=values(`rg_enddate`),
`rg_practicereceipts`=values(`rg_practicereceipts`),
`rg_uniquepatients`=values(`rg_uniquepatients`),
`rg_valueofnewpatient`=values(`rg_valueofnewpatient`),
`rg_path`=values(`rg_path`);
END]]></string>
		</procedure>
		<procedure name="upsert_reporting_group_call" id="Procedure-74c" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_reporting_group_call`(IN iv_rgc_clientid varchar(5),
IN iv_rgc_trackingnumber varchar(45),
IN iv_rgc_sourcename varchar(100),
IN iv_rgc_reportinggroup varchar(100))
BEGIN
INSERT INTO `reporting_group_call`
(`rgc_clientid`,
`rgc_trackingnumber`,
`rgc_sourcename`,
`rgc_reportinggroup`)
VALUES (iv_rgc_clientid,
iv_rgc_trackingnumber,
iv_rgc_sourcename,
iv_rgc_reportinggroup)
ON DUPLICATE KEY UPDATE
`rgc_clientid`=values(`rgc_clientid`),
`rgc_trackingnumber`=values(`rgc_trackingnumber`),
`rgc_sourcename`=values(`rgc_sourcename`),
`rgc_reportinggroup`=values(`rgc_reportinggroup`);
END]]></string>
		</procedure>
		<procedure name="upsert_reporting_group_web" id="Procedure-2436" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_reporting_group_web`(IN iv_rgw_clientid varchar(5),
IN iv_rgw_campaign varchar(255),
IN iv_rgw_websystem varchar(45),
IN iv_rgw_reportinggroup varchar(100))
BEGIN
INSERT INTO `reporting_group_web`
(`rgw_clientid`,
`rgw_campaign`,
`rgw_websystem`,
`rgw_reportinggroup`)
VALUES (iv_rgw_clientid,
iv_rgw_campaign,
iv_rgw_websystem,
iv_rgw_reportinggroup)
ON DUPLICATE KEY UPDATE
`rgw_clientid`=values(`rgw_clientid`),
`rgw_campaign`=values(`rgw_campaign`),
`rgw_websystem`=values(`rgw_websystem`),
`rgw_reportinggroup`=values(`rgw_reportinggroup`);
END]]></string>
		</procedure>
		<procedure name="upsert_reviewsql" id="Procedure-1057" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_reviewsql`()
BEGIN

DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'upsert_reviewsql', @full_error, 0); 
	end;

    DROP TEMPORARY TABLE IF EXISTS _rvwsql;

        create temporary table _rvwsql (
        client_id varchar(5),
        client_name varchar(150),
        client_key varchar(100),
        npi varchar(20),
        provider varchar(500),
        provider_last_name varchar(100),
        platform varchar(50),
        source varchar(50),
        listing_url varchar(500),
        date date,
        total_starrating float,
        total_reviews int,
        comment text,
        reviewer varchar(100),
        hash char(32)
        );

        insert into _rvwsql
        (
        client_id,
        client_name,
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
        SELECT
				`c`.`client_id`,
                `c`.`client_name`,
                CONCAT(`c`.`client_id`,
                        `c`.`client_description`) AS `Client Key`,
                CONCAT('', `t`.`testimonial_npi`) AS `NPI`,
                TRIM(`p`.`provider_name`) AS `provider`,
                `p`.`provider_last_name` AS `provider_last_name`,
                `ts`.`source` AS `Platform`,
                `ts`.`source` AS `Source`,
                (CASE
                    WHEN (`ts`.`source_sitepathurl` IS NULL) THEN `p`.`provider_website_url`
                    ELSE CONCAT(`ts`.`source_url`, `sp`.`path`)
                END) AS `Listing URL`,
                CAST(`t`.`testimonial_creation_date` AS DATE) AS `Review Date`,
                `t`.`testimonial_rating` AS `total_starrating`,
                `t`.`testimonial_rating_count` AS `total_reviews`,
                `t`.`testimonial_body` AS `comment`,
                `t`.`testimonial_reviewer_name` AS `reviewer`
            FROM
                ((((`vw_testimonial` `t`
                JOIN `vw_client` `c` ON ((`t`.`testimonial_client_id` = `c`.`client_id`)))
                JOIN `vw_provider` `p` ON ((`t`.`testimonial_npi` = `p`.`provider_npi`)))
                LEFT JOIN `testimonial_source` `ts` ON ((`t`.`testimonial_source` = `ts`.`source`)))
                LEFT JOIN `provider_sitepath` `sp` ON (((`sp`.`source` = `ts`.`source_abbreviation`)
                    AND (`sp`.`npi` = `t`.`testimonial_npi`))))
;
        insert into _rvwsql
        (
        client_id,
        client_name,        
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
        SELECT
				`c`.`client_id`,
                `c`.`client_name`,        
                CONCAT(`c`.`client_id`,
                        `c`.`client_description`) AS `Client Key`,
                (CASE
                    WHEN (`gl`.`Store Code` LIKE '%-Practice%') THEN CONCAT(`c`.`client_id`, '001')
                    ELSE COALESCE(`p`.`provider_npi`,
                            CONCAT(`c`.`client_id`, '001'))
                END) AS `npi`,
                TRIM(`gl`.`Location Name`) AS `provider`,
                `p`.`provider_last_name` AS `provider_last_name`,
                'Google' AS `platform`,
                CONCAT('Google-',
                        COALESCE(`gl`.`Store Code`, 'No StoreCode')) AS `Source`,
                `gl`.`Search URL` AS `listing_url`,
                CAST(COALESCE(`gr`.`createTime`, '2010-01-01')
                    AS DATE) AS `reviewdate`,
                CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `total_starRating`,
                (CASE
                    WHEN (`gr`.`starRating` IS NOT NULL) THEN 1
                    ELSE NULL
                END) AS `total_reviews`,
                `gr`.`comment` AS `comment`,
                `gr`.`reviewer_displayname` AS `reviewer`
            FROM
                (((`vw_google_locations` `gl`
                JOIN `vw_client` `c` ON ((`gl`.`Client Id` = `c`.`client_id`)))
                LEFT JOIN `google_review` `gr` ON ((`gl`.`GMB Location Id` = `gr`.`locationId`)))
                LEFT JOIN `vw_provider` `p` ON ((`p`.`provider_name` = `gl`.`Location Name`)))
            WHERE
				CAST(COALESCE(`gr`.`createTime`, '2010-01-01') AS DATE) > '2010-01-01'
				and (`gr`.`starRating` IS NOT NULL) 
                ;


        insert into _rvwsql
        (
        client_id,
        client_name,        
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
 SELECT 
    `c`.`client_id` AS `client_id`,
    `c`.`client_description` AS `client_description`,
    CONCAT(`c`.`client_id`,
            `c`.`client_description`) AS `Client Key`,
    `prf`.`npi` AS `NPI`,
    TRIM(`p`.`provider_name`) AS `Listing`,
    `p`.`provider_last_name` AS `listing_order`,
    `ts`.`source` AS `Platform`,
    `ts`.`source` AS `Source`,
    `prf`.`url` AS `Listing URL`,
    (`prf`.`starting_crawl` + INTERVAL -(1) DAY) AS `Review Date`,
    ((`prf`.`latest_review_count` * `prf`.`latest_average_rating`) - `rd`.`total_starrating`) AS `total_starrating`,
    (`prf`.`latest_review_count` - `rd`.`total_reviews`) AS `total_reviews`,
    'Inferred' AS `comments`,
    'Datashake'
FROM
    ((((`datashake`.`profile` `prf`
    JOIN (SELECT 
        `datashake`.`vw_reviews_details`.`Listing URL` AS `Listing URL`,
            SUM(`datashake`.`vw_reviews_details`.`total_starrating`) AS `total_starrating`,
            SUM(`datashake`.`vw_reviews_details`.`total_reviews`) AS `total_reviews`
    FROM
        `datashake`.`vw_reviews_details`
    GROUP BY `datashake`.`vw_reviews_details`.`Listing URL`) `rd` ON ((`rd`.`Listing URL` = `prf`.`url`)))
    LEFT JOIN `vw_provider` `p` ON ((`prf`.`npi` = `p`.`provider_npi`)))
    LEFT JOIN `vw_client` `c` ON ((`p`.`_client_id` = `c`.`client_id`)))
    LEFT JOIN `testimonial_source` `ts` ON ((`prf`.`source_name` = `ts`.`source_abbreviation`))) 
                ;

        insert into _rvwsql
        (
        client_id,
        client_name,        
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
	select
    `datashake`.`vw_reviews_details`.`client_id` AS `client_id`,
    `datashake`.`vw_reviews_details`.`client_description` AS `client_description`,
    `datashake`.`vw_reviews_details`.`Client Key` AS `Client Key`,
    `datashake`.`vw_reviews_details`.`NPI` AS `NPI`,
    `datashake`.`vw_reviews_details`.`Listing` AS `Listing`,
    `datashake`.`vw_reviews_details`.`listing_order` AS `listing_order`,
    `datashake`.`vw_reviews_details`.`Platform` AS `Platform`,
    `datashake`.`vw_reviews_details`.`Source` AS `Source`,
    `datashake`.`vw_reviews_details`.`Listing URL` AS `Listing URL`,
    `datashake`.`vw_reviews_details`.`Review Date` AS `Review Date`,
    `datashake`.`vw_reviews_details`.`total_starrating` AS `total_starrating`,
    `datashake`.`vw_reviews_details`.`total_reviews` AS `total_reviews`,
    `datashake`.`vw_reviews_details`.`comments` AS `comments`,
    'Datashake'
FROM
    `datashake`.`vw_reviews_details`
    ;

delete from _rvwsql where
not (    date > '2010-01-01'
        AND total_reviews > 0
        AND total_starrating >= 1
        AND platform <> 'Reparative Medicine Doctor Reviews');

UPDATE _rvwsql 
SET 
    hash = MD5(concat(COALESCE(client_id, 'a'),
            COALESCE(client_name, 'a'),
            COALESCE(client_key, 'a'),
            COALESCE(npi, 'a'),
            COALESCE(provider, 'a'),
            COALESCE(provider_last_name, 'a'),
            COALESCE(platform, 'a'),
            COALESCE(source, 'a'),
            COALESCE(listing_url, 'a'),
            COALESCE(date, 'a'),
            COALESCE(total_starrating, 'a'),
            COALESCE(total_reviews, 'a'),
            COALESCE(comment, 'a'),
            COALESCE(reviewer, 'a')))
;
/*        
delete from dw.reviews_sql rs
where rs.hash not in (select hash from _rvwsql);

insert into dw.reviews_sql 
select * from _rvwsql rx where rx.hash not in (select hash from dw.reviews_sql);
*/
truncate table dw.reviews_sql;
insert into dw.reviews_sql
select * from _rvwsql;

END]]></string>
		</procedure>
		<procedure name="upsert_reviewsql_fixed_provider_npi" id="Procedure-e11" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_reviewsql_fixed_provider_npi`()
BEGIN

	DECLARE continue handler for sqlexception
	begin
		get diagnostics condition 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
        SET @full_error = CONCAT('ERROR ', @errno, ' (', @sqlstate, '): ', @text);
        insert into `dw`.`scheduled_task_errors` values(now(), 'upsert_reviewsql_fixed_provider_npi', @full_error, 0); 
	end;

    DROP TEMPORARY TABLE IF EXISTS _rvwsqlf;

        create temporary table _rvwsqlf (
        client_id varchar(5),
        client_name varchar(150),
        client_key varchar(100),
        npi varchar(20),
        provider varchar(500),
        provider_last_name varchar(100),
        platform varchar(50),
        source varchar(50),
        listing_url varchar(500),
        date date,
        total_starrating float,
        total_reviews int,
        comment text,
        reviewer varchar(100),
        hash char(32)
        );

        insert into _rvwsqlf
        (
        client_id,
        client_name,
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
        SELECT
				`c`.`client_id`,
                `c`.`client_name`,
                CONCAT(`c`.`client_id`,
                        `c`.`client_description`) AS `Client Key`,
                CONCAT('', `t`.`testimonial_npi`) AS `NPI`,
                TRIM(`p`.`provider_name`) AS `provider`,
                `p`.`provider_last_name` AS `provider_last_name`,
                `ts`.`source` AS `Platform`,
                `ts`.`source` AS `Source`,
                (CASE
                    WHEN (`ts`.`source_sitepathurl` IS NULL) THEN `p`.`provider_website_url`
                    ELSE CONCAT(`ts`.`source_url`, `sp`.`path`)
                END) AS `Listing URL`,
                CAST(`t`.`testimonial_creation_date` AS DATE) AS `Review Date`,
                `t`.`testimonial_rating` AS `total_starrating`,
                `t`.`testimonial_rating_count` AS `total_reviews`,
                `t`.`testimonial_body` AS `comment`,
                `t`.`testimonial_reviewer_name` AS `reviewer`
            FROM
                ((((`vw_testimonial` `t`
                JOIN `vw_client` `c` ON ((`t`.`client_id` = `c`.`client_id`)))
                JOIN `vw_provider` `p` ON ((`t`.`testimonial_npi` = `p`.`provider_npi`)))
                LEFT JOIN `testimonial_source` `ts` ON ((`t`.`testimonial_source` = `ts`.`source`)))
                LEFT JOIN `provider_sitepath` `sp` ON (((`sp`.`source` = `ts`.`source_abbreviation`)
                    AND (`sp`.`npi` = `t`.`testimonial_npi`))))
;
        insert into _rvwsqlf
        (
        client_id,
        client_name,        
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
        SELECT
				`c`.`client_id`,
                `c`.`client_name`,        
                CONCAT(`c`.`client_id`,
                        `c`.`client_description`) AS `Client Key`,
                (CASE
				WHEN (`dw`.`gl`.`Store Code` LIKE '%-Practice%') THEN IF(SUBSTRING(`dw`.`c`.`client_id`, 1, 1) = 's', CONCAT('1', SUBSTRING(`dw`.`c`.`client_id`, -3, 3), '001'), CONCAT(`dw`.`c`.`client_id`, '001'))
				ELSE COALESCE(`dw`.`p`.`provider_npi`,
						IF(SUBSTRING(`dw`.`c`.`client_id`, 1, 1) = 's', CONCAT('1', SUBSTRING(`dw`.`c`.`client_id`, -3, 3), '001'), CONCAT(`dw`.`c`.`client_id`, '001')))
				END) AS `npi`,
                TRIM(`gl`.`Location Name`) AS `provider`,
                `p`.`provider_last_name` AS `provider_last_name`,
                'Google' AS `platform`,
                CONCAT('Google-',
                        COALESCE(`gl`.`Store Code`, 'No StoreCode')) AS `Source`,
                `gl`.`Search URL` AS `listing_url`,
                CAST(COALESCE(`gr`.`createTime`, '2010-01-01')
                    AS DATE) AS `reviewdate`,
                CAST(COALESCE(`gr`.`starRating`, 0) AS SIGNED) AS `total_starRating`,
                (CASE
                    WHEN (`gr`.`starRating` IS NOT NULL) THEN 1
                    ELSE NULL
                END) AS `total_reviews`,
                `gr`.`comment` AS `comment`,
                `gr`.`reviewer_displayname` AS `reviewer`
            FROM
                (((`vw_google_locations` `gl`
                JOIN `vw_client` `c` ON ((`gl`.`Client Id` = `c`.`client_id`)))
                LEFT JOIN `google_review` `gr` ON ((`gl`.`GMB Location Id` = `gr`.`locationId`)))
                LEFT JOIN `vw_provider` `p` ON ((`p`.`provider_name` = `gl`.`Location Name`)))
            WHERE
				CAST(COALESCE(`gr`.`createTime`, '2010-01-01') AS DATE) > '2010-01-01'
				and (`gr`.`starRating` IS NOT NULL) 
                ;


        insert into _rvwsqlf
        (
        client_id,
        client_name,        
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
		SELECT 
			`c`.`client_id` AS `client_id`,
			`c`.`client_description` AS `client_description`,
			CONCAT(`c`.`client_id`,
					`c`.`client_description`) AS `Client Key`,
			`prf`.`npi` AS `NPI`,
			TRIM(`p`.`provider_name`) AS `Listing`,
			`p`.`provider_last_name` AS `listing_order`,
			`ts`.`source` AS `Platform`,
			`ts`.`source` AS `Source`,
			`prf`.`url` AS `Listing URL`,
			(`prf`.`starting_crawl` + INTERVAL -(1) DAY) AS `Review Date`,
			((`prf`.`latest_review_count` * `prf`.`latest_average_rating`) - `rd`.`total_starrating`) AS `total_starrating`,
			(`prf`.`latest_review_count` - `rd`.`total_reviews`) AS `total_reviews`,
			'Inferred' AS `comments`,
			'Datashake'
		FROM
			((((`datashake`.`profile` `prf`
			JOIN (SELECT 
				`datashake`.`vw_reviews_details`.`Listing URL` AS `Listing URL`,
					SUM(`datashake`.`vw_reviews_details`.`total_starrating`) AS `total_starrating`,
					SUM(`datashake`.`vw_reviews_details`.`total_reviews`) AS `total_reviews`
			FROM
				`datashake`.`vw_reviews_details`
			GROUP BY `datashake`.`vw_reviews_details`.`Listing URL`) `rd` ON ((`rd`.`Listing URL` = `prf`.`url`)))
			LEFT JOIN `vw_provider` `p` ON ((`prf`.`npi` = `p`.`provider_npi`)))
			LEFT JOIN `vw_client` `c` ON ((`p`.`_client_id` = `c`.`client_id`)))
			LEFT JOIN `testimonial_source` `ts` ON ((`prf`.`source_name` = `ts`.`source_abbreviation`))) 
;

        insert into _rvwsqlf
        (
        client_id,
        client_name,        
        client_key,
        npi,
        provider,
        provider_last_name,
        platform,
        source,
        listing_url,
        date,
        total_starrating,
        total_reviews,
        comment,
        reviewer
        )
		select
			`datashake`.`vw_reviews_details`.`client_id` AS `client_id`,
			`datashake`.`vw_reviews_details`.`client_description` AS `client_description`,
			`datashake`.`vw_reviews_details`.`Client Key` AS `Client Key`,
			`datashake`.`vw_reviews_details`.`NPI` AS `NPI`,
			`datashake`.`vw_reviews_details`.`Listing` AS `Listing`,
			`datashake`.`vw_reviews_details`.`listing_order` AS `listing_order`,
			`datashake`.`vw_reviews_details`.`Platform` AS `Platform`,
			`datashake`.`vw_reviews_details`.`Source` AS `Source`,
			`datashake`.`vw_reviews_details`.`Listing URL` AS `Listing URL`,
			`datashake`.`vw_reviews_details`.`Review Date` AS `Review Date`,
			COALESCE(`datashake`.`vw_reviews_details`.`total_starrating`, 0.00) AS `total_starrating`,
			COALESCE(`datashake`.`vw_reviews_details`.`total_reviews`, 0.00) AS `total_reviews`,
			`datashake`.`vw_reviews_details`.`comments` AS `comments`,
			'Datashake'
		FROM
			`datashake`.`vw_reviews_details`
;

		delete from _rvwsqlf where
		not (    date > '2010-01-01'
				AND total_reviews > 0
				AND total_starrating >= 1
				AND platform <> 'Reparative Medicine Doctor Reviews');

		UPDATE _rvwsqlf 
		SET 
			hash = MD5(concat(COALESCE(client_id, 'a'),
					COALESCE(client_name, 'a'),
					COALESCE(client_key, 'a'),
					COALESCE(npi, 'a'),
					COALESCE(provider, 'a'),
					COALESCE(provider_last_name, 'a'),
					COALESCE(platform, 'a'),
					COALESCE(source, 'a'),
					COALESCE(listing_url, 'a'),
					COALESCE(date, 'a'),
					COALESCE(total_starrating, 'a'),
					COALESCE(total_reviews, 'a'),
					COALESCE(comment, 'a'),
					COALESCE(reviewer, 'a')))
;
/*        
delete from dw.reviews_sql rs
where rs.hash not in (select hash from _rvwsqlf);

insert into dw.reviews_sql 
select * from _rvwsqlf rx where rx.hash not in (select hash from dw.reviews_sql);
*/
		truncate table dw.reviews_sql_fixed;
		insert into dw.reviews_sql_fixed
		select * from _rvwsqlf;

END]]></string>
		</procedure>
		<procedure name="upsert_sf_account" id="Procedure-b2e" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_sf_account`(IN iv_id varchar(45),
IN iv_name varchar(255),
IN iv_client_id__c varchar(3),
IN iv_venel_client_owner__c varchar(45),
IN iv_ispartner tinyint(4),
IN iv_lastmodifieddate datetime,
IN iv_recordtypeid varchar(45),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `sf_account`
(`id`,
`name`,
`client_id__c`,
`venel_client_owner__c`,
`ispartner`,
`lastmodifieddate`,
`recordtypeid`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_name,
iv_client_id__c,
iv_venel_client_owner__c,
iv_ispartner,
iv_lastmodifieddate,
iv_recordtypeid,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`name`=values(`name`),
`client_id__c`=values(`client_id__c`),
`venel_client_owner__c`=values(`venel_client_owner__c`),
`ispartner`=values(`ispartner`),
`lastmodifieddate`=values(`lastmodifieddate`),
`recordtypeid`=values(`recordtypeid`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_sf_contact" id="Procedure-11bc" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_sf_contact`(IN iv_id varchar(45),
IN iv_name varchar(255),
IN iv_fax varchar(45),
IN iv_accountid varchar(45),
IN iv_Ownerid varchar(45),
IN iv_venel_client_owner__c varchar(100),
IN iv_client_id__c varchar(3),
IN iv_fax_last_sent_date__c datetime,
IN iv_fax_last_status varchar(45),
IN iv_lastmodifieddate varchar(45),
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `sf_contact`
(`id`,
`name`,
`fax`,
`accountid`,
`Ownerid`,
`venel_client_owner__c`,
`client_id__c`,
`fax_last_sent_date__c`,
`fax_last_status`,
`lastmodifieddate`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_name,
iv_fax,
iv_accountid,
iv_Ownerid,
iv_venel_client_owner__c,
iv_client_id__c,
iv_fax_last_sent_date__c,
iv_fax_last_status,
iv_lastmodifieddate,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`id`=values(`id`),
`name`=values(`name`),
`fax`=values(`fax`),
`accountid`=values(`accountid`),
`Ownerid`=values(`Ownerid`),
`venel_client_owner__c`=values(`venel_client_owner__c`),
`client_id__c`=values(`client_id__c`),
`fax_last_sent_date__c`=values(`fax_last_sent_date__c`),
`fax_last_status`=values(`fax_last_status`),
`lastmodifieddate`=values(`lastmodifieddate`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_sf_task" id="Procedure-1bbb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_sf_task`(IN iv_id varchar(45),
IN iv_subject varchar(45),
IN iv_decription varchar(2000),
IN iv_whoid varchar(45),
IN iv_whatid varchar(45),
IN iv_status varchar(45),
IN iv_type varchar(45),
IN iv_activitydate date,
IN iv_lastmodifieddate datetime,
IN iv_active tinyint(4),
IN iv_crt_user varchar(100),
IN iv_mdfd_user varchar(100))
BEGIN
INSERT INTO `sf_task`
(`id`,
`subject`,
`decription`,
`whoid`,
`whatid`,
`status`,
`type`,
`activitydate`,
`lastmodifieddate`,
`active`,
`crt_user`,
`mdfd_user`)
VALUES (iv_id,
iv_subject,
iv_decription,
iv_whoid,
iv_whatid,
iv_status,
iv_type,
iv_activitydate,
iv_lastmodifieddate,
iv_active,
iv_crt_user,
iv_mdfd_user)
ON DUPLICATE KEY UPDATE
`subject`=values(`subject`),
`decription`=values(`decription`),
`whoid`=values(`whoid`),
`whatid`=values(`whatid`),
`status`=values(`status`),
`type`=values(`type`),
`activitydate`=values(`activitydate`),
`lastmodifieddate`=values(`lastmodifieddate`),
`active`=values(`active`),
`crt_user`=values(`crt_user`),
`mdfd_user`=values(`mdfd_user`);
END]]></string>
		</procedure>
		<procedure name="upsert_testimonial" id="Procedure-10b2" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_testimonial`(
IN iv_body text,
IN iv_review_rating INT,
IN iv_permission_to_share varchar(45),
IN iv_reviewer_name varchar(500),
IN iv_reviewer_email varchar(500),
IN iv_message_tone varchar(45),
IN iv_sentiment_score varchar(45),
IN iv_practice_id varchar(45),
IN iv_npi varchar(45),
IN iv_creation_date varchar(45),
IN iv_published varchar(45),
IN iv_unique_review_id varchar(250),
IN iv_source varchar(45),
IN iv_published_to json,
IN iv_source_title varchar(100),
IN iv_staff_review_rating INT

)
BEGIN
INSERT INTO testimonial
(
body,
review_rating,
permission_to_share,
reviewer_name,
reviewer_email,
message_tone,
sentiment_score,
practice_id,
npi,
creation_date,
published,
unique_review_id,
`source`,
published_to,
source_title,
staff_review_rating
)
values
(
iv_body,
iv_review_rating,
iv_permission_to_share,
iv_reviewer_name,
iv_reviewer_email,
iv_message_tone,
iv_sentiment_score,
iv_practice_id,
iv_npi,
iv_creation_date,
iv_published,
iv_unique_review_id,
iv_source,
iv_published_to,
iv_source_title,
iv_staff_review_rating
)
on duplicate key update
-- body=values(body),
review_rating=values(review_rating),
permission_to_share=values(permission_to_share),
reviewer_name=values(reviewer_name),
reviewer_email=values(reviewer_email),
message_tone=values(message_tone),
sentiment_score=values(sentiment_score),
practice_id=values(practice_id),
npi=values(npi),
creation_date=values(creation_date),
published=values(published),
unique_review_id=values(unique_review_id),
`source` = values(`source`),
published_to = values(published_to),
source_title = values(source_title),
staff_review_rating = values(staff_review_rating)
;
END]]></string>
		</procedure>
		<procedure name="upsert_testimonial_clientsite" id="Procedure-ec6" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_testimonial_clientsite`(IN iv_body text,
IN iv_review_rating varchar(45),
IN iv_permission_to_share varchar(45),
IN iv_reviewer_name varchar(500),
IN iv_reviewer_email varchar(500),
IN iv_message_tone varchar(45),
IN iv_sentiment_score varchar(45),
IN iv_practice_id varchar(45),
IN iv_npi varchar(45),
IN iv_creation_date varchar(45),
IN iv_published varchar(45),
IN iv_unique_review_id varchar(250),
IN iv_source varchar(45),
IN iv_published_to json,
IN iv_source_title varchar(100))
BEGIN
INSERT INTO `testimonial_clientsite`
(`body`,
`review_rating`,
`permission_to_share`,
`reviewer_name`,
`reviewer_email`,
`message_tone`,
`sentiment_score`,
`practice_id`,
`npi`,
`creation_date`,
`published`,
`unique_review_id`,
`source`,
`published_to`,
`source_title`)
VALUES (iv_body,
iv_review_rating,
iv_permission_to_share,
iv_reviewer_name,
iv_reviewer_email,
iv_message_tone,
iv_sentiment_score,
iv_practice_id,
iv_npi,
iv_creation_date,
iv_published,
iv_unique_review_id,
iv_source,
iv_published_to,
iv_source_title)
ON DUPLICATE KEY UPDATE
`body`=values(`body`),
`review_rating`=values(`review_rating`),
`permission_to_share`=values(`permission_to_share`),
`reviewer_name`=values(`reviewer_name`),
`reviewer_email`=values(`reviewer_email`),
`message_tone`=values(`message_tone`),
`sentiment_score`=values(`sentiment_score`),
`practice_id`=values(`practice_id`),
`npi`=values(`npi`),
`creation_date`=values(`creation_date`),
`published`=values(`published`),
`unique_review_id`=values(`unique_review_id`),
`source`=values(`source`),
`published_to`=values(`published_to`),
`source_title`=values(`source_title`);
END]]></string>
		</procedure>
		<procedure name="upsert_testimonial_gmb" id="Procedure-51" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_testimonial_gmb`(IN iv_body text,
IN iv_review_rating varchar(45),
IN iv_permission_to_share varchar(45),
IN iv_reviewer_name varchar(500),
IN iv_reviewer_email varchar(500),
IN iv_message_tone varchar(45),
IN iv_sentiment_score varchar(45),
IN iv_practice_id varchar(45),
IN iv_npi varchar(45),
IN iv_creation_date varchar(45),
IN iv_published varchar(45),
IN iv_unique_review_id varchar(250),
IN iv_source varchar(45),
IN iv_published_to json,
IN iv_review_reply text,
IN iv_placeid varchar(128),
IN iv_location_id varchar(256))
BEGIN
/*
declare v_exists int;

SELECT 
    COUNT(*)
INTO v_exists FROM
    testimonial
WHERE
    practice_id = iv_practice_id
    and unique_review_id = iv_unique_review_id
    AND `source` = iv_source;

-- select v_exists;

if v_exists=0 then
*/
INSERT INTO `testimonial`
(`body`,
`review_rating`,
`permission_to_share`,
`reviewer_name`,
`reviewer_email`,
`message_tone`,
`sentiment_score`,
`practice_id`,
`npi`,
`creation_date`,
`published`,
`unique_review_id`,
`source`,
`published_to`,
`review_reply`,
`placeid`,
`location_id`)
VALUES (iv_body,
iv_review_rating,
iv_permission_to_share,
iv_reviewer_name,
iv_reviewer_email,
iv_message_tone,
iv_sentiment_score,
iv_practice_id,
iv_npi,
iv_creation_date,
iv_published,
iv_unique_review_id,
iv_source,
iv_published_to,
iv_review_reply,
iv_placeid,
iv_location_id);
/*
elseif v_exists != 0 then
update testimonial set
`body`=iv_body,
`review_rating`=iv_review_rating,
`permission_to_share`=iv_permission_to_share,
`reviewer_name`=iv_reviewer_name,
`reviewer_email`=iv_reviewer_email,
`message_tone`=iv_message_tone,
`sentiment_score`=iv_sentiment_score,
`npi`=iv_npi,
`creation_date`=iv_creation_date,
`published`=iv_published,
`published_to`=iv_published_to,
`review_reply`=iv_review_reply,
`placeid`=iv_placeid,
`location_name`=iv_location_name
where practice_id = iv_practice_id
    and unique_review_id = iv_unique_review_id
    and `source` = iv_source;
    end if;
    */
END]]></string>
		</procedure>
		<procedure name="upsert_web" id="Procedure-1405" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_web`(IN iv_w_clientid varchar(5),
IN iv_w_date date,
IN iv_w_campaign varchar(255),
IN iv_w_impressions int(11),
IN iv_w_clicks int(11),
IN iv_w_cost decimal(10,2),
IN iv_w_page_likes int(11),
IN iv_w_reach int(11),
IN iv_w_campaignstatus varchar(100),
IN iv_w_system varchar(45),
IN iv_w_account varchar(100),
IN iv_w_customerid varchar(45),
IN iv_w_addistribution varchar(45))
BEGIN
INSERT INTO `web`
(`w_clientid`,
`w_date`,
`w_campaign`,
`w_impressions`,
`w_clicks`,
`w_cost`,
`w_page_likes`,
`w_reach`,
`w_campaignstatus`,
`w_system`,
`w_account`,
`w_customerid`,
`w_addistribution`)
VALUES (iv_w_clientid,
iv_w_date,
iv_w_campaign,
iv_w_impressions,
iv_w_clicks,
iv_w_cost,
iv_w_page_likes,
iv_w_reach,
iv_w_campaignstatus,
iv_w_system,
iv_w_account,
iv_w_customerid,
iv_w_addistribution)
ON DUPLICATE KEY UPDATE
`w_impressions`=values(`w_impressions`),
`w_clicks`=values(`w_clicks`),
`w_cost`=values(`w_cost`),
`w_page_likes`=values(`w_page_likes`),
`w_reach`=values(`w_reach`),
`w_campaignstatus`=values(`w_campaignstatus`),
`w_system`=values(`w_system`),
`w_account`=values(`w_account`),
`w_customerid`=values(`w_customerid`),
`w_addistribution`=values(`w_addistribution`);
END]]></string>
		</procedure>
		<procedure name="upsert_workamajig_projects" id="Procedure-9eb" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `upsert_workamajig_projects`(
	IN iv_prjct_number varchar(50),
	IN iv_prjct_name varchar(100),
	IN iv_prjct_startdate date,
	IN iv_prjct_status varchar(45),
	IN iv_prjct_type varchar(45),
	IN iv_prjct_active varchar(45),
	IN iv_prjct_percentcomplete varchar(10),
	IN iv_prjct_clientid varchar(45)
    )
BEGIN
INSERT INTO `workamajig_projects`
(`prjct_number`,
`prjct_name`,
`prjct_startdate`,
`prjct_status`,
`prjct_type`,
`prjct_active`,
`prjct_percentcomplete`,
`prjct_clientid`)
VALUES (iv_prjct_number,
iv_prjct_name,
iv_prjct_startdate,
iv_prjct_status,
iv_prjct_type,
iv_prjct_active,
iv_prjct_percentcomplete,
iv_prjct_clientid)
ON DUPLICATE KEY UPDATE
-- `prjct_number`=values(`prjct_number`),
`prjct_name`=values(`prjct_name`),
`prjct_startdate`=values(`prjct_startdate`),
`prjct_status`=values(`prjct_status`),
`prjct_type`=values(`prjct_type`),
`prjct_active`=values(`prjct_active`),
`prjct_percentcomplete`=values(`prjct_percentcomplete`),
`prjct_clientid`=values(`prjct_clientid`);
END]]></string>
		</procedure>
		<procedure name="xxx_upsert_google_ad" id="Procedure-605" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `xxx_upsert_google_ad`(
IN iv_ggl_ad_id varchar(45),
IN iv_ggl_account varchar(45),
IN iv_ggl_campaign_status varchar(45),
IN iv_ggl_ad_network varchar(45),
IN iv_ggl_campaign_id varchar(45),
IN iv_ggl_campaign varchar(255),
IN iv_ggl_device varchar(50),
IN iv_ggl_month date,
IN iv_ggl_impressions int(11),
IN iv_ggl_clicks int(11),
IN iv_ggl_cost int(11),
IN iv_ggl_finalurl varchar(255)
)
BEGIN
INSERT INTO `google_ad`
(
ggl_ad_id,
`ggl_account`,
`ggl_campaign_status`,
`ggl_ad_network`,
`ggl_campaign_id`,
`ggl_campaign`,
`ggl_device`,
`ggl_month`,
`ggl_impressions`,
`ggl_clicks`,
`ggl_cost`,
`ggl_finalurl`)
VALUES (
iv_ggl_ad_id,
iv_ggl_account,
iv_ggl_campaign_status,
iv_ggl_ad_network,
iv_ggl_campaign_id,
iv_ggl_campaign,
iv_ggl_device,
iv_ggl_month,
iv_ggl_impressions,
iv_ggl_clicks,
iv_ggl_cost,
iv_ggl_finalurl
)
ON DUPLICATE KEY UPDATE
`ggl_campaign_status`=values(`ggl_campaign_status`),
`ggl_campaign`=values(`ggl_campaign`),
`ggl_device`=values(`ggl_device`),
`ggl_month`=values(`ggl_month`),
`ggl_impressions`=values(`ggl_impressions`),
`ggl_clicks`=values(`ggl_clicks`),
`ggl_cost`=values(`ggl_cost`)
;

END]]></string>
		</procedure>
		<procedure name="xxxupdate_web_mor" id="Procedure-3b1" isSystem="false" params_known="n" >
			<string><![CDATA[CREATE  PROCEDURE `xxxupdate_web_mor`(IN iv_curdate date)
BEGIN
		IF iv_curdate is null THEN
			select curdate() into iv_curdate;
		END IF;
        
        select iv_curdate;
		/*** This will update facebook ads with reporting information ***/

		-- This will update ad based on client information. This should only happen with brand new campaign.
		update
		facebook_ads ads
		left join facebook_page fbpg
		on ads.fbad_page_id = fbpg.fbpg_id
		left join vw_client c
		on coalesce(fbpg.fbpg_clientid,'001') = c.client_id
		set ads.client_id = c.client_id,
		ads.reportinggroup = c.client_description
		 where ads.client_id is null
     or (ads.client_id='001' and left(ads.fbad_campaign_name,3) <> '001');

		-- update campaign information if it is changed on campaign config
		update
		-- select ads.* from 
		facebook_ads ads
		join client_rg_cmpgn_config cc
			on ads.fbad_campaign_name like campaign
			and cc.channel = 'Facebook'
			and cc.reportingmonth = DATE_FORMAT(iv_curdate, '%Y-%m-01')
		set ads.client_id = cc.client_id,
			ads.reportinggroup = cc.reportinggroup
		 where coalesce(ads.client_id,'') <> cc.client_id
			or coalesce(ads.reportinggroup,'') <> cc.reportinggroup;

		/*** This will update Google ads with reporting information ***/
		update
		google_ad ads
		left join vw_client c
			on CASE WHEN (ads.ggl_account = 'Venel') THEN '001' ELSE LEFT(ads.ggl_account, 3) END = c.client_id
		set 
			ads.client_id = c.client_id,
			ads.reportinggroup = c.client_description
		where ads.client_id is null
			and ads.ggl_month = DATE_FORMAT(iv_curdate, '%Y-%m-01');    

		update
		 -- select ads.*,cc.client_id,cc.reportinggroup from 
		google_ad ads
		join client_rg_cmpgn_config cc
			on ads.ggl_campaign like campaign
			and cc.channel = 'Google'
            and cc.client_id = ads.client_id
			and cc.reportingmonth = DATE_FORMAT(iv_curdate, '%Y-%m-01')
		 set ads.client_id = cc.client_id,
		 	ads.reportinggroup = cc.reportinggroup
		 where  coalesce(ads.reportinggroup,'') <> cc.reportinggroup
			and ads.ggl_month = DATE_FORMAT(iv_curdate, '%Y-%m-01');        
            
		/*** This will update bing ads with reporting information ***/
		update
		bing_ad ads
		left join vw_client c
			on CASE WHEN (ads.bng_accountname = 'VenelBCC') THEN '001' ELSE LEFT(ads.bng_accountname, 3) END = c.client_id
		set 
			ads.client_id = c.client_id,
			ads.reportinggroup = c.client_description
		where ads.client_id is null
			and ads.bng_month = DATE_FORMAT(iv_curdate, '%Y-%m-01');    

		update
		 -- select ads.*,cc.client_id,cc.reportinggroup from 
		bing_ad ads
		join client_rg_cmpgn_config cc
			on ads.bng_campaignname like campaign
			and cc.channel = 'Bing'
            and cc.client_id = ads.client_id
			and cc.reportingmonth = DATE_FORMAT(iv_curdate, '%Y-%m-01')
		 set ads.client_id = cc.client_id,
		 	ads.reportinggroup = cc.reportinggroup
		 where  coalesce(ads.reportinggroup,'') <> cc.reportinggroup
			and ads.bng_month = DATE_FORMAT(iv_curdate, '%Y-%m-01');  


		/*** This will update El Toro ads with reporting information ***/            
		update
		-- select coalesce(c.client_id,c1.client_id),eltrrdrlns_campaign_name  from 
		eltoro_orderlines ads
		LEFT JOIN vw_client c 
			ON LEFT(ads.eltrrdrlns_campaign_name, 3) = c.client_id
		LEFT JOIN vw_client c1
			ON COALESCE(`c`.`client_id`, '001') = c1.client_id
		set
			ads.client_id = coalesce(c.client_id,c1.client_id),
			ads.reportinggroup = coalesce(c.client_description,c1.client_description)
		where ads.client_id is null
			and DATE_FORMAT(iv_curdate, '%Y-%m-01') between ads.eltrrdrlns_startdate and ads.eltrrdrlns_enddate;

		update
		 -- select ads.*,cc.client_id,cc.reportinggroup from 
		eltoro_orderlines ads
		join client_rg_cmpgn_config cc
			on ads.eltrrdrlns_campaign_name like campaign
			and cc.channel = 'El Toro'
			and cc.client_id = ads.client_id
			and cc.reportingmonth = DATE_FORMAT(iv_curdate, '%Y-%m-01')
		  set ads.reportinggroup = cc.reportinggroup
		 where  coalesce(ads.reportinggroup,'') <> cc.reportinggroup
			and DATE_FORMAT(iv_curdate, '%Y-%m-01') between ads.eltrrdrlns_startdate and ads.eltrrdrlns_enddate;
            
		/*** This will update GroundTruth ads with reporting information ***/            
		update
		groundtruth ads
		LEFT JOIN vw_client c 
			ON CASE WHEN (LEFT(ads.gt_acct_name, 2) = '1 ') THEN '001' ELSE LEFT(ads.gt_acct_name, 3) END = c.client_id
		LEFT JOIN vw_client c1
			ON COALESCE(`c`.`client_id`, '001') = c1.client_id
		set
			ads.client_id = coalesce(c.client_id,c1.client_id),
			ads.reportinggroup = coalesce(c.client_description,c1.client_description)
		where ads.client_id is null
			and DATE_FORMAT(iv_curdate, '%Y-%m-01') = DATE_FORMAT(ads.gt_date, '%Y-%m-01');

		update
		 -- select ads.*,cc.client_id,cc.reportinggroup from 
		groundtruth ads
		join client_rg_cmpgn_config cc
			on ads.gt_cmpgn_name like campaign
			and cc.channel = 'GroundTruth'
			and cc.client_id = ads.client_id
			and cc.reportingmonth = DATE_FORMAT(iv_curdate, '%Y-%m-01')
		  set ads.reportinggroup = cc.reportinggroup
		 where  coalesce(ads.reportinggroup,'') <> cc.reportinggroup
			and DATE_FORMAT(iv_curdate, '%Y-%m-01')  = DATE_FORMAT(ads.gt_date, '%Y-%m-01');            
          
		-- This will clean out and rebuild web mor
		TRUNCATE dw.web_mor;
		INSERT INTO dw.web_mor
		SELECT * FROM dw.vw_web_mor;
		
		-- This will clear out and rebuild campaign summary
		TRUNCATE dw.campaign_summary;
		INSERT INTO dw.campaign_summary
		SELECT * FROM dw.vw_campaign;
    
		-- *** This will insert new campaigns as they occur during the month
		INSERT INTO `dw`.`client_rg_cmpgn_config`
		(`client_id`,
		`reportinggroup`,
		`reportingmonth`,
		`channel`,
		`campaign`,
		`invoice_amount`,
		`planned_spend`,
		`actual_spend`,
		`active`
		)
		SELECT
			cs.client_id
			,cs.reporting_group
			,cs.reporting_month
			,cs.Channel
			,cs.`Campaign Name`
			, 0 invoice_amount
			, 0 planned_spend
			-- , sum(case when reporting_month < DATE_FORMAT(iv_curdate, '%Y-%m-01') then cost else 0 end) as actual_spend
			, round(sum(cs.cost),2) as actual_spend
			, 1 as active
		FROM
			dw.campaign_summary cs
		LEFT OUTER JOIN dw.client_rg_cmpgn_config cc
			ON cs.client_id = cc.client_id
			and cs.reporting_group = cc.reportinggroup
			and cs.reporting_month = cc.reportingmonth
			and cs.channel = cc.channel
			and cs.`campaign name` = cc.campaign
		WHERE not cs.`Campaign Name` like 'Post%'
		 and cc.client_id is null
     and coalesce(cs.cost,0)>0
		 -- and cs.client_id = '497'
		GROUP BY
			cs.client_id
			,cs.reporting_group
			,cs.reporting_month
			,cs.Channel
			,cs.`Campaign Name`;
            
		-- *** This will update actuals for campaigns within current month
		UPDATE  
		-- select * from 
		client_rg_cmpgn_config cc
		LEFT JOIN
			(SELECT
				cs.client_id
				,cs.reporting_group
				,cs.reporting_month
				,cs.Channel
				,cs.`Campaign Name`
				, round(sum(coalesce(cs.cost,0)),2) as actual_spend
				, 1 as active
			FROM
				dw.campaign_summary cs
			WHERE not cs.`Campaign Name` like 'Post%'
				and cs.reporting_month = DATE_FORMAT(iv_curdate, '%Y-%m-01')
				-- and cs.`campaign name` = '0-GeoPlacement-518-Huntsville (Job 4813 - After Hours Clinic Update)'
			GROUP BY
				cs.client_id
				,cs.reporting_group
				,cs.reporting_month
				,cs.Channel
				,cs.`Campaign Name`) cs
		ON cs.client_id = cc.client_id
			and cs.reporting_group = cc.reportinggroup
			and cs.reporting_month = cc.reportingmonth
			and cs.channel = cc.channel
			and cs.`campaign name` = cc.campaign
		SET cc.actual_spend = cs.actual_spend
		WHERE cc.reportingmonth = DATE_FORMAT(iv_curdate, '%Y-%m-01');
        
		-- *** This will update actuals for campaigns within previous month for 5 days after monthend
		IF day(iv_curdate)<5 THEN
			UPDATE  
			-- select * from 
			client_rg_cmpgn_config cc
			LEFT JOIN
				(SELECT
					cs.client_id
					,cs.reporting_group
					,cs.reporting_month
					,cs.Channel
					,cs.`Campaign Name`
					, round(sum(coalesce(cs.cost,0)),2) as actual_spend
					, 1 as active
				FROM
					dw.campaign_summary cs
				WHERE not cs.`Campaign Name` like 'Post%'
					and cs.reporting_month = date_add(DATE_FORMAT(iv_curdate, '%Y-%m-01'), interval -1 month)
					-- and cs.`campaign name` = '0-GeoPlacement-518-Huntsville (Job 4813 - After Hours Clinic Update)'
				GROUP BY
					cs.client_id
					,cs.reporting_group
					,cs.reporting_month
					,cs.Channel
					,cs.`Campaign Name`) cs
			ON cs.client_id = cc.client_id
				and cs.reporting_group = cc.reportinggroup
				and cs.reporting_month = cc.reportingmonth
				and cs.channel = cc.channel
				and cs.`campaign name` = cc.campaign
			SET cc.actual_spend = cs.actual_spend
			WHERE cc.reportingmonth = date_add(DATE_FORMAT(iv_curdate, '%Y-%m-01'), interval -1 month);
        END IF;
    
END]]></string>
		</procedure>
	</schema>
	<connector name="MySql" database="MySql" driver_class="com.mysql.cj.jdbc.Driver" driver_jar="mysql-connector-j-8.0.32.jar" url="jdbc:mysql://venel.cwqwbu8aqemb.us-east-2.rds.amazonaws.com:3306" host="localhost" port="3306" user="Octopai" passwd="T2N0b3BhaTEyMyE=" useSystemProxy="false" />
	<layout name="Main Layout" id="Layout-1084" show_relation="columns" >
		<entity schema="dw" name="_calls" color="BED3F4" x="2608" y="3120" />
		<entity schema="dw" name="_wrkmjg_byweek" color="BED3F4" x="2864" y="3120" />
		<entity schema="dw" name="adroll" color="BED3F4" x="2864" y="3328" />
		<entity schema="dw" name="appointment_email" color="BED3F4" x="2864" y="3680" />
		<entity schema="dw" name="bing_ad" color="BED3F4" x="2608" y="3680" />
		<entity schema="dw" name="bing_ad_org" color="BED3F4" x="1824" y="1936" />
		<entity schema="dw" name="calendar" color="BED3F4" x="2368" y="3680" />
		<entity schema="dw" name="call" color="BED3F4" x="2352" y="3088" />
		<entity schema="dw" name="call_bkup" color="F4DDBE" x="4272" y="752" />
		<entity schema="dw" name="call_mor" color="F4DDBE" x="4528" y="752" />
		<entity schema="dw" name="call_webhook" color="BEBEF4" x="5296" y="2256" />
		<entity schema="dw" name="callrail" color="BEBEF4" x="5040" y="1760" />
		<entity schema="dw" name="callrail_companies" color="F4DDBE" x="4528" y="1072" />
		<entity schema="dw" name="callrail_companies_old" color="F4DDBE" x="4752" y="1072" />
		<entity schema="dw" name="callrail_formsubmission" color="BEBEF4" x="5488" y="1760" />
		<entity schema="dw" name="callrail_tags" color="BEBEF4" x="5296" y="1760" />
		<entity schema="dw" name="callrail_trackers" color="BEBEF4" x="5024" y="1376" />
		<entity schema="dw" name="callrail_trackers_old" color="BEBEF4" x="5296" y="1376" />
		<entity schema="dw" name="callsource" color="F4DDBE" x="3984" y="752" />
		<entity schema="dw" name="campaign_summary" color="BED3F4" x="2608" y="2704" />
		<entity schema="dw" name="campaign_summary_bydate" color="BED3F4" x="2832" y="5744" />
		<entity schema="dw" name="channel" color="BED3F4" x="2864" y="2896" />
		<entity schema="dw" name="channel_category" color="BED3F4" x="3936" y="3968" />
		<entity schema="dw" name="chatbot_busiest_periods" color="BED3F4" x="3136" y="3328" />
		<entity schema="dw" name="chatbot_conversations" color="BED3F4" x="4000" y="4368" />
		<entity schema="dw" name="chatbot_interactions" color="BED3F4" x="4240" y="4368" />
		<entity schema="dw" name="chatbot_stories" color="BED3F4" x="4464" y="4368" />
		<entity schema="dw" name="client" color="BED3F4" x="3136" y="3680" />
		<entity schema="dw" name="client_email" color="BEBEF4" x="7376" y="5232" />
		<entity schema="dw" name="client_ext_reviews" color="F4DDBE" x="5296" y="5232" />
		<entity schema="dw" name="client_ext_reviews_bkup" color="F4DDBE" x="5552" y="5232" />
		<entity schema="dw" name="client_gmb" color="BEBEF4" x="7376" y="5600" />
		<entity schema="dw" name="client_gmb_bkup" color="BEBEF4" x="7648" y="5600" />
		<entity schema="dw" name="client_gmb_location_phone" color="F4DDBE" x="5024" y="5232" />
		<entity schema="dw" name="client_gmb_responses" color="BEBEF4" x="7904" y="5600" />
		<entity schema="dw" name="client_invoice_config" color="D1BEF4" x="5888" y="5232" />
		<entity schema="dw" name="client_invoice_config_bkup" color="D1BEF4" x="6112" y="5232" />
		<entity schema="dw" name="client_npiregistry_postal" color="D1BEF4" x="5024" y="3824" />
		<entity schema="dw" name="client_npiregistry_taxonomy" color="D1BEF4" x="5280" y="3824" />
		<entity schema="dw" name="client_pe_info" color="BEBEF4" x="6928" y="5232" />
		<entity schema="dw" name="client_pe_locations" color="BEBEF4" x="6160" y="4320" />
		<entity schema="dw" name="client_personnel" color="F4DDBE" x="5552" y="5600" />
		<entity schema="dw" name="client_pr" color="BEBEF4" x="7136" y="5232" />
		<entity schema="dw" name="client_preference_awareness" color="D1BEF4" x="5840" y="5584" />
		<entity schema="dw" name="client_projects" color="D1BEF4" x="6320" y="5584" />
		<entity schema="dw" name="client_projects_online" color="D1BEF4" x="6656" y="5584" />
		<entity schema="dw" name="client_referral_reach" color="D1BEF4" x="5520" y="4112" />
		<entity schema="dw" name="client_rg_call_config" color="D1BEF4" x="5280" y="4432" />
		<entity schema="dw" name="client_rg_call_config_20220419" color="F4DDBE" x="5264" y="5600" />
		<entity schema="dw" name="client_rg_call_config_bkup" color="F4DDBE" x="5552" y="5984" />
		<entity schema="dw" name="client_rg_call_config_new" color="D1BEF4" x="5520" y="4816" />
		<entity schema="dw" name="client_rg_cmpgn_config" color="BEBEF4" x="5904" y="3824" />
		<entity schema="dw" name="client_rg_cmpgn_config_bkup" color="BEBEF4" x="6160" y="3824" />
		<entity schema="dw" name="client_rg_cmpgn_config_fixed" color="BEBEF4" x="6448" y="3824" />
		<entity schema="dw" name="client_rg_cmpgn_prfrmnc_notes" color="BEBEF4" x="5872" y="4320" />
		<entity schema="dw" name="client_rg_cmpgn_prfrmnc_notes_bkup" color="BEBEF4" x="5824" y="4640" />
		<entity schema="dw" name="client_rg_mnthly_bdgt" color="D1BEF4" x="5280" y="4112" />
		<entity schema="dw" name="client_zipcodes" color="D1BEF4" x="6112" y="5584" />
		<entity schema="dw" name="device_mapping" color="BED3F4" x="3136" y="3152" />
		<entity schema="dw" name="dim_date" color="BED3F4" x="2608" y="4128" />
		<entity schema="dw" name="ecommunications" color="BED3F4" x="2368" y="4128" />
		<entity schema="dw" name="eltoro_orderlines" color="BED3F4" x="2080" y="3968" />
		<entity schema="dw" name="eltoro_stats" color="BED3F4" x="1584" y="2864" />
		<entity schema="dw" name="email_upload" color="BED3F4" x="2096" y="3360" />
		<entity schema="dw" name="facebook_ads" color="BED3F4" x="2080" y="2688" />
		<entity schema="dw" name="facebook_ads_bkup" color="BED3F4" x="5600" y="6416" />
		<entity schema="dw" name="facebook_metrics_agegender" color="BED3F4" x="5024" y="6816" />
		<entity schema="dw" name="facebook_metrics_device" color="BED3F4" x="5312" y="6816" />
		<entity schema="dw" name="facebook_page" color="BED3F4" x="5872" y="6816" />
		<entity schema="dw" name="facebook_page_likes" color="BED3F4" x="5600" y="6816" />
		<entity schema="dw" name="facebook_post" color="BED3F4" x="6128" y="6816" />
		<entity schema="dw" name="facebook_test" color="BED3F4" x="5840" y="7216" />
		<entity schema="dw" name="google_ad" color="BED3F4" x="2352" y="2688" />
		<entity schema="dw" name="google_ad_org" color="C7F4BE" x="2832" y="6720" />
		<entity schema="dw" name="google_analytics" color="BEBEF4" x="1792" y="6736" />
		<entity schema="dw" name="google_category" color="C7F4BE" x="2576" y="6720" />
		<entity schema="dw" name="google_contactme" color="C7F4BE" x="2336" y="6448" />
		<entity schema="dw" name="google_location" color="C7F4BE" x="2336" y="6720" />
		<entity schema="dw" name="google_location_diffs" color="C7F4BE" x="2576" y="7008" />
		<entity schema="dw" name="google_location_drivingdirections" color="BEBEF4" x="1488" y="6736" />
		<entity schema="dw" name="google_patientfeedback" color="BEBEF4" x="1264" y="6416" />
		<entity schema="dw" name="google_question" color="C7F4BE" x="2576" y="6416" />
		<entity schema="dw" name="google_question_answer" color="C7F4BE" x="2832" y="6416" />
		<entity schema="dw" name="google_question_patientfeedback" color="C7F4BE" x="3088" y="6416" />
		<entity schema="dw" name="google_review" color="BEBEF4" x="1520" y="6416" />
		<entity schema="dw" name="google_review_reply" color="BEBEF4" x="1792" y="6416" />
		<entity schema="dw" name="google_review_reply_approval" color="BEBEF4" x="2016" y="6416" />
		<entity schema="dw" name="groundtruth" color="BED3F4" x="2608" y="2320" />
		<entity schema="dw" name="listings_summary" color="BED3F4" x="3168" y="2816" />
		<entity schema="dw" name="listings_summary_fixed" color="BED3F4" x="2576" y="5744" />
		<entity schema="dw" name="menu" color="BED3F4" x="3392" y="3328" />
		<entity schema="dw" name="menu_old" color="BED3F4" x="3472" y="3968" />
		<entity schema="dw" name="metrics" color="BED3F4" x="3456" y="3680" />
		<entity schema="dw" name="online_appointment" color="BED3F4" x="3456" y="4240" />
		<entity schema="dw" name="online_appointment_email" color="BED3F4" x="1264" y="4560" />
		<entity schema="dw" name="online_referral" color="BED3F4" x="4000" y="4880" />
		<entity schema="dw" name="provider" color="BED3F4" x="3456" y="4560" />
		<entity schema="dw" name="provider_clientsite" color="BED3F4" x="4464" y="4640" />
		<entity schema="dw" name="provider_sitepath" color="BED3F4" x="4784" y="4640" />
		<entity schema="dw" name="qb_customer" color="BED3F4" x="3136" y="4560" />
		<entity schema="dw" name="qb_invoice" color="BED3F4" x="2608" y="4800" />
		<entity schema="dw" name="qb_invoice_line" color="BED3F4" x="1520" y="4848" />
		<entity schema="dw" name="qb_item" color="BED3F4" x="1600" y="4096" />
		<entity schema="dw" name="qb_term" color="BED3F4" x="2944" y="4128" />
		<entity schema="dw" name="qb_token" color="BED3F4" x="2944" y="4384" />
		<entity schema="dw" name="receipts" color="BED3F4" x="2400" y="4800" />
		<entity schema="dw" name="report" color="BED3F4" x="2944" y="4608" />
		<entity schema="dw" name="reporting_group" color="D1BEF4" x="4224" y="6416" />
		<entity schema="dw" name="reporting_group_call" color="D1BEF4" x="4736" y="6704" />
		<entity schema="dw" name="reporting_group_facebook" color="D1BEF4" x="4736" y="6416" />
		<entity schema="dw" name="reporting_group_web" color="D1BEF4" x="4480" y="6416" />
		<entity schema="dw" name="reviews_sql" color="BED3F4" x="2112" y="4608" />
		<entity schema="dw" name="reviews_sql2" color="BED3F4" x="976" y="6416" />
		<entity schema="dw" name="reviews_sql_fixed" color="BED3F4" x="720" y="6416" />
		<entity schema="dw" name="scheduled_task_errors" color="BED3F4" x="2128" y="4400" />
		<entity schema="dw" name="sf_account" color="BED3F4" x="1808" y="4352" />
		<entity schema="dw" name="sf_campaign" color="BED3F4" x="1792" y="4048" />
		<entity schema="dw" name="sf_campaignmember" color="BED3F4" x="1792" y="4848" />
		<entity schema="dw" name="sf_contact" color="BED3F4" x="1520" y="4352" />
		<entity schema="dw" name="sf_task" color="BED3F4" x="1856" y="3600" />
		<entity schema="dw" name="socialmedia_text" color="BED3F4" x="1856" y="3088" />
		<entity schema="dw" name="tbl_pbi_appointments" color="BED3F4" x="1840" y="2768" />
		<entity schema="dw" name="tbl_pbi_calls" color="BED3F4" x="1600" y="3088" />
		<entity schema="dw" name="tbl_pbi_projects" color="BED3F4" x="1296" y="3376" />
		<entity schema="dw" name="testdate" color="BED3F4" x="2080" y="3088" />
		<entity schema="dw" name="testimonial" color="BEBEF4" x="448" y="5888" />
		<entity schema="dw" name="testimonial_clientsite" color="BEBEF4" x="976" y="5888" />
		<entity schema="dw" name="testimonial_source" color="BEBEF4" x="704" y="5888" />
		<entity schema="dw" name="th_r" color="BED3F4" x="1824" y="2320" />
		<entity schema="dw" name="th_r_sav" color="BED3F4" x="1568" y="2320" />
		<entity schema="dw" name="ufiles" color="BED3F4" x="2080" y="2384" />
		<entity schema="dw" name="user" color="BED3F4" x="2352" y="2416" />
		<entity schema="dw" name="users" color="BED3F4" x="4064" y="6160" />
		<entity schema="dw" name="vw_appointment" color="BED3F4" x="2896" y="2320" />
		<entity schema="dw" name="vw_calendar" color="BED3F4" x="2368" y="1808" />
		<entity schema="dw" name="vw_calendar_reporting_month" color="C7F4BE" x="624" y="3712" />
		<entity schema="dw" name="vw_calendar_rolling24" color="C7F4BE" x="144" y="1616" />
		<entity schema="dw" name="vw_call" color="C7F4BE" x="320" y="3136" />
		<entity schema="dw" name="vw_campaign" color="C7F4BE" x="848" y="3136" />
		<entity schema="dw" name="vw_campaign_channel_summary" color="C7F4BE" x="320" y="2816" />
		<entity schema="dw" name="vw_campaign_old" color="C7F4BE" x="624" y="3136" />
		<entity schema="dw" name="vw_campaign_planned_spend" color="C7F4BE" x="624" y="2576" />
		<entity schema="dw" name="vw_campaign_planned_spend_fixed" color="C7F4BE" x="912" y="2512" />
		<entity schema="dw" name="vw_channelsummary" color="C7F4BE" x="112" y="1792" />
		<entity schema="dw" name="vw_chatbot_busiest_period" color="C7F4BE" x="48" y="3136" />
		<entity schema="dw" name="vw_client" color="C7F4BE" x="352" y="1792" />
		<entity schema="dw" name="vw_client_email" color="C7F4BE" x="656" y="1792" />
		<entity schema="dw" name="vw_client_ext_reviews" color="C7F4BE" x="400" y="1376" />
		<entity schema="dw" name="vw_client_ext_reviews_edit" color="C7F4BE" x="656" y="1376" />
		<entity schema="dw" name="vw_client_reportinggroup_monthlybudget" color="C7F4BE" x="880" y="1792" />
		<entity schema="dw" name="vw_ecommunication" color="BED3F4" x="2608" y="2000" />
		<entity schema="dw" name="vw_ecommunication_mor" color="BED3F4" x="2352" y="1376" />
		<entity schema="dw" name="vw_eltoro_ads" color="BED3F4" x="2608" y="1648" />
		<entity schema="dw" name="vw_facebook_ads_demo" color="BED3F4" x="2896" y="1888" />
		<entity schema="dw" name="vw_facebook_ads_device" color="C7F4BE" x="976" y="912" />
		<entity schema="dw" name="vw_facebook_ads_device_bydate" color="C7F4BE" x="672" y="496" />
		<entity schema="dw" name="vw_facebook_page_likes" color="C7F4BE" x="720" y="288" />
		<entity schema="dw" name="vw_facebook_post_mor" color="C7F4BE" x="976" y="288" />
		<entity schema="dw" name="vw_google_locations" color="BED3F4" x="3424" y="2496" />
		<entity schema="dw" name="vw_google_locations_diff" color="F4DDBE" x="1872" y="1024" />
		<entity schema="dw" name="vw_google_locations_pendingverification" color="F4DDBE" x="1536" y="720" />
		<entity schema="dw" name="vw_google_questions" color="F4DDBE" x="1264" y="80" />
		<entity schema="dw" name="vw_google_reviews" color="F4DDBE" x="1568" y="80" />
		<entity schema="dw" name="vw_google_reviews_org" color="F4DDBE" x="1872" y="80" />
		<entity schema="dw" name="vw_invoices" color="BED3F4" x="3584" y="3328" />
		<entity schema="dw" name="vw_invoices_all" color="D1BEF4" x="5328" y="944" />
		<entity schema="dw" name="vw_invoices_flatfee" color="D1BEF4" x="5024" y="944" />
		<entity schema="dw" name="vw_online" color="BED3F4" x="3664" y="3680" />
		<entity schema="dw" name="vw_online_appointment" color="BED3F4" x="3936" y="3680" />
		<entity schema="dw" name="vw_online_mor" color="BED3F4" x="3936" y="3360" />
		<entity schema="dw" name="vw_pbi_allreviews" color="BED3F4" x="3680" y="4064" />
		<entity schema="dw" name="vw_pbi_allreviews_new" color="F4DDBE" x="8800" y="2112" />
		<entity schema="dw" name="vw_pbi_allreviews_old" color="F4DDBE" x="9040" y="2208" />
		<entity schema="dw" name="vw_pbi_appointments" color="F4DDBE" x="8800" y="1792" />
		<entity schema="dw" name="vw_pbi_calendar" color="F4DDBE" x="9840" y="1376" />
		<entity schema="dw" name="vw_pbi_calendar_all" color="F4DDBE" x="10064" y="1376" />
		<entity schema="dw" name="vw_pbi_calls" color="BED3F4" x="7168" y="1376" />
		<entity schema="dw" name="vw_pbi_calls2" color="BED3F4" x="6240" y="1376" />
		<entity schema="dw" name="vw_pbi_campaignbudgets" color="BED3F4" x="5760" y="1376" />
		<entity schema="dw" name="vw_pbi_campaigns" color="BED3F4" x="6016" y="1376" />
		<entity schema="dw" name="vw_pbi_channels" color="BED3F4" x="6864" y="1376" />
		<entity schema="dw" name="vw_pbi_chatbotbusyperiods" color="BED3F4" x="6864" y="1616" />
		<entity schema="dw" name="vw_pbi_chatbotconversations" color="BED3F4" x="6848" y="1888" />
		<entity schema="dw" name="vw_pbi_chatbotinteractions" color="BED3F4" x="7376" y="1888" />
		<entity schema="dw" name="vw_pbi_chatbotstories" color="BED3F4" x="7136" y="1888" />
		<entity schema="dw" name="vw_pbi_client_providers" color="C7F4BE" x="10800" y="1760" />
		<entity schema="dw" name="vw_pbi_clientbudget" color="C7F4BE" x="11056" y="1760" />
		<entity schema="dw" name="vw_pbi_clientpersonnel" color="C7F4BE" x="11040" y="1984" />
		<entity schema="dw" name="vw_pbi_clients" color="C7F4BE" x="10784" y="1376" />
		<entity schema="dw" name="vw_pbi_clientzipcodes" color="C7F4BE" x="11280" y="1760" />
		<entity schema="dw" name="vw_pbi_dh_providers" color="F4DDBE" x="9792" y="1760" />
		<entity schema="dw" name="vw_pbi_fbpages" color="F4DDBE" x="10288" y="1760" />
		<entity schema="dw" name="vw_pbi_fbpglikes" color="F4DDBE" x="10288" y="1568" />
		<entity schema="dw" name="vw_pbi_fbposts" color="F4DDBE" x="10496" y="1760" />
		<entity schema="dw" name="vw_pbi_flatfee" color="F4DDBE" x="10064" y="1760" />
		<entity schema="dw" name="vw_pbi_googleanalytics" color="BED3F4" x="7952" y="1648" />
		<entity schema="dw" name="vw_pbi_googleanalytics_org" color="BED3F4" x="8208" y="2096" />
		<entity schema="dw" name="vw_pbi_googlepages" color="BED3F4" x="7952" y="2096" />
		<entity schema="dw" name="vw_pbi_googlereviews" color="BED3F4" x="7952" y="2512" />
		<entity schema="dw" name="vw_pbi_invoices" color="F4DDBE" x="8512" y="1440" />
		<entity schema="dw" name="vw_pbi_onlineapptsrefs" color="F4DDBE" x="9600" y="1376" />
		<entity schema="dw" name="vw_pbi_patientactivity" color="BED3F4" x="7952" y="1376" />
		<entity schema="dw" name="vw_pbi_patientemail" color="BED3F4" x="8208" y="1376" />
		<entity schema="dw" name="vw_pbi_providers" color="F4DDBE" x="9296" y="1376" />
		<entity schema="dw" name="vw_pbi_referringproviders" color="BED3F4" x="7680" y="1376" />
		<entity schema="dw" name="vw_pbi_reviews" color="C7F4BE" x="11280" y="1984" />
		<entity schema="dw" name="vw_pbi_vrm_accounts" color="F4DDBE" x="8816" y="1440" />
		<entity schema="dw" name="vw_pbi_vrm_campaignmembers" color="BED3F4" x="5952" y="1856" />
		<entity schema="dw" name="vw_pbi_vrm_campaigns" color="BED3F4" x="5952" y="2096" />
		<entity schema="dw" name="vw_pbi_vrm_contacts" color="F4DDBE" x="9056" y="1792" />
		<entity schema="dw" name="vw_pbi_vrm_tasks" color="F4DDBE" x="9056" y="1440" />
		<entity schema="dw" name="vw_pbi_workamajig" color="BED3F4" x="6240" y="1856" />
		<entity schema="dw" name="vw_provider" color="BED3F4" x="6544" y="1376" />
		<entity schema="dw" name="vw_reporting" color="BED3F4" x="3744" y="4560" />
		<entity schema="dw" name="vw_reporting_group" color="BED3F4" x="1264" y="4848" />
		<entity schema="dw" name="vw_reviews" color="BED3F4" x="4000" y="4560" />
		<entity schema="dw" name="vw_testimonial" color="BED3F4" x="3744" y="5232" />
		<entity schema="dw" name="vw_testimonial_org" color="BED3F4" x="4064" y="5232" />
		<entity schema="dw" name="vw_user" color="BED3F4" x="3744" y="4944" />
		<entity schema="dw" name="vw_workamajig" color="BED3F4" x="3456" y="5232" />
		<entity schema="dw" name="web_mor" color="BED3F4" x="3232" y="5232" />
		<entity schema="dw" name="workamajig_projects" color="BED3F4" x="3200" y="4880" />
		<entity schema="dw" name="workamajig_tasks" color="BED3F4" x="1552" y="1920" />
		<entity schema="dw" name="xxx_sf_fax" color="BED3F4" x="2880" y="4832" />
		<entity schema="dw" name="xxxfacebook_ad" color="BED3F4" x="2832" y="5200" />
		<entity schema="dw" name="xxxfacebook_ad_device" color="BED3F4" x="3120" y="5744" />
		<entity schema="dw" name="xxxvw_call_mor" color="BED3F4" x="2608" y="5200" />
		<entity schema="dw" name="xxxvw_facebook_ad" color="D1BEF4" x="5984" y="2512" />
		<entity schema="dw" name="xxxvw_facebook_demographics" color="D1BEF4" x="6272" y="2512" />
		<entity schema="dw" name="xxxvw_web_mor" color="D1BEF4" x="5760" y="2512" />
		<entity schema="dw" name="xxxweb" color="BED3F4" x="2368" y="5200" />
		<callout x="2608" y="2976" pointer="Round" >
			<comment><![CDATA[This is a layout. 
- Double-click table headers, columns, or foreign keys to edit 
- Drag tables to the layout from the structure tree, or 
   add them by pressing the arrow icon near columns 
- Create multiple layouts with the same or different tables 
- Right-click the layout to create new tables]]></comment>
		</callout>
		<group name="_calls" color="ECF0F7" >
			<entity schema="dw" name="_calls" />
			<entity schema="dw" name="_wrkmjg_byweek" />
			<entity schema="dw" name="adroll" />
			<entity schema="dw" name="appointment_email" />
			<entity schema="dw" name="bing_ad" />
			<entity schema="dw" name="calendar" />
			<entity schema="dw" name="call" />
			<entity schema="dw" name="campaign_summary" />
			<entity schema="dw" name="channel" />
			<entity schema="dw" name="chatbot_busiest_periods" />
			<entity schema="dw" name="client" />
			<entity schema="dw" name="device_mapping" />
			<entity schema="dw" name="dim_date" />
			<entity schema="dw" name="ecommunications" />
			<entity schema="dw" name="eltoro_orderlines" />
			<entity schema="dw" name="email_upload" />
			<entity schema="dw" name="facebook_ads" />
			<entity schema="dw" name="google_ad" />
			<entity schema="dw" name="groundtruth" />
			<entity schema="dw" name="listings_summary" />
			<entity schema="dw" name="menu" />
			<entity schema="dw" name="metrics" />
			<entity schema="dw" name="online_appointment" />
			<entity schema="dw" name="provider" />
			<entity schema="dw" name="qb_customer" />
			<entity schema="dw" name="qb_invoice" />
			<entity schema="dw" name="qb_term" />
			<entity schema="dw" name="receipts" />
			<entity schema="dw" name="report" />
			<entity schema="dw" name="reviews_sql" />
			<entity schema="dw" name="scheduled_task_errors" />
			<entity schema="dw" name="sf_account" />
			<entity schema="dw" name="sf_campaign" />
			<entity schema="dw" name="sf_task" />
			<entity schema="dw" name="socialmedia_text" />
			<entity schema="dw" name="tbl_pbi_appointments" />
			<entity schema="dw" name="testdate" />
			<entity schema="dw" name="th_r" />
			<entity schema="dw" name="ufiles" />
			<entity schema="dw" name="user" />
			<entity schema="dw" name="vw_appointment" />
			<entity schema="dw" name="vw_calendar" />
			<entity schema="dw" name="vw_ecommunication" />
			<entity schema="dw" name="vw_facebook_ads_demo" />
			<entity schema="dw" name="vw_google_locations" />
			<entity schema="dw" name="vw_invoices" />
			<entity schema="dw" name="vw_online" />
			<entity schema="dw" name="vw_pbi_allreviews" />
			<entity schema="dw" name="vw_reporting" />
			<entity schema="dw" name="vw_testimonial" />
			<entity schema="dw" name="vw_user" />
			<entity schema="dw" name="vw_workamajig" />
			<entity schema="dw" name="web_mor" />
			<entity schema="dw" name="workamajig_projects" />
			<entity schema="dw" name="xxx_sf_fax" />
			<entity schema="dw" name="xxxfacebook_ad" />
			<entity schema="dw" name="xxxvw_call_mor" />
			<entity schema="dw" name="xxxweb" />
			<entity schema="dw" name="vw_eltoro_ads" />
			<entity schema="dw" name="sf_contact" />
			<entity schema="dw" name="qb_item" />
			<entity schema="dw" name="vw_reviews" />
			<entity schema="dw" name="online_referral" />
			<entity schema="dw" name="chatbot_conversations" />
			<entity schema="dw" name="chatbot_interactions" />
			<entity schema="dw" name="chatbot_stories" />
			<entity schema="dw" name="tbl_pbi_calls" />
			<entity schema="dw" name="eltoro_stats" />
			<entity schema="dw" name="provider_clientsite" />
			<entity schema="dw" name="vw_online_appointment" />
			<entity schema="dw" name="channel_category" />
			<entity schema="dw" name="provider_sitepath" />
			<entity schema="dw" name="vw_online_mor" />
			<entity schema="dw" name="menu_old" />
			<entity schema="dw" name="qb_token" />
			<entity schema="dw" name="tbl_pbi_projects" />
			<entity schema="dw" name="th_r_sav" />
			<entity schema="dw" name="workamajig_tasks" />
			<entity schema="dw" name="bing_ad_org" />
			<entity schema="dw" name="sf_campaignmember" />
			<entity schema="dw" name="qb_invoice_line" />
			<entity schema="dw" name="vw_reporting_group" />
			<entity schema="dw" name="xxxfacebook_ad_device" />
			<entity schema="dw" name="campaign_summary_bydate" />
			<entity schema="dw" name="listings_summary_fixed" />
			<entity schema="dw" name="online_appointment_email" />
			<entity schema="dw" name="vw_testimonial_org" />
			<entity schema="dw" name="users" />
			<entity schema="dw" name="vw_ecommunication_mor" />
		</group>
		<group name="callrail" color="ECECF7" >
			<entity schema="dw" name="callrail" />
			<entity schema="dw" name="callrail_tags" />
			<entity schema="dw" name="callrail_formsubmission" />
			<entity schema="dw" name="call_webhook" />
			<entity schema="dw" name="callrail_trackers" />
			<entity schema="dw" name="callrail_trackers_old" />
		</group>
		<group name="client_gmb_location_phone" color="F7F2EC" >
			<entity schema="dw" name="client_gmb_location_phone" />
			<entity schema="dw" name="client_ext_reviews" />
			<entity schema="dw" name="client_ext_reviews_bkup" />
			<entity schema="dw" name="client_personnel" />
			<entity schema="dw" name="client_rg_call_config_20220419" />
			<entity schema="dw" name="client_rg_call_config_bkup" />
		</group>
		<group name="facebook_metrics_agegender" color="ECF0F7" >
			<entity schema="dw" name="facebook_metrics_agegender" />
			<entity schema="dw" name="facebook_metrics_device" />
			<entity schema="dw" name="facebook_page_likes" />
			<entity schema="dw" name="facebook_page" />
			<entity schema="dw" name="facebook_post" />
			<entity schema="dw" name="facebook_test" />
			<entity schema="dw" name="facebook_ads_bkup" />
		</group>
		<group name="google_patientfeedback" color="ECECF7" >
			<entity schema="dw" name="google_patientfeedback" />
			<entity schema="dw" name="google_review" />
			<entity schema="dw" name="google_review_reply" />
			<entity schema="dw" name="google_review_reply_approval" />
			<entity schema="dw" name="google_analytics" />
			<entity schema="dw" name="google_location_drivingdirections" />
		</group>
		<group name="reporting_group" color="F0ECF7" >
			<entity schema="dw" name="reporting_group" />
			<entity schema="dw" name="reporting_group_web" />
			<entity schema="dw" name="reporting_group_facebook" />
			<entity schema="dw" name="reporting_group_call" />
		</group>
		<group name="reviews_sql_fixed" color="ECF0F7" >
			<entity schema="dw" name="reviews_sql_fixed" />
			<entity schema="dw" name="reviews_sql2" />
		</group>
		<group name="testimonial" color="ECECF7" >
			<entity schema="dw" name="testimonial" />
			<entity schema="dw" name="testimonial_source" />
			<entity schema="dw" name="testimonial_clientsite" />
		</group>
		<group name="vw_channelsummary" color="EEF7EC" >
			<entity schema="dw" name="vw_channelsummary" />
			<entity schema="dw" name="vw_client" />
			<entity schema="dw" name="vw_client_email" />
			<entity schema="dw" name="vw_client_reportinggroup_monthlybudget" />
			<entity schema="dw" name="vw_client_ext_reviews" />
			<entity schema="dw" name="vw_client_ext_reviews_edit" />
			<entity schema="dw" name="vw_calendar_rolling24" />
		</group>
		<group name="vw_facebook_page_likes" color="EEF7EC" >
			<entity schema="dw" name="vw_facebook_page_likes" />
			<entity schema="dw" name="vw_facebook_post_mor" />
			<entity schema="dw" name="vw_facebook_ads_device_bydate" />
			<entity schema="dw" name="vw_facebook_ads_device" />
		</group>
		<group name="vw_google_questions" color="F7F2EC" >
			<entity schema="dw" name="vw_google_questions" />
			<entity schema="dw" name="vw_google_reviews" />
			<entity schema="dw" name="vw_google_reviews_org" />
			<entity schema="dw" name="vw_google_locations_pendingverification" />
			<entity schema="dw" name="vw_google_locations_diff" />
		</group>
		<group name="vw_invoices_flatfee" color="F0ECF7" >
			<entity schema="dw" name="vw_invoices_flatfee" />
			<entity schema="dw" name="vw_invoices_all" />
		</group>
		<group name="vw_pbi_campaignbudgets" color="ECF0F7" >
			<entity schema="dw" name="vw_pbi_campaignbudgets" />
			<entity schema="dw" name="vw_pbi_campaigns" />
			<entity schema="dw" name="vw_pbi_calls2" />
			<entity schema="dw" name="vw_pbi_workamajig" />
			<entity schema="dw" name="vw_pbi_vrm_campaignmembers" />
			<entity schema="dw" name="vw_pbi_vrm_campaigns" />
		</group>
		<group name="xxxvw_web_mor" color="F0ECF7" >
			<entity schema="dw" name="xxxvw_web_mor" />
			<entity schema="dw" name="xxxvw_facebook_ad" />
			<entity schema="dw" name="xxxvw_facebook_demographics" />
		</group>
		<group name="vw_provider" color="ECF0F7" >
			<entity schema="dw" name="vw_provider" />
			<entity schema="dw" name="vw_pbi_channels" />
			<entity schema="dw" name="vw_pbi_calls" />
			<entity schema="dw" name="vw_pbi_chatbotbusyperiods" />
			<entity schema="dw" name="vw_pbi_chatbotstories" />
			<entity schema="dw" name="vw_pbi_chatbotconversations" />
			<entity schema="dw" name="vw_pbi_chatbotinteractions" />
		</group>
		<group name="vw_chatbot_busiest_period" color="EEF7EC" >
			<entity schema="dw" name="vw_chatbot_busiest_period" />
			<entity schema="dw" name="vw_call" />
			<entity schema="dw" name="vw_campaign_old" />
			<entity schema="dw" name="vw_campaign" />
			<entity schema="dw" name="vw_calendar_reporting_month" />
			<entity schema="dw" name="vw_campaign_channel_summary" />
			<entity schema="dw" name="vw_campaign_planned_spend" />
			<entity schema="dw" name="vw_campaign_planned_spend_fixed" />
		</group>
		<group name="client_invoice_config" color="F0ECF7" >
			<entity schema="dw" name="client_invoice_config" />
			<entity schema="dw" name="client_invoice_config_bkup" />
			<entity schema="dw" name="client_zipcodes" />
			<entity schema="dw" name="client_preference_awareness" />
			<entity schema="dw" name="client_projects" />
			<entity schema="dw" name="client_projects_online" />
		</group>
		<group name="client_npiregistry_postal" color="F0ECF7" >
			<entity schema="dw" name="client_npiregistry_postal" />
			<entity schema="dw" name="client_npiregistry_taxonomy" />
			<entity schema="dw" name="client_rg_mnthly_bdgt" />
			<entity schema="dw" name="client_referral_reach" />
			<entity schema="dw" name="client_rg_call_config" />
			<entity schema="dw" name="client_rg_call_config_new" />
		</group>
		<group name="client_pe_info" color="ECECF7" >
			<entity schema="dw" name="client_pe_info" />
			<entity schema="dw" name="client_pr" />
			<entity schema="dw" name="client_email" />
			<entity schema="dw" name="client_gmb" />
			<entity schema="dw" name="client_gmb_bkup" />
			<entity schema="dw" name="client_gmb_responses" />
		</group>
		<group name="vw_pbi_referringproviders" color="ECF0F7" >
			<entity schema="dw" name="vw_pbi_referringproviders" />
			<entity schema="dw" name="vw_pbi_patientactivity" />
			<entity schema="dw" name="vw_pbi_patientemail" />
			<entity schema="dw" name="vw_pbi_googleanalytics" />
			<entity schema="dw" name="vw_pbi_googleanalytics_org" />
			<entity schema="dw" name="vw_pbi_googlepages" />
			<entity schema="dw" name="vw_pbi_googlereviews" />
		</group>
		<group name="vw_pbi_invoices" color="F7F2EC" >
			<entity schema="dw" name="vw_pbi_invoices" />
			<entity schema="dw" name="vw_pbi_vrm_accounts" />
			<entity schema="dw" name="vw_pbi_vrm_tasks" />
			<entity schema="dw" name="vw_pbi_vrm_contacts" />
			<entity schema="dw" name="vw_pbi_appointments" />
			<entity schema="dw" name="vw_pbi_allreviews_new" />
			<entity schema="dw" name="vw_pbi_allreviews_old" />
			<entity schema="dw" name="vw_pbi_providers" />
		</group>
		<group name="client_rg_cmpgn_config" color="ECECF7" >
			<entity schema="dw" name="client_rg_cmpgn_config" />
			<entity schema="dw" name="client_rg_cmpgn_config_bkup" />
			<entity schema="dw" name="client_rg_cmpgn_config_fixed" />
			<entity schema="dw" name="client_pe_locations" />
			<entity schema="dw" name="client_rg_cmpgn_prfrmnc_notes" />
			<entity schema="dw" name="client_rg_cmpgn_prfrmnc_notes_bkup" />
		</group>
		<group name="google_question" color="EEF7EC" >
			<entity schema="dw" name="google_question" />
			<entity schema="dw" name="google_question_answer" />
			<entity schema="dw" name="google_question_patientfeedback" />
			<entity schema="dw" name="google_ad_org" />
			<entity schema="dw" name="google_category" />
			<entity schema="dw" name="google_location" />
			<entity schema="dw" name="google_location_diffs" />
			<entity schema="dw" name="google_contactme" />
		</group>
		<group name="vw_pbi_onlineapptsrefs" color="F7F2EC" >
			<entity schema="dw" name="vw_pbi_onlineapptsrefs" />
			<entity schema="dw" name="vw_pbi_calendar" />
			<entity schema="dw" name="vw_pbi_calendar_all" />
			<entity schema="dw" name="vw_pbi_flatfee" />
			<entity schema="dw" name="vw_pbi_dh_providers" />
			<entity schema="dw" name="vw_pbi_fbpages" />
			<entity schema="dw" name="vw_pbi_fbposts" />
			<entity schema="dw" name="vw_pbi_fbpglikes" />
		</group>
		<group name="vw_pbi_client_providers" color="EEF7EC" >
			<entity schema="dw" name="vw_pbi_client_providers" />
			<entity schema="dw" name="vw_pbi_clientbudget" />
			<entity schema="dw" name="vw_pbi_clientzipcodes" />
			<entity schema="dw" name="vw_pbi_reviews" />
			<entity schema="dw" name="vw_pbi_clientpersonnel" />
			<entity schema="dw" name="vw_pbi_clients" />
		</group>
		<group name="callsource" color="F7F2EC" >
			<entity schema="dw" name="callsource" />
			<entity schema="dw" name="call_bkup" />
			<entity schema="dw" name="call_mor" />
			<entity schema="dw" name="callrail_companies" />
			<entity schema="dw" name="callrail_companies_old" />
		</group>
	</layout>
	<layout name="~Layout with Sample Tools" id="Layout-e5" show_column_type="y" show_relation="columns" >
		<entity schema="dw" name="_calls" color="BED3F4" x="3152" y="3088" />
		<entity schema="dw" name="_wrkmjg_byweek" color="BED3F4" x="3488" y="3088" />
		<entity schema="dw" name="adroll" color="BED3F4" x="3488" y="3296" />
		<entity schema="dw" name="appointment_email" color="BED3F4" x="3488" y="3648" />
		<entity schema="dw" name="bing_ad" color="BED3F4" x="3152" y="3648" />
		<entity schema="dw" name="bing_ad_org" color="BED3F4" x="2464" y="1904" />
		<entity schema="dw" name="calendar" color="BED3F4" x="2848" y="3648" />
		<entity schema="dw" name="call" color="BED3F4" x="2816" y="3056" />
		<entity schema="dw" name="call_bkup" color="F4DDBE" x="4896" y="720" />
		<entity schema="dw" name="call_mor" color="F4DDBE" x="5232" y="720" />
		<entity schema="dw" name="call_webhook" color="BEBEF4" x="6224" y="2224" />
		<entity schema="dw" name="callrail" color="BEBEF4" x="5888" y="1728" />
		<entity schema="dw" name="callrail_companies" color="F4DDBE" x="5232" y="1040" />
		<entity schema="dw" name="callrail_companies_old" color="F4DDBE" x="5536" y="1040" />
		<entity schema="dw" name="callrail_formsubmission" color="BEBEF4" x="6480" y="1728" />
		<entity schema="dw" name="callrail_tags" color="BEBEF4" x="6224" y="1728" />
		<entity schema="dw" name="callrail_trackers" color="BEBEF4" x="5872" y="1344" />
		<entity schema="dw" name="callrail_trackers_old" color="BEBEF4" x="6224" y="1344" />
		<entity schema="dw" name="callsource" color="F4DDBE" x="4528" y="720" />
		<entity schema="dw" name="campaign_summary" color="BED3F4" x="3152" y="2672" />
		<entity schema="dw" name="campaign_summary_bydate" color="BED3F4" x="3120" y="5712" />
		<entity schema="dw" name="channel" color="BED3F4" x="3488" y="2864" />
		<entity schema="dw" name="channel_category" color="BED3F4" x="4848" y="3472" />
		<entity schema="dw" name="chatbot_busiest_periods" color="BED3F4" x="3824" y="3296" />
		<entity schema="dw" name="chatbot_conversations" color="BED3F4" x="4944" y="4336" />
		<entity schema="dw" name="chatbot_interactions" color="BED3F4" x="5248" y="4336" />
		<entity schema="dw" name="chatbot_stories" color="BED3F4" x="5552" y="4336" />
		<entity schema="dw" name="client" color="BED3F4" x="3824" y="3648" />
		<entity schema="dw" name="client_email" color="BEBEF4" x="8768" y="5200" />
		<entity schema="dw" name="client_ext_reviews" color="F4DDBE" x="6176" y="5200" />
		<entity schema="dw" name="client_ext_reviews_bkup" color="F4DDBE" x="6512" y="5200" />
		<entity schema="dw" name="client_gmb" color="BEBEF4" x="8768" y="5568" />
		<entity schema="dw" name="client_gmb_bkup" color="BEBEF4" x="9120" y="5568" />
		<entity schema="dw" name="client_gmb_location_phone" color="F4DDBE" x="5872" y="5200" />
		<entity schema="dw" name="client_gmb_responses" color="BEBEF4" x="9456" y="5568" />
		<entity schema="dw" name="client_invoice_config" color="D1BEF4" x="6912" y="5200" />
		<entity schema="dw" name="client_invoice_config_bkup" color="D1BEF4" x="7200" y="5200" />
		<entity schema="dw" name="client_npiregistry_postal" color="D1BEF4" x="5872" y="3792" />
		<entity schema="dw" name="client_npiregistry_taxonomy" color="D1BEF4" x="6208" y="3792" />
		<entity schema="dw" name="client_pe_info" color="BEBEF4" x="8176" y="5200" />
		<entity schema="dw" name="client_pe_locations" color="BEBEF4" x="7200" y="4288" />
		<entity schema="dw" name="client_personnel" color="F4DDBE" x="6512" y="5568" />
		<entity schema="dw" name="client_pr" color="BEBEF4" x="8448" y="5200" />
		<entity schema="dw" name="client_preference_awareness" color="D1BEF4" x="6880" y="5552" />
		<entity schema="dw" name="client_projects" color="D1BEF4" x="7488" y="5552" />
		<entity schema="dw" name="client_projects_online" color="D1BEF4" x="7840" y="5552" />
		<entity schema="dw" name="client_referral_reach" color="D1BEF4" x="6512" y="4080" />
		<entity schema="dw" name="client_rg_call_config" color="D1BEF4" x="6192" y="4400" />
		<entity schema="dw" name="client_rg_call_config_20220419" color="F4DDBE" x="6176" y="5568" />
		<entity schema="dw" name="client_rg_call_config_bkup" color="F4DDBE" x="6496" y="5952" />
		<entity schema="dw" name="client_rg_call_config_new" color="D1BEF4" x="6512" y="4784" />
		<entity schema="dw" name="client_rg_cmpgn_config" color="BEBEF4" x="6896" y="3792" />
		<entity schema="dw" name="client_rg_cmpgn_config_bkup" color="BEBEF4" x="7200" y="3792" />
		<entity schema="dw" name="client_rg_cmpgn_config_fixed" color="BEBEF4" x="7520" y="3792" />
		<entity schema="dw" name="client_rg_cmpgn_prfrmnc_notes" color="BEBEF4" x="6896" y="4288" />
		<entity schema="dw" name="client_rg_cmpgn_prfrmnc_notes_bkup" color="BEBEF4" x="6864" y="4608" />
		<entity schema="dw" name="client_rg_mnthly_bdgt" color="D1BEF4" x="6208" y="4080" />
		<entity schema="dw" name="client_zipcodes" color="D1BEF4" x="7200" y="5552" />
		<entity schema="dw" name="device_mapping" color="BED3F4" x="3824" y="3120" />
		<entity schema="dw" name="dim_date" color="BED3F4" x="3152" y="4096" />
		<entity schema="dw" name="ecommunications" color="BED3F4" x="2832" y="4096" />
		<entity schema="dw" name="eltoro_orderlines" color="BED3F4" x="2464" y="3648" />
		<entity schema="dw" name="eltoro_stats" color="BED3F4" x="2128" y="3056" />
		<entity schema="dw" name="email_upload" color="BED3F4" x="2480" y="3328" />
		<entity schema="dw" name="facebook_ads" color="BED3F4" x="2464" y="2656" />
		<entity schema="dw" name="facebook_ads_bkup" color="BED3F4" x="6464" y="6384" />
		<entity schema="dw" name="facebook_metrics_agegender" color="BED3F4" x="5872" y="6784" />
		<entity schema="dw" name="facebook_metrics_device" color="BED3F4" x="6192" y="6784" />
		<entity schema="dw" name="facebook_page" color="BED3F4" x="6816" y="6784" />
		<entity schema="dw" name="facebook_page_likes" color="BED3F4" x="6512" y="6784" />
		<entity schema="dw" name="facebook_post" color="BED3F4" x="7152" y="6784" />
		<entity schema="dw" name="facebook_test" color="BED3F4" x="6816" y="7184" />
		<entity schema="dw" name="google_ad" color="BED3F4" x="2816" y="2656" />
		<entity schema="dw" name="google_ad_org" color="C7F4BE" x="3392" y="6688" />
		<entity schema="dw" name="google_analytics" color="BEBEF4" x="2096" y="6704" />
		<entity schema="dw" name="google_category" color="C7F4BE" x="3040" y="6688" />
		<entity schema="dw" name="google_contactme" color="C7F4BE" x="2704" y="6416" />
		<entity schema="dw" name="google_location" color="C7F4BE" x="2752" y="6688" />
		<entity schema="dw" name="google_location_diffs" color="C7F4BE" x="3040" y="6976" />
		<entity schema="dw" name="google_location_drivingdirections" color="BEBEF4" x="1728" y="6704" />
		<entity schema="dw" name="google_patientfeedback" color="BEBEF4" x="1456" y="6384" />
		<entity schema="dw" name="google_question" color="C7F4BE" x="3040" y="6384" />
		<entity schema="dw" name="google_question_answer" color="C7F4BE" x="3392" y="6384" />
		<entity schema="dw" name="google_question_patientfeedback" color="C7F4BE" x="3744" y="6384" />
		<entity schema="dw" name="google_review" color="BEBEF4" x="1728" y="6384" />
		<entity schema="dw" name="google_review_reply" color="BEBEF4" x="2096" y="6384" />
		<entity schema="dw" name="google_review_reply_approval" color="BEBEF4" x="2368" y="6384" />
		<entity schema="dw" name="groundtruth" color="BED3F4" x="3152" y="2288" />
		<entity schema="dw" name="listings_summary" color="BED3F4" x="3872" y="2784" />
		<entity schema="dw" name="listings_summary_fixed" color="BED3F4" x="3472" y="5408" />
		<entity schema="dw" name="menu" color="BED3F4" x="4096" y="3296" />
		<entity schema="dw" name="menu_old" color="BED3F4" x="4880" y="3920" />
		<entity schema="dw" name="metrics" color="BED3F4" x="4240" y="3648" />
		<entity schema="dw" name="online_appointment" color="BED3F4" x="4240" y="4208" />
		<entity schema="dw" name="online_appointment_email" color="BED3F4" x="5280" y="4848" />
		<entity schema="dw" name="online_referral" color="BED3F4" x="4944" y="4848" />
		<entity schema="dw" name="provider" color="BED3F4" x="4240" y="4528" />
		<entity schema="dw" name="provider_clientsite" color="BED3F4" x="1728" y="2464" />
		<entity schema="dw" name="provider_sitepath" color="BED3F4" x="1472" y="3056" />
		<entity schema="dw" name="qb_customer" color="BED3F4" x="3824" y="4528" />
		<entity schema="dw" name="qb_invoice" color="BED3F4" x="3152" y="4768" />
		<entity schema="dw" name="qb_invoice_line" color="BED3F4" x="1824" y="4592" />
		<entity schema="dw" name="qb_item" color="BED3F4" x="1824" y="4336" />
		<entity schema="dw" name="qb_term" color="BED3F4" x="3520" y="4096" />
		<entity schema="dw" name="qb_token" color="BED3F4" x="1456" y="2896" />
		<entity schema="dw" name="receipts" color="BED3F4" x="3520" y="4528" />
		<entity schema="dw" name="report" color="BED3F4" x="3520" y="4768" />
		<entity schema="dw" name="reporting_group" color="D1BEF4" x="4816" y="6384" />
		<entity schema="dw" name="reporting_group_call" color="D1BEF4" x="5488" y="6672" />
		<entity schema="dw" name="reporting_group_facebook" color="D1BEF4" x="5488" y="6384" />
		<entity schema="dw" name="reporting_group_web" color="D1BEF4" x="5152" y="6384" />
		<entity schema="dw" name="reviews_sql" color="BED3F4" x="2816" y="4768" />
		<entity schema="dw" name="reviews_sql2" color="BED3F4" x="1088" y="6384" />
		<entity schema="dw" name="reviews_sql_fixed" color="BED3F4" x="752" y="6384" />
		<entity schema="dw" name="scheduled_task_errors" color="BED3F4" x="3520" y="3888" />
		<entity schema="dw" name="sf_account" color="BED3F4" x="2480" y="4096" />
		<entity schema="dw" name="sf_campaign" color="BED3F4" x="2112" y="4032" />
		<entity schema="dw" name="sf_campaignmember" color="BED3F4" x="1808" y="4096" />
		<entity schema="dw" name="sf_contact" color="BED3F4" x="2112" y="4336" />
		<entity schema="dw" name="sf_task" color="BED3F4" x="2160" y="3664" />
		<entity schema="dw" name="socialmedia_text" color="BED3F4" x="2144" y="3296" />
		<entity schema="dw" name="tbl_pbi_appointments" color="BED3F4" x="2128" y="2736" />
		<entity schema="dw" name="tbl_pbi_calls" color="BED3F4" x="1808" y="3056" />
		<entity schema="dw" name="tbl_pbi_projects" color="BED3F4" x="1728" y="3344" />
		<entity schema="dw" name="testdate" color="BED3F4" x="2464" y="3056" />
		<entity schema="dw" name="testimonial" color="BEBEF4" x="400" y="5856" />
		<entity schema="dw" name="testimonial_clientsite" color="BEBEF4" x="1088" y="5856" />
		<entity schema="dw" name="testimonial_source" color="BEBEF4" x="736" y="5856" />
		<entity schema="dw" name="th_r" color="BED3F4" x="2128" y="2288" />
		<entity schema="dw" name="th_r_sav" color="BED3F4" x="1792" y="1920" />
		<entity schema="dw" name="ufiles" color="BED3F4" x="2464" y="2352" />
		<entity schema="dw" name="user" color="BED3F4" x="2816" y="2384" />
		<entity schema="dw" name="users" color="BED3F4" x="5024" y="6128" />
		<entity schema="dw" name="vw_appointment" color="BED3F4" x="3536" y="2288" />
		<entity schema="dw" name="vw_calendar" color="BED3F4" x="2848" y="1776" />
		<entity schema="dw" name="vw_calendar_reporting_month" color="C7F4BE" x="688" y="3680" />
		<entity schema="dw" name="vw_calendar_rolling24" color="C7F4BE" x="144" y="1584" />
		<entity schema="dw" name="vw_call" color="C7F4BE" x="320" y="3104" />
		<entity schema="dw" name="vw_campaign" color="C7F4BE" x="1008" y="3104" />
		<entity schema="dw" name="vw_campaign_channel_summary" color="C7F4BE" x="1008" y="3488" />
		<entity schema="dw" name="vw_campaign_old" color="C7F4BE" x="688" y="3104" />
		<entity schema="dw" name="vw_campaign_planned_spend" color="C7F4BE" x="352" y="2544" />
		<entity schema="dw" name="vw_campaign_planned_spend_fixed" color="C7F4BE" x="688" y="2480" />
		<entity schema="dw" name="vw_channelsummary" color="C7F4BE" x="48" y="1760" />
		<entity schema="dw" name="vw_chatbot_busiest_period" color="C7F4BE" x="48" y="3104" />
		<entity schema="dw" name="vw_client" color="C7F4BE" x="368" y="1760" />
		<entity schema="dw" name="vw_client_email" color="C7F4BE" x="768" y="1760" />
		<entity schema="dw" name="vw_client_ext_reviews" color="C7F4BE" x="432" y="1344" />
		<entity schema="dw" name="vw_client_ext_reviews_edit" color="C7F4BE" x="768" y="1344" />
		<entity schema="dw" name="vw_client_reportinggroup_monthlybudget" color="C7F4BE" x="1072" y="1760" />
		<entity schema="dw" name="vw_ecommunication" color="BED3F4" x="3152" y="1968" />
		<entity schema="dw" name="vw_ecommunication_mor" color="BED3F4" x="2816" y="1344" />
		<entity schema="dw" name="vw_eltoro_ads" color="BED3F4" x="3152" y="1616" />
		<entity schema="dw" name="vw_facebook_ads_demo" color="BED3F4" x="3536" y="1856" />
		<entity schema="dw" name="vw_facebook_ads_device" color="C7F4BE" x="1088" y="880" />
		<entity schema="dw" name="vw_facebook_ads_device_bydate" color="C7F4BE" x="752" y="464" />
		<entity schema="dw" name="vw_facebook_page_likes" color="C7F4BE" x="832" y="256" />
		<entity schema="dw" name="vw_facebook_post_mor" color="C7F4BE" x="1088" y="256" />
		<entity schema="dw" name="vw_google_locations" color="BED3F4" x="4208" y="2464" />
		<entity schema="dw" name="vw_google_locations_diff" color="F4DDBE" x="2192" y="992" />
		<entity schema="dw" name="vw_google_locations_pendingverification" color="F4DDBE" x="1856" y="688" />
		<entity schema="dw" name="vw_google_questions" color="F4DDBE" x="1456" y="48" />
		<entity schema="dw" name="vw_google_reviews" color="F4DDBE" x="1856" y="48" />
		<entity schema="dw" name="vw_google_reviews_org" color="F4DDBE" x="2256" y="48" />
		<entity schema="dw" name="vw_invoices" color="BED3F4" x="4384" y="3296" />
		<entity schema="dw" name="vw_invoices_all" color="D1BEF4" x="6272" y="912" />
		<entity schema="dw" name="vw_invoices_flatfee" color="D1BEF4" x="5872" y="912" />
		<entity schema="dw" name="vw_online" color="BED3F4" x="4528" y="3648" />
		<entity schema="dw" name="vw_online_appointment" color="BED3F4" x="4848" y="3648" />
		<entity schema="dw" name="vw_online_mor" color="BED3F4" x="5168" y="3648" />
		<entity schema="dw" name="vw_pbi_allreviews" color="BED3F4" x="4544" y="4032" />
		<entity schema="dw" name="vw_pbi_allreviews_new" color="F4DDBE" x="10448" y="2080" />
		<entity schema="dw" name="vw_pbi_allreviews_old" color="F4DDBE" x="10784" y="2176" />
		<entity schema="dw" name="vw_pbi_appointments" color="F4DDBE" x="10448" y="1760" />
		<entity schema="dw" name="vw_pbi_calendar" color="F4DDBE" x="11824" y="1344" />
		<entity schema="dw" name="vw_pbi_calendar_all" color="F4DDBE" x="12112" y="1344" />
		<entity schema="dw" name="vw_pbi_calls" color="BED3F4" x="8640" y="1344" />
		<entity schema="dw" name="vw_pbi_calls2" color="BED3F4" x="7456" y="1344" />
		<entity schema="dw" name="vw_pbi_campaignbudgets" color="BED3F4" x="6800" y="1344" />
		<entity schema="dw" name="vw_pbi_campaigns" color="BED3F4" x="7136" y="1344" />
		<entity schema="dw" name="vw_pbi_channels" color="BED3F4" x="8256" y="1344" />
		<entity schema="dw" name="vw_pbi_chatbotbusyperiods" color="BED3F4" x="8256" y="1584" />
		<entity schema="dw" name="vw_pbi_chatbotconversations" color="BED3F4" x="8256" y="1856" />
		<entity schema="dw" name="vw_pbi_chatbotinteractions" color="BED3F4" x="7936" y="1856" />
		<entity schema="dw" name="vw_pbi_chatbotstories" color="BED3F4" x="8560" y="1856" />
		<entity schema="dw" name="vw_pbi_client_providers" color="C7F4BE" x="13088" y="1344" />
		<entity schema="dw" name="vw_pbi_clientbudget" color="C7F4BE" x="13392" y="1344" />
		<entity schema="dw" name="vw_pbi_clientpersonnel" color="C7F4BE" x="13392" y="1568" />
		<entity schema="dw" name="vw_pbi_clients" color="C7F4BE" x="13040" y="1568" />
		<entity schema="dw" name="vw_pbi_clientzipcodes" color="C7F4BE" x="13712" y="1344" />
		<entity schema="dw" name="vw_pbi_dh_providers" color="F4DDBE" x="11760" y="1728" />
		<entity schema="dw" name="vw_pbi_fbpages" color="F4DDBE" x="12416" y="1728" />
		<entity schema="dw" name="vw_pbi_fbpglikes" color="F4DDBE" x="12416" y="1952" />
		<entity schema="dw" name="vw_pbi_fbposts" color="F4DDBE" x="12704" y="1728" />
		<entity schema="dw" name="vw_pbi_flatfee" color="F4DDBE" x="12112" y="1728" />
		<entity schema="dw" name="vw_pbi_googleanalytics" color="BED3F4" x="9344" y="1616" />
		<entity schema="dw" name="vw_pbi_googleanalytics_org" color="BED3F4" x="9664" y="2064" />
		<entity schema="dw" name="vw_pbi_googlepages" color="BED3F4" x="9344" y="2064" />
		<entity schema="dw" name="vw_pbi_googlereviews" color="BED3F4" x="9312" y="2480" />
		<entity schema="dw" name="vw_pbi_invoices" color="F4DDBE" x="10064" y="1408" />
		<entity schema="dw" name="vw_pbi_onlineapptsrefs" color="F4DDBE" x="11488" y="1344" />
		<entity schema="dw" name="vw_pbi_patientactivity" color="BED3F4" x="9344" y="1344" />
		<entity schema="dw" name="vw_pbi_patientemail" color="BED3F4" x="9680" y="1344" />
		<entity schema="dw" name="vw_pbi_providers" color="F4DDBE" x="11120" y="1344" />
		<entity schema="dw" name="vw_pbi_referringproviders" color="BED3F4" x="8992" y="1344" />
		<entity schema="dw" name="vw_pbi_reviews" color="C7F4BE" x="13712" y="1568" />
		<entity schema="dw" name="vw_pbi_vrm_accounts" color="F4DDBE" x="10464" y="1408" />
		<entity schema="dw" name="vw_pbi_vrm_campaignmembers" color="BED3F4" x="7136" y="1824" />
		<entity schema="dw" name="vw_pbi_vrm_campaigns" color="BED3F4" x="7088" y="2064" />
		<entity schema="dw" name="vw_pbi_vrm_contacts" color="F4DDBE" x="10784" y="1760" />
		<entity schema="dw" name="vw_pbi_vrm_tasks" color="F4DDBE" x="10784" y="1408" />
		<entity schema="dw" name="vw_pbi_workamajig" color="BED3F4" x="7456" y="1824" />
		<entity schema="dw" name="vw_provider" color="BED3F4" x="7840" y="1344" />
		<entity schema="dw" name="vw_reporting" color="BED3F4" x="4624" y="4528" />
		<entity schema="dw" name="vw_reporting_group" color="BED3F4" x="1472" y="4592" />
		<entity schema="dw" name="vw_reviews" color="BED3F4" x="4944" y="4528" />
		<entity schema="dw" name="vw_testimonial" color="BED3F4" x="4624" y="5200" />
		<entity schema="dw" name="vw_testimonial_org" color="BED3F4" x="5024" y="5200" />
		<entity schema="dw" name="vw_user" color="BED3F4" x="4624" y="4912" />
		<entity schema="dw" name="vw_workamajig" color="BED3F4" x="4240" y="5200" />
		<entity schema="dw" name="web_mor" color="BED3F4" x="3920" y="5200" />
		<entity schema="dw" name="workamajig_projects" color="BED3F4" x="3904" y="4848" />
		<entity schema="dw" name="workamajig_tasks" color="BED3F4" x="2128" y="1888" />
		<entity schema="dw" name="xxx_sf_fax" color="BED3F4" x="3472" y="5168" />
		<entity schema="dw" name="xxxfacebook_ad" color="BED3F4" x="3120" y="5168" />
		<entity schema="dw" name="xxxfacebook_ad_device" color="BED3F4" x="3472" y="5712" />
		<entity schema="dw" name="xxxvw_call_mor" color="BED3F4" x="2496" y="5152" />
		<entity schema="dw" name="xxxvw_facebook_ad" color="D1BEF4" x="7120" y="2480" />
		<entity schema="dw" name="xxxvw_facebook_demographics" color="D1BEF4" x="7504" y="2480" />
		<entity schema="dw" name="xxxvw_web_mor" color="D1BEF4" x="6800" y="2480" />
		<entity schema="dw" name="xxxweb" color="BED3F4" x="2480" y="4800" />
		<script name="SQL Editor" id="Editor-84f" language="SQL" >
			<string><![CDATA[SELECT
	call_id, client_id, call_datetime, call_source, call_duration, call_answered, caller_number, caller_name, caller_city, 
	caller_state, caller_zip, caller_country, destination_number, tracking_number, call_url, oi_caller_status, oi_caller_provider, 
	oi_caller_dob, oi_caller_name, oi_comment, oi_reviewer, oi_reviewer_duration, oi_reviewer_date, call_system, call_tags, call_category
FROM
	dw.`_calls` s;]]></string>
		</script>
		<browser id="Browse-1ac8" name="Relational Data Explorer" confirm_updates="y" >
			<browse_table schema="dw" entity="_calls" x="20" y="20" width="400" height="300" />
		</browser>
		<query id="Query-1fe9" name="Query Builder" >
			<query_table schema="dw" name="_calls" alias="_c" x="48" y="48" >
				<column name="call_id" />
				<column name="client_id" />
				<column name="call_datetime" />
				<column name="call_source" />
				<column name="call_duration" />
				<column name="call_answered" />
				<column name="caller_number" />
				<column name="caller_name" />
				<column name="caller_city" />
				<column name="caller_state" />
				<column name="caller_zip" />
				<column name="caller_country" />
				<column name="destination_number" />
				<column name="tracking_number" />
				<column name="call_url" />
				<column name="oi_caller_status" />
				<column name="oi_caller_provider" />
				<column name="oi_caller_dob" />
				<column name="oi_caller_name" />
				<column name="oi_comment" />
				<column name="oi_reviewer" />
				<column name="oi_reviewer_duration" />
				<column name="oi_reviewer_date" />
				<column name="call_system" />
				<column name="call_tags" />
				<column name="call_category" />
			</query_table>
		</query>
		<form name="Report" id="Report-48e" template="Page" css="container-fluid" view="frame" >
			<var name="samplePageNumber" type="4" value="0" mandatory="n" />
			<var name="sampleRecordsPerPage" type="4" value="100" mandatory="n" />
			<body name="Body" template="Grid" pos="0,0,0,0,f,f" layout="{{-2,-2,-2,-2,-1},{-2,-2,-2,-2}}" scroll="n" html="n" >
				<cell type="label" name="_calls Data" template="H3" pos="0,0,1,0,l,c" />
				<cell type="chart" name="Pie" template="Pie" pos="0,1,4,1,l,c" max_records="20" >
					<form_script type="DataSource" language="SQL" >
						<var name="call_id" />
						<var name="client_id" />
						<var name="call_datetime" type="93" />
						<var name="call_source" />
						<var name="call_duration" type="4" />
						<var name="call_answered" type="16" />
						<var name="caller_number" />
						<var name="caller_name" />
						<var name="caller_city" />
						<var name="caller_state" />
						<var name="caller_zip" />
						<var name="caller_country" />
						<var name="destination_number" />
						<var name="tracking_number" />
						<var name="call_url" />
						<var name="oi_caller_status" />
						<var name="oi_caller_provider" />
						<var name="oi_caller_dob" />
						<var name="oi_caller_name" />
						<var name="oi_comment" />
						<var name="oi_reviewer" />
						<var name="oi_reviewer_duration" type="4" />
						<var name="oi_reviewer_date" type="93" />
						<var name="call_system" />
						<var name="call_tags" />
						<var name="call_category" />
						<script ><![CDATA[SELECT * FROM dw.`_calls`]]></script>
					</form_script>
					<param name="i0" value="call_id" />
					<param name="width" value="100%" />
					<param name="v0" value="call_duration" />
					<param name="title" value="Sample Chart" />
					<param name="height" value="400px" />
				</cell>
				<tableview name="sample" template="Table" css="table table-striped table-sm table-hover" pos="0,2,4,2,f,f" layout="{{-2,-2,-2,-2,-2,-2,-2},{-2,-2}}" scroll="n" html="n" header_rows="1" >
					<form_script type="DataSource" language="SQL" >
						<var name="call_id" />
						<var name="client_id" />
						<var name="call_datetime" type="93" />
						<var name="call_source" />
						<var name="call_duration" type="4" />
						<var name="call_answered" type="16" />
						<var name="caller_number" />
						<var name="caller_name" />
						<var name="caller_city" />
						<var name="caller_state" />
						<var name="caller_zip" />
						<var name="caller_country" />
						<var name="destination_number" />
						<var name="tracking_number" />
						<var name="call_url" />
						<var name="oi_caller_status" />
						<var name="oi_caller_provider" />
						<var name="oi_caller_dob" />
						<var name="oi_caller_name" />
						<var name="oi_comment" />
						<var name="oi_reviewer" />
						<var name="oi_reviewer_duration" type="4" />
						<var name="oi_reviewer_date" type="93" />
						<var name="call_system" />
						<var name="call_tags" />
						<var name="call_category" />
						<script ><![CDATA[SELECT * FROM dw.`_calls`]]></script>
					</form_script>
					<cell type="label" name="call_id" pos="0,0,0,0,c,c" />
					<cell type="label" name="client_id" pos="1,0,1,0,c,c" />
					<cell type="label" name="call_datetime" pos="2,0,2,0,c,c" />
					<cell type="label" name="call_source" pos="3,0,3,0,c,c" />
					<cell type="label" name="call_duration" pos="4,0,4,0,c,c" />
					<cell type="label" name="call_answered" pos="5,0,5,0,c,c" />
					<cell type="label" name="Button can open other pages." pos="6,0,6,0,c,c" />
					<cell type="label" name="${call_id}" template="Plain" pos="0,1,0,1,l,c" />
					<cell type="label" name="${client_id}" template="Plain" pos="1,1,1,1,l,c" />
					<cell type="label" name="${call_datetime}" template="Plain" pos="2,1,2,1,l,c" />
					<cell type="label" name="${call_source}" template="Plain" pos="3,1,3,1,l,c" />
					<cell type="label" name="${call_duration}" template="Plain" pos="4,1,4,1,l,c" />
					<cell type="label" name="${call_answered}" template="Plain" pos="5,1,5,1,l,c" />
					<cell type="button" name="More" template="Plain" css="btn btn-sm btn-secondary" pos="6,1,6,1,c,c" ref_id="Report-48e" />
				</tableview>
				<cell type="href" name="" disabled="${samplePageNumber&lt;1}" pos="0,3,0,3,l,c" glyph="bi-chevron_double_left" ref_id="Report-48e" >
					<var name="samplePageNumber" value="0" />
				</cell>
				<cell type="href" name="" disabled="${samplePageNumber&lt;1}" pos="1,3,1,3,l,c" glyph="bi-chevron_left" ref_id="Report-48e" >
					<var name="samplePageNumber" value="${Math.max(0,samplePageNumber-1)}" />
				</cell>
				<cell type="label" name="Page ${samplePageNumber+1}" pos="2,3,2,3,l,c" />
				<cell type="href" name="" disabled="${!sampleHasNextPage}" pos="3,3,3,3,l,c" glyph="bi-chevron_right" ref_id="Report-48e" >
					<var name="samplePageNumber" value="${( samplePageNumber+1 )}" />
				</cell>
			</body>
		</form>
	</layout>
</project>